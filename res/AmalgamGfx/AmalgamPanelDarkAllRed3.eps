%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: AmalgamPanelDarkAllRed3.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Dale Johnson
%%CreationDate: 03/02/2019
%%BoundingBox: 0 0 151 380
%%HiResBoundingBox: 0 0 150.0866 380
%%CropBox: 0 0 150.0866 380
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 52 128 8%%BeginData: 13408 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0F27F8FD0927F8FD1727F87DFFF8272727F8272727F8272727F8%275227F827F827F827F827F8522727F827F827F827F827F8272727F82727%27F8272727F82752FFFD0E27FF7D272752275227525227A8275252275227%2752522752F8FD0B27F87DFFF827F827F827F827F827F827F8527DA827A8%7DFFA85227A87D7D52A8A85252A852FD04A852F827F827F827F827F827F8%F852FFFD0D277DFFA87D7D527D527D7DA8A87DA8527D52A8A8A8527D527D%52FD0B27F87DFF2727F8272727F8272727F82727A8277D7D7D277D277D7D%FF7D7D7DA8A87D7DA87DFD0552F8272727F8272727F827272752FF272727%F8272727F8272727F8272727F8FD0A2752A8A8FD0A27F8272727F8272727%F827F87DFFFD1B2752FD162752FF7D527D527D527D527D527D527D525252%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7C527D52A8FFF827F827F827F827F827F827F8270527F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F8F852FF27F8%27527D7D7DFD0527527D845227F8FD1027527D7D7D52FD0427527D7D7D28%27F87DFFF827527D2727597DF827F8527D28277D5227F827F827F827F827%F827F827F827F8527D5227525927F827277D5227527D27F852FF27277E27%F8F8277D52F8277D52F8F8277EFD1027537DF8F8F87D5227277D53F8F8F8%5953F87DFFF8277D27F8F8277D2727277D27F8F8277D52F8272727F82727%27F8272727F827F87D52F8F8F85952F827527DF8F8F87D52F852FF27277D%7D27277D5227272752842727597DFD102752842727527D272727527D5227%527D52F87DFFF827277D7D845227F827F82752847D7D2727F827F827F827%F827F827F827F827F827527D7D7D2727F827F8527D847D52F82752FFFD04%2752FD092752FD152752FD0C27F87DFFF827F8272727F8277D7D7D27F87D%5227F8FD0727F8272727F8272727F827F8522727F87D527D52F8527D2727%F82752FFFD04277DF8272752FF7DF8277DA8272727F8277DF8FD0627F827%A8F82727277D27F82727A87D27F8A8A87DF827F87DFFF827F8277D52F827%27FF5227277D7D27F8F8F8A8A827F827F827F8F8F87DA827F827F87D7D27%F8277D52F8277D7D5227F8F852FFFD042752522727A852A8272727522727%F87DFFFFFF27F8272727F87DFFFFFF27F82727522727F87D52FD04275227%27F87DFF2727F827F827F8FD0527F827F827F8F87DFFFFFFF8F82727F8F8%7DFFFFFF27F8F827F827F8272727F827F827F827272752FFFD102752F852%FFFF7DF8F8272727F827FFFFA8F82752FD0E27F87DFFF827F827F827F827%F827F827F852527D2727F82727F8F827F827F827F82727F8F827527D2727%F827F827F827F827F827F82752FF272727F852FD0427F827527D5252F827%2727F8F8F8FD0727F8F8F8FD0427527D7DFD062752272727F87DFFF827F8%F8527DF827275252522727F827F8272727F827F827F827F827F8272727F8%272727F827277D525227F8F8A8F8F8F82752FF27F8F827FFA852F8525227%F8FD0A277D5227F852F8FD0C27525227F8A8FF7DF827F87DFFF8F8F8A8FF%FFA8F8F827F827F827F827F827F827F8527D52527D527D5227F827F827F8%27F827F827F827F852FFFFFF52F8F852FF27F8F8A8FFFFFFF8FD0D2752A8%7DFD05A8FD0D27F852FFFFFF52F8F87DFF2727F852A8A827F8F827F82726%27F8272627F827F8275252527D52522727F8272627F8272627F8272727F8%F87DFF7DF8F82752FF272727FD05F8FD0F27F827F827F8FD0F27FD05F827%F87DFFF827F827F827F827F827F8272027F827F827F8272027F827F82720%27F827F827F8272027F8272027F827F827F827F827F82752FF272727F852%52FD05274493684B444420278C93206F6893448D684B4444204B8C8D446F%8C8D44FD04275252272727F87DFFF827F8272752F827F827F86844444468%2020F86844206844688D6844206944204468206868446844F827F8272752%2727F82752FF27F827527D7D7DFD0427688D684B44442027684420936869%449368454444204544446869688D20272727527D7D7D2727F87DFFF82752%7D2727597DF827F8682020448C2020F88C44206820F8684420208C442044%68446968442020F827277D5227527D27F852FF27277E27F8F8277D522727%2020204B686F204B686F204B2020204B20274493444B689320452027F827%277D59F8F8F87D53F87DFFF8277D27F8F8F87D2727F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F8272727527DF8F8F87D52%F852FF27277D7D27277D53FD10275252FD1027527D5205527D52F87DFFF8%27277D7DA85227F827F827F82752522727F827F827F8272752F827F827F8%27F82752522727F827F827F8527DA87D52F82752FFFD042752FD0727527D%7D52A852FD06275252FD0627527D7D52A852FD06275227282727F87DFFF8%272727F827F827F827F8275259F8F8277D2727F8FD042752F827F827F827%527DF8F8F87D2727F8272727F827F827F82752FFFD042752FD07277D27F8%F8F87D52FD05275252FD06277D52F8F8F85352FD05272827522727F87DFF%F827277D7D7D5227F827F8275259F8F8277D2727F827F8F852A8F827F827%F827527DF8F8277D2727F827F8527D7D7D52F8F852FF27277D7D27F87D7D%FD0427527D847DA852272727F827F852A8F8F8FD0427527DA87DA852FD04%27527D52F8527D52F87DFFF8277D27F8F8F87D2727F827F82752592727F8%27FD04F87DFF27FD04F827F827527D2727F827F8275259F8F8F87D52F852%FF27277D27F8F8277D52FD0427F827F8FD0527F827A8FFFFFF52F8F82727%27F827F8FD06277D53F8F8F87D52F87DFFF827527D2E527D52F827F82727%7D527D5252F827F8F87DFD05FF27F8F827277D527D527DF827F827277D52%52527D27F852FF272727527E7D7DFD0427F852A8A8A8FF7D27F8F8F8FD06%FF7DF8272752A8A87DFF7D2727522727277D7D7D2727F87DFFF827F827F8%27F827F87D272727FD05522727F8F87DFD05FF27F8F8272752527D5252F8%7DA852F827F827F827F82752FFFD06275227277D522727F8272727F82727%27F827FD04FF7DF8F8272727F8272727F8277DA852FD0427525227F87DFF%F8F8527D7DA87D7D27527D27F8F82752F827277D27F8F8277D7D52F8F8F8%5252F8F8F87DF8F8F852275227A87DA87DA852F852FF2727FD05A87D27F8%2727F8F8A8A827F87D5227F827FD07F8525227F87DFF52F8272727F87D7D%A87DA87D52F87DFFF8FD0727F827F827F87DFFFFA8F8F8272727FD05F827%F827F827F852FFFFFF27F8FD082752F82752FF272727F8272727F8272727%F8F8A8FFFFFF27F82727527D2727F827F8272727F8F87DFFFFFF52F8FD04%27F8272727F827F87DFFF827F827F827F827F827F827F852FFFF7DF8F827%F8527D52277D52527D27F827F827A8FFA8F8F827F827F827F827F827F827%52FFFD0B275252F82727F8F8272727527D52A87DA8A8FFFD0427F8272727%F87DFD0A27F87DFFF8272027F827F827F8275252F827F8F8F8272727F827%2752527D525252272727F827F8F8F827277D5227F827F827F827F82752FF%FD042752525227527D522727052727270527052705272E2E2727F8270527%0527052727270527277D5227275252522727F87DFFF827277D7D7D595252%27F827206844454468204544442068442044692044444520684421446820%27F85252537D7D7D5327F852FF27277D52F8F87D7D27F827056FFCB568B5%FC6F8CB58C93B0B568B5FC6F8CB58C93FCB544B5FC6F0527F8527D27F827%7D52F87DFFF8277D27F8F8F87D2727F82768B08C698CB0448DFC6868B08C%69FCB0448DFC6968B0686FFCB0202727275252F8F8F87D52F852FF27277D%2EF8F8527D522727F893FCB568B5FC698CB5688DFCB568B5FC6FFCB568B5%FC8D68B5FC27052727527D27F8277D52F87DFFF827527D52527D52F82727%27208C4420686820686844448C4444686820686820448C44446868F827F8%27277D53527D7D272052FF272727527D7D52FD0627052705270527052705%27F82727270527052705270527052705FD06277D7D7D2727F87DFFF827F8%27F827F827F827272720272727F8272727F8FD042776F827F8272727F8FD%0727F827F827F827F827F82752FFFD052726FD0527202705FD0927F82E2E%FD0B2705FD0727F8272727F87DFFF827F827F827F827F827F8F8050CF8F8%F827F827F827F8F80513F8F8F827F827F827F8F8F80DF8F8F827F827F827%F827F8F852FFFD052720FD0427F80536132EF8FD0527F827F82E1327F8F8%F8FD0527F8351335F8FD0527F8272727F87DFF2727F8272752FD0427F835%13351305F827F827F8F8F83513351305F8F8F827F827F80C13351305F827%F82727522727F82752FF2727527D847D7D2727F8F80C3C1435F84B527D52%27F80C133C133C1305F827527D52F8053C133C0020272752847D7D5227F8%7DFFF827527DF8F8527D277DF8F80C0DF8F8F8272727F8F80C3513351335%05F8F8272727F8F8051305F82752277D27F8277D27F852FF27277D27F8F8%277D522727FD05F8272727F827F835133C133C1327F8FD0527FD05F82727%7D52F8F8F8527DF87DFFF8277D52F8F8277DFD0427F827F827F8272727F8%F8053C133C1313F8F8F827F8272727F827F827F827527DF8F8F87D522752%FF2720537D52528452FD0D27F8200535132EF8F8F8FD0B27F8527D7D277D%7D27F87DFFF827F8527D7D5227F827F827F827F827F827F827FD09F827F8%27F827F827F827F827F827F852527D5252F8F852FFFD1727F8F8F827F8FD%1527F87DFF2727F827F827F8272727F8272727F8FD0527F827F827F827F8%27F827F827F827F8272727F8272727F827F827F827272752FFFD04275227%27F8FD0A277D7D52FD0827F8527DFD0B27F85227272027F87DFFF827277D%7D7D5227F827F827F827F827F8277D7D7DA87D7DA87D7DA87D2752A82727%F827F827F827F827F8527D7D7D52F82752FF27277D7D27277D59FD0A277D%277DA87D27A8A87D527D277D7D7DF8FD0827527D52F8527D52F87DFFF827%7D27F8F8007DFD0427F827F827F8FD0B27F8FD0527F827F827F827F82752%52F8F8F859522752FF27277E27F8F8527D27F82727270527272705272727%05FD0727052727270527272705272727F87D59F8F8F87D52F87DFFF82752%7D27527D59F827F827F82020272020F8272020F84520F82021F8202027F8%4420272020F827F827277D5227527D27F852FF272727527D7D7DFD042705%6FFCB544B5FC6F68B5686FFCB544B5FC6F8CB56893FCB544B5FC4B052727%27527D7D7D2E27F87DFF2727F8272752F8272727F82768B08C698CB0448D%FC8C68B08C68FCB0448DFC8D68B0686FFCB020272727F8272752F827F827%52FF272727F82752FD0527F893FC9368B5FC698CB5688DFC9368B58C6FFC%B06893FC8D68B5FC4B05272727F85252272727F87DFFF827F827F8522726%F827052768B068688CB0448C8C6968B06868FC8C44B0FC6868B068688CB0%2027F827F8052827F827F82752FF272727F8F8062FF8FD05272027F82720%27202720272027272720272027F8272027F82720FD0427F8F830F8202727%F87DFFF827F8F800373005F8272727F8272727F8272727F8FD042776F827%F8270527F8272727F8272727F820F82F302FF8F8F82752FF272727F83031%3730F8F8FD0D2720282EFD0F27F82837373728F827F87DFFF827F8F80D37%3137F8272727F827F827F827F827F827F8F80630F8F8F827F827F827F827%F827F82727F80037313700F8F8F852FF272727F827303605F8277D527D52%522727F8272727F826F82F3020F8F8F8272727F8272752527D5252F8F82F%3707F8F827F87DFF2727F827FD05F827F8272752527D52522727F8F8F828%30370705F8F8F8272752527D52272727F827FD05F827272752FFFD0527F8%27F8FD082752527D5227F828373731373027F827527D2727F8FD0727F827%F8272727F87DFFF827F827F827F827F827F827F827F827F827F827F8F80D%373037303700F8F827F827F827F827F827F827F827F827F827F82752FFFD%08277D7D52FD0827F827F830313731373128F8FD0A277D7D52FD0627F87D%FFF8272727F827277D52597D52F8272727F8272727F8F8063730373130F8%F8F827F8272727F827277D59527D7DFD0427F82752FFFD06277D52F8F852%7D27F8FD0727F8272937303600F8F8FD0727F8597DF8F8277D52F8272727%F87DFFF827F827F8275327F8F8F87D2727F827F827F827FD05F805FD05F8%27F827F827F8275252F8F8F87D5227F827F8F852FFFD06277D52F8F8597D%FD0B27F8F8F827F8FD0A27527D27F82E7D52FD0427F87DFF2727F8272627%27FD047D52F827F8FD0527F827F827F8F8F827F8272752F827F8FD0427FD%057D2727F827272752FF272727F8FD04275252522727F8FD04277D7D52FD%0827F87D7D52F8FD06275252522727F8272727F87DFFF827F827F827F827%F827F827F8522727F8277D7D7DA87D7DA87D7DA87D277D7D5227F8272727%F827F827F827F8522727F82752FF2727277D27F852527D527D5252A8A827%27277D277DA87D27A8A87D527D277DA87DF827527DF852527D7D7D5252A8%A82727F87DFFF827277D27277DA87DFFA87D27A87D27F8FD0F27F827F852%7D2727A87DA8A87D27A87D27F82752FF272727527D27FD04527D52272752%FD0627F8272727F8272727F8FD06277D5252527D5252522727522727F87D%FFF827F8272727F827F827F8272727F827F827F8272727F827F827F82727%27F827F827F827F827F827F827F8272727F827F8F852FF272752527E7D7D%FD042752847D7DFD0427527E7D7DFD0427527D7D7DFD0427527D7D7DFD04%27527D7D7D5227F87DFFF827527D2727597D2727527D2727537D2727527D%2727527D2727277D2727527D2727277E2E27527D2727277E5227527D27F8%52FF27277D27F8F8277D52277D27F8F8277D52277D2EF8F8277D52277D52%F8F8F87D52277D52F8F8F85952265352F8F8F85259F87DFFF8277D27F8F8%277D27275928F8F8F87D27275952F8F8F87D27275352F8F8F87D27275252%F8F8F87D2727527DF8F8F87D52F852FF27277D7D52277D5227277D7D5227%7D592727527D52277D7D5227527D52277D7D5227527D52277D7D5227527D%5927527D52F87DFFF827277D7D845227F82727537D845327F82727527D84%592EF82727527DA87D52F82727527DA87D52F82727527DA87D52F82752FF%FD0C2728FD0B2752FD1827F87DFFF827F827F827F827F827F827F8272727%F827F8272727F82752A87D272752F827F827F827F8272727F827F827F827%F827F8F852FFFD04277D527D52FD05277D7D52FD04277DFD04277D5227A8%A852FD0627527D52FD04277D527D5227F87DFF2727F8527D7D5252F827F8%275252277DF827F8277D52F8277D7DF8277DA8FD0427F827277D277D2727%F852FD047DF8F852FF272727FD0452FD0427527DFD0627F8527D2727FF7D%52F8525252F8FD04277D52FD06277D52522727F87DFFFD192752FD182752%FF7D527D527D527D527D527D527D527D527DFD05527DFD05527D527D527D%527D527D527D527D527D527D527D527D52A8FFF827F827F827F827F827F8%27F827F827F85227F82727F8FD0427F8F827F827F827F827F827F827F827%F827F827F827F8F852FFFD112752A827A8275227A852A8275227522752FD%1027F87DFFF827F827F827F827F827F827F827F827F8277D7D52277D7D7D%527D7DA87D7D527D27F827F827F827F827F827F827F827F8F852FFFD1127%F87DFF5252A8A8A852A8A8A87D7DFF7DF8FD0F27F87DFF2727F8272727F8%272727F8272727F8FD0427A8F87DA8A8FD047DA87D27FF2727F8272727F8%272727F8272727F827272752FFFD1B27F827277D7DFD1127F87DFFF827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F8272727F8%27F827F827F827F827F827F827F827F82752FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2019-02-03T23:22:17Z</xmp:CreateDate>
         <xmp:MetadataDate>2019-02-03T23:22:17Z</xmp:MetadataDate>
         <xmp:ModifyDate>2019-02-03T23:22:17Z</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>104</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAABoAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A4VirsVdirO/y9/LeHzTo&#xA;mtX09w9vcQL9W0KJSoF1qHoyXPoGob/dMDeG7Lv2xVQ8v/lF508waPa6rpcVtLBeiY2kMl1BDNJ9&#xA;WbjLwjlZCeHU+2KqL/lb5oj15NFkexS5mt0vLad762S3nhlb04zDKzhZC0g4ALU1xVM5Pyk1SWx0&#xA;aG1UwazcLqj60l7NFFbWq6XOInYuQAir+0Sx39sVQMf5S+b5Ndm0NPqR1KGOCRYWvbZPWNzH6kKQ&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>150.000000</stDim:w>
            <stDim:h>380.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>AlteDIN1451Mittelschrift</stFnt:fontName>
                  <stFnt:fontFamily>Alte DIN 1451 Mittelschrift</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 000.000</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>din1451alt.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>DSEG14Classic-Italic</stFnt:fontName>
                  <stFnt:fontFamily>DSEG14 Classic</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 0.3</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>DSEG14Classic-Italic.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:DocumentID>xmp.did:eeafe79e-8e5d-45b5-8666-f149d731c945</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:eeafe79e-8e5d-45b5-8666-f149d731c945</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:890483bc-d96a-4cbf-be6b-bdee55a19096</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:890483bc-d96a-4cbf-be6b-bdee55a19096</stEvt:instanceID>
                  <stEvt:when>2018-12-04T00:35:45Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a6b422b0-ebe1-48b5-a772-ef1fb0fa2bb2</stEvt:instanceID>
                  <stEvt:when>2018-12-24T14:58:47Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:eeafe79e-8e5d-45b5-8666-f149d731c945</stEvt:instanceID>
                  <stEvt:when>2019-02-03T23:22:17Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:a6b422b0-ebe1-48b5-a772-ef1fb0fa2bb2</stRef:instanceID>
            <stRef:documentID>xmp.did:a6b422b0-ebe1-48b5-a772-ef1fb0fa2bb2</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:890483bc-d96a-4cbf-be6b-bdee55a19096</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -380 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 380 li
150.087 380 li
150.087 0 li
cp
clp
.0864258 .00015821 mo
150.087 .00015821 li
150.087 380 li
.0864258 380 li
.0864258 .00015821 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.708217 .647669 .637629 .677302 cmyk
f
56.7622 373.933 mo
52.562 361.133 li
54.562 361.133 li
57.4619 370.833 li
57.4619 370.833 li
60.3618 361.133 li
62.3618 361.133 li
58.1621 373.933 li
56.7622 373.933 li
cp
0 0 0 0 cmyk
f
68.562 370.733 mo
68.562 370.033 li
66.4619 370.033 li
65.4619 370.033 64.8618 370.433 64.9619 371.133 cv
64.9619 371.433 65.062 371.733 65.3618 371.933 cv
65.6621 372.133 66.062 372.333 66.6621 372.333 cv
67.4619 372.333 67.9619 372.233 68.2622 372.033 cv
68.3618 371.933 68.562 371.433 68.562 370.733 cv
cp
68.562 373.933 mo
68.562 373.133 li
68.562 373.133 li
68.3618 373.433 68.1621 373.633 67.7622 373.833 cv
67.3618 374.033 66.9619 374.033 66.3618 374.033 cv
65.3618 374.033 64.562 373.733 64.062 373.233 cv
63.4619 372.733 63.2622 372.033 63.2622 371.233 cv
63.2622 370.433 63.4619 369.833 63.9619 369.333 cv
64.4619 368.833 65.1621 368.533 66.1621 368.533 cv
68.6621 368.533 li
68.6621 367.533 li
68.6621 366.733 68.062 366.333 66.8618 366.333 cv
66.4619 366.333 66.062 366.333 65.7622 366.433 cv
65.4619 366.533 65.2622 366.733 65.1621 367.033 cv
63.7622 365.933 li
64.4619 365.033 65.4619 364.533 66.7622 364.633 cv
67.8618 364.633 68.7622 364.833 69.4619 365.333 cv
70.1621 365.833 70.4619 366.533 70.4619 367.733 cv
70.4619 373.933 li
68.562 373.933 li
68.562 373.933 li
cp
f
72.3618 371.733 mo
72.3618 361.133 li
74.1621 361.133 li
74.1621 371.633 li
74.1621 372.033 74.3618 372.233 74.8618 372.233 cv
75.4619 372.233 li
75.4619 373.933 li
74.6621 373.933 li
73.9619 373.933 73.4619 373.733 72.9619 373.433 cv
72.562 373.133 72.3618 372.533 72.3618 371.733 cv
cp
f
76.9619 371.733 mo
76.9619 361.133 li
78.7617 361.133 li
78.7617 371.633 li
78.7617 372.033 78.9619 372.233 79.4619 372.233 cv
80.0615 372.233 li
80.0615 373.933 li
79.2617 373.933 li
78.5615 373.933 78.0615 373.733 77.5615 373.433 cv
77.1621 373.133 76.9619 372.533 76.9619 371.733 cv
cp
f
82.9619 368.533 mo
86.7617 368.533 li
86.7617 367.833 86.5615 367.333 86.1621 366.933 cv
85.7617 366.533 85.3623 366.433 84.8623 366.433 cv
84.3623 366.433 83.8623 366.633 83.4619 366.933 cv
83.1621 367.333 82.9619 367.833 82.9619 368.533 cv
cp
88.6621 370.033 mo
82.9619 370.033 li
82.9619 370.833 83.1621 371.333 83.5615 371.733 cv
83.9619 372.133 84.4619 372.333 85.1621 372.333 cv
85.9619 372.333 86.5615 372.033 87.1621 371.433 cv
88.4619 372.533 li
87.9619 373.033 87.4619 373.433 86.9619 373.633 cv
86.3623 373.833 85.7617 373.933 85.1621 373.933 cv
84.2617 373.933 83.3623 373.633 82.4619 373.033 cv
81.5615 372.433 81.1621 371.133 81.1621 369.333 cv
81.1621 367.533 81.5615 366.333 82.3623 365.633 cv
83.1621 364.933 84.0615 364.633 84.8623 364.633 cv
85.8623 364.633 86.7617 364.933 87.4619 365.633 cv
88.2617 366.333 88.5615 367.234 88.5615 368.433 cv
88.5615 370.033 li
88.6621 370.033 li
88.6621 370.033 li
cp
f
92.5615 373.633 mo
89.2617 364.833 li
91.1621 364.833 li
93.3623 371.233 li
93.3623 371.233 li
95.5615 364.833 li
97.4619 364.833 li
93.5615 375.833 li
93.2617 376.533 92.9619 377.033 92.4619 377.233 cv
91.9619 377.533 91.4619 377.633 90.9619 377.633 cv
90.3623 377.633 li
90.3623 375.933 li
90.8623 375.933 li
91.4619 375.933 91.7617 375.633 91.9619 375.133 cv
92.5615 373.633 li
cp
f
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
0 24.673 mo
150 24.673 li
@
0 356.673 mo
150 356.673 li
@
42.1001 12.9728 mo
45.7998 12.9728 li
45.5 12.173 45.2998 11.5734 45.2002 11.0734 cv
45.1001 10.5734 44.8999 10.2726 44.7998 9.87321 cv
44.7002 9.47281 44.6001 9.17301 44.5 8.77262 cv
44.3999 8.37321 44.2002 7.97281 44 7.27262 cv
43.7998 7.87321 43.6001 8.37321 43.5 8.77262 cv
43.3999 9.17301 43.2998 9.47281 43.1001 9.87321 cv
42.8999 10.2726 42.8999 10.5734 42.7002 11.0734 cv
42.5 11.5734 42.2998 12.2726 42.1001 12.9728 cv
cp
38.3999 17.5734 mo
43.1001 4.77262 li
44.7002 4.77262 li
49.3999 17.5734 li
47.3999 17.5734 li
46.3999 14.673 li
41.5 14.673 li
40.5 17.5734 li
38.3999 17.5734 li
cp
f
51 17.673 mo
51 8.47281 li
52.7998 8.47281 li
52.7998 9.47281 li
52.7998 9.47281 li
53.3999 8.77262 54.2002 8.37321 55.2002 8.37321 cv
55.7998 8.37321 56.2998 8.47281 56.7002 8.67301 cv
57.1001 8.87321 57.3999 9.17301 57.7998 9.47281 cv
58.5 8.67301 59.5 8.27262 60.7002 8.27262 cv
61.3999 8.27262 62.1001 8.5734 62.7998 9.0734 cv
63.5 9.5734 63.7998 10.3732 63.7998 11.4728 cv
63.7998 17.5734 li
62 17.5734 li
62 12.173 li
62 11.5734 61.7998 11.0734 61.5 10.7726 cv
61.2002 10.4728 60.7002 10.2726 60.2002 10.2726 cv
59.7002 10.2726 59.2002 10.4728 58.8999 10.7726 cv
58.6001 11.0734 58.3999 11.5734 58.3999 12.173 cv
58.3999 17.5734 li
56.6001 17.5734 li
56.6001 12.173 li
56.6001 11.5734 56.3999 11.0734 56.1001 10.7726 cv
55.7998 10.4728 55.2998 10.2726 54.7998 10.2726 cv
54.2998 10.2726 53.7998 10.4728 53.5 10.7726 cv
53.2002 11.0734 53 11.5734 53 12.173 cv
53 17.5734 li
51 17.5734 li
51 17.673 li
cp
f
71 14.4728 mo
71 13.7726 li
68.8999 13.7726 li
67.8999 13.7726 67.2998 14.173 67.3999 14.8732 cv
67.3999 15.173 67.5 15.4728 67.7998 15.673 cv
68.1001 15.8732 68.5 16.0734 69.1001 16.0734 cv
69.8999 16.0734 70.3999 15.9728 70.7002 15.7726 cv
70.8999 15.5734 71 15.173 71 14.4728 cv
cp
71 17.673 mo
71 16.8732 li
71 16.8732 li
70.7998 17.173 70.6001 17.3732 70.2002 17.5734 cv
69.7998 17.7726 69.3999 17.7726 68.7998 17.7726 cv
67.7998 17.7726 67 17.4728 66.5 16.9728 cv
65.8999 16.4728 65.7002 15.7726 65.7002 14.9728 cv
65.7002 14.173 65.8999 13.5734 66.3999 13.0734 cv
66.8999 12.5734 67.6001 12.2726 68.6001 12.2726 cv
71 12.2726 li
71 11.2726 li
71 10.4728 70.3999 10.0734 69.2002 10.0734 cv
68.7998 10.0734 68.3999 10.0734 68.1001 10.173 cv
67.7998 10.2726 67.6001 10.4728 67.5 10.7726 cv
66.1001 9.67301 li
66.7998 8.77262 67.7998 8.27262 69.1001 8.37321 cv
70.2002 8.37321 71.1001 8.5734 71.7998 9.0734 cv
72.5 9.5734 72.7998 10.2726 72.7998 11.4728 cv
72.7998 17.673 li
71 17.673 li
cp
f
74.7998 15.3732 mo
74.7998 4.77262 li
76.5996 4.77262 li
76.5996 15.2726 li
76.5996 15.673 76.7998 15.8732 77.2998 15.8732 cv
78 15.8732 li
78 17.5734 li
77.2002 17.5734 li
76.5 17.5734 76 17.3732 75.5 17.0734 cv
75 16.7726 74.7998 16.2726 74.7998 15.3732 cv
cp
f
81 13.0734 mo
81 13.7726 81 14.2726 81.0996 14.5734 cv
81.2002 14.8732 81.2002 15.0734 81.4004 15.2726 cv
81.5 15.4728 81.7002 15.5734 81.9004 15.7726 cv
82.0996 15.9728 82.4004 15.9728 82.7998 15.9728 cv
83.2002 15.9728 83.5 15.8732 83.7002 15.7726 cv
83.9004 15.673 84.0996 15.4728 84.2002 15.2726 cv
84.4004 15.0734 84.5 14.8732 84.5 14.5734 cv
84.5 14.2726 84.5996 13.8732 84.5996 13.0734 cv
84.5996 12.2726 84.5996 11.8732 84.5 11.5734 cv
84.4004 11.2726 84.4004 11.0734 84.2002 10.8732 cv
84.0996 10.673 83.9004 10.5734 83.7002 10.3732 cv
83.5 10.173 83.2002 10.173 82.7998 10.173 cv
82.4004 10.173 82.0996 10.2726 81.9004 10.3732 cv
81.7002 10.4728 81.5 10.673 81.4004 10.8732 cv
81.2002 11.0734 81.0996 11.2726 81.0996 11.5734 cv
81.0996 11.8732 81 12.3732 81 13.0734 cv
cp
84.5996 17.5734 mo
84.5996 16.673 li
84 17.3732 83.2002 17.7726 82.2002 17.7726 cv
81.5996 17.7726 81.0996 17.673 80.7002 17.3732 cv
80.2998 17.0734 80 16.8732 79.7998 16.5734 cv
79.5 16.2726 79.4004 15.8732 79.2998 15.4728 cv
79.2002 15.0734 79.2002 14.2726 79.2002 12.9728 cv
79.2002 11.673 79.2002 10.8732 79.2998 10.4728 cv
79.4004 10.0734 79.5996 9.77262 79.7998 9.37321 cv
80 9.0734 80.2998 8.87321 80.7002 8.5734 cv
81.0996 8.27262 81.5996 8.17301 82.2002 8.17301 cv
83.0996 8.17301 83.9004 8.5734 84.5996 9.27262 cv
84.5996 8.27262 li
86.4004 8.27262 li
86.4004 17.173 li
86.4004 18.5734 86 19.5734 85.2002 20.173 cv
84.4004 20.7726 83.5 21.173 82.4004 21.173 cv
81.7998 21.173 81.2002 21.0734 80.7002 20.7726 cv
80.2002 20.4728 79.7002 20.0734 79.2002 19.673 cv
80.5996 18.5734 li
80.7998 18.7726 81.0996 18.9728 81.4004 19.173 cv
81.7002 19.3732 82 19.3732 82.4004 19.3732 cv
83 19.3732 83.5 19.173 83.9004 18.8732 cv
84.2998 18.5734 84.5996 18.2726 84.5996 17.5734 cv
cp
f
93.5996 14.4728 mo
93.5996 13.7726 li
91.5 13.7726 li
90.5 13.7726 89.9004 14.173 90 14.8732 cv
90 15.173 90.0996 15.4728 90.4004 15.673 cv
90.7002 15.8732 91.0996 16.0734 91.7002 16.0734 cv
92.5 16.0734 93 15.9728 93.2998 15.7726 cv
93.5 15.5734 93.5996 15.173 93.5996 14.4728 cv
cp
93.5996 17.673 mo
93.5996 16.8732 li
93.5996 16.8732 li
93.4004 17.173 93.2002 17.3732 92.7998 17.5734 cv
92.4004 17.7726 92 17.7726 91.4004 17.7726 cv
90.4004 17.7726 89.5996 17.4728 89.0996 16.9728 cv
88.5 16.4728 88.2998 15.7726 88.2998 14.9728 cv
88.2998 14.173 88.5 13.5734 89 13.0734 cv
89.5 12.5734 90.2002 12.2726 91.2002 12.2726 cv
93.7002 12.2726 li
93.7002 11.2726 li
93.7002 10.4728 93.0996 10.0734 91.9004 10.0734 cv
91.5 10.0734 91.0996 10.0734 90.7998 10.173 cv
90.5 10.2726 90.2998 10.4728 90.2002 10.7726 cv
88.7998 9.67301 li
89.5 8.77262 90.5 8.27262 91.7998 8.37321 cv
92.9004 8.37321 93.7998 8.5734 94.5 9.0734 cv
95.2002 9.5734 95.5 10.2726 95.5 11.4728 cv
95.5 17.673 li
93.5996 17.673 li
cp
f
97.5996 17.673 mo
97.5996 8.47281 li
99.4004 8.47281 li
99.4004 9.47281 li
99.4004 9.47281 li
100 8.77262 100.8 8.37321 101.8 8.37321 cv
102.4 8.37321 102.9 8.47281 103.3 8.67301 cv
103.7 8.87321 104 9.17301 104.4 9.47281 cv
105.1 8.67301 106.1 8.27262 107.3 8.27262 cv
108 8.27262 108.7 8.5734 109.4 9.0734 cv
110.1 9.5734 110.4 10.3732 110.4 11.4728 cv
110.4 17.5734 li
108.6 17.5734 li
108.6 12.173 li
108.6 11.5734 108.4 11.0734 108.1 10.7726 cv
107.8 10.4728 107.3 10.2726 106.8 10.2726 cv
106.3 10.2726 105.8 10.4728 105.5 10.7726 cv
105.2 11.0734 105 11.5734 105 12.173 cv
105 17.5734 li
103 17.5734 li
103 12.173 li
103 11.5734 102.8 11.0734 102.5 10.7726 cv
102.2 10.4728 101.7 10.2726 101.2 10.2726 cv
100.7 10.2726 100.2 10.4728 99.9004 10.7726 cv
99.5996 11.0734 99.4004 11.5734 99.4004 12.173 cv
99.4004 17.5734 li
97.5996 17.5734 li
97.5996 17.673 li
cp
f
14.9541 49.1398 mo
9.25391 49.1398 4.6543 44.5402 4.6543 38.84 cv
4.6543 33.1398 9.25391 28.5402 14.9541 28.5402 cv
20.6543 28.5402 25.2539 33.1398 25.2539 38.84 cv
25.2539 44.5402 20.6543 49.1398 14.9541 49.1398 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
14.9541 49.1398 mo
9.25391 49.1398 4.6543 44.5402 4.6543 38.84 cv
4.6543 33.1398 9.25391 28.5402 14.9541 28.5402 cv
20.6543 28.5402 25.2539 33.1398 25.2539 38.84 cv
25.2539 44.5402 20.6543 49.1398 14.9541 49.1398 cv
.749721 .679194 .670497 .901457 cmyk
@
14.9541 46.84 mo
10.5542 46.84 6.9541 43.2394 6.9541 38.84 cv
6.9541 34.4396 10.5542 30.84 14.9541 30.84 cv
19.354 30.84 22.9541 34.4396 22.9541 38.84 cv
22.9541 43.2394 19.354 46.84 14.9541 46.84 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
14.9541 46.84 mo
10.5542 46.84 6.9541 43.2394 6.9541 38.84 cv
6.9541 34.4396 10.5542 30.84 14.9541 30.84 cv
19.354 30.84 22.9541 34.4396 22.9541 38.84 cv
22.9541 43.2394 19.354 46.84 14.9541 46.84 cv
.740902 .625055 .575372 .495155 cmyk
@
14.9541 46.6398 mo
10.6543 46.6398 7.25391 43.34 7.25391 39.34 cv
7.25391 35.34 10.7539 32.0402 14.9541 32.0402 cv
19.1543 32.0402 22.6543 35.34 22.6543 39.34 cv
22.6543 43.34 19.2539 46.6398 14.9541 46.6398 cv
.456001 .333349 .326757 .00714122 cmyk
f
20.0542 39.84 mo
20.0542 42.6398 17.7539 45.0402 14.9541 45.0402 cv
12.1543 45.0402 9.854 42.7394 9.854 39.84 cv
9.854 37.0402 12.1543 34.6398 14.9541 34.6398 cv
17.7539 34.6398 20.0542 36.9396 20.0542 39.84 cv
.116976 .0572824 .0719005 0 cmyk
f
20.0542 38.84 mo
20.0542 41.6398 17.7539 43.9396 14.9541 43.9396 cv
12.1543 43.9396 9.854 41.6398 9.854 38.84 cv
9.854 36.0402 12.1543 33.7394 14.9541 33.7394 cv
17.7539 33.7394 20.0542 36.0402 20.0542 38.84 cv
.749721 .679194 .670497 .901457 cmyk
f
41.9541 49.1398 mo
36.2539 49.1398 31.6543 44.5402 31.6543 38.84 cv
31.6543 33.1398 36.2539 28.5402 41.9541 28.5402 cv
47.6543 28.5402 52.2539 33.1398 52.2539 38.84 cv
52.2539 44.5402 47.6543 49.1398 41.9541 49.1398 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
41.9541 49.1398 mo
36.2539 49.1398 31.6543 44.5402 31.6543 38.84 cv
31.6543 33.1398 36.2539 28.5402 41.9541 28.5402 cv
47.6543 28.5402 52.2539 33.1398 52.2539 38.84 cv
52.2539 44.5402 47.6543 49.1398 41.9541 49.1398 cv
.749721 .679194 .670497 .901457 cmyk
@
41.9541 46.84 mo
37.5542 46.84 33.9541 43.2394 33.9541 38.84 cv
33.9541 34.4396 37.5542 30.84 41.9541 30.84 cv
46.354 30.84 49.9541 34.4396 49.9541 38.84 cv
49.9541 43.2394 46.354 46.84 41.9541 46.84 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
41.9541 46.84 mo
37.5542 46.84 33.9541 43.2394 33.9541 38.84 cv
33.9541 34.4396 37.5542 30.84 41.9541 30.84 cv
46.354 30.84 49.9541 34.4396 49.9541 38.84 cv
49.9541 43.2394 46.354 46.84 41.9541 46.84 cv
.740902 .625055 .575372 .495155 cmyk
@
41.9541 46.6398 mo
37.6543 46.6398 34.2539 43.34 34.2539 39.34 cv
34.2539 35.34 37.7539 32.0402 41.9541 32.0402 cv
46.2539 32.0402 49.6543 35.34 49.6543 39.34 cv
49.6543 43.34 46.2539 46.6398 41.9541 46.6398 cv
.456001 .333349 .326757 .00714122 cmyk
f
47.0542 39.84 mo
47.0542 42.6398 44.7539 45.0402 41.9541 45.0402 cv
39.1543 45.0402 36.854 42.7394 36.854 39.84 cv
36.854 37.0402 39.1543 34.6398 41.9541 34.6398 cv
44.7539 34.6398 47.0542 36.9396 47.0542 39.84 cv
.116976 .0572824 .0719005 0 cmyk
f
47.0542 38.84 mo
47.0542 41.6398 44.7539 43.9396 41.9541 43.9396 cv
39.1543 43.9396 36.854 41.6398 36.854 38.84 cv
36.854 36.0402 39.1543 33.7394 41.9541 33.7394 cv
44.7539 33.7394 47.0542 36.0402 47.0542 38.84 cv
.749721 .679194 .670497 .901457 cmyk
f
134.954 49.1398 mo
129.254 49.1398 124.654 44.5402 124.654 38.84 cv
124.654 33.1398 129.254 28.5402 134.954 28.5402 cv
140.654 28.5402 145.254 33.1398 145.254 38.84 cv
145.254 44.5402 140.554 49.1398 134.954 49.1398 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
134.954 49.1398 mo
129.254 49.1398 124.654 44.5402 124.654 38.84 cv
124.654 33.1398 129.254 28.5402 134.954 28.5402 cv
140.654 28.5402 145.254 33.1398 145.254 38.84 cv
145.254 44.5402 140.554 49.1398 134.954 49.1398 cv
.749721 .679194 .670497 .901457 cmyk
@
134.954 46.84 mo
130.554 46.84 126.954 43.2394 126.954 38.84 cv
126.954 34.4396 130.554 30.84 134.954 30.84 cv
139.354 30.84 142.954 34.4396 142.954 38.84 cv
142.954 43.2394 139.354 46.84 134.954 46.84 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
134.954 46.84 mo
130.554 46.84 126.954 43.2394 126.954 38.84 cv
126.954 34.4396 130.554 30.84 134.954 30.84 cv
139.354 30.84 142.954 34.4396 142.954 38.84 cv
142.954 43.2394 139.354 46.84 134.954 46.84 cv
.740902 .625055 .575372 .495155 cmyk
@
134.954 46.6398 mo
130.654 46.6398 127.254 43.34 127.254 39.34 cv
127.254 35.34 130.754 32.0402 134.954 32.0402 cv
139.254 32.0402 142.654 35.34 142.654 39.34 cv
142.654 43.34 139.154 46.6398 134.954 46.6398 cv
.456001 .333349 .326757 .00714122 cmyk
f
140.054 39.84 mo
140.054 42.6398 137.754 45.0402 134.954 45.0402 cv
132.154 45.0402 129.854 42.7394 129.854 39.84 cv
129.854 37.0402 132.154 34.6398 134.954 34.6398 cv
137.754 34.6398 140.054 36.9396 140.054 39.84 cv
.116976 .0572824 .0719005 0 cmyk
f
140.054 38.84 mo
140.054 41.6398 137.754 43.9396 134.954 43.9396 cv
132.154 43.9396 129.854 41.6398 129.854 38.84 cv
129.854 36.0402 132.154 33.7394 134.954 33.7394 cv
137.754 33.7394 140.054 36.0402 140.054 38.84 cv
.749721 .679194 .670497 .901457 cmyk
f
107.954 49.1398 mo
102.254 49.1398 97.6543 44.5402 97.6543 38.84 cv
97.6543 33.1398 102.254 28.5402 107.954 28.5402 cv
113.654 28.5402 118.254 33.1398 118.254 38.84 cv
118.254 44.5402 113.554 49.1398 107.954 49.1398 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
107.954 49.1398 mo
102.254 49.1398 97.6543 44.5402 97.6543 38.84 cv
97.6543 33.1398 102.254 28.5402 107.954 28.5402 cv
113.654 28.5402 118.254 33.1398 118.254 38.84 cv
118.254 44.5402 113.554 49.1398 107.954 49.1398 cv
.749721 .679194 .670497 .901457 cmyk
@
107.954 46.84 mo
103.554 46.84 99.9541 43.2394 99.9541 38.84 cv
99.9541 34.4396 103.554 30.84 107.954 30.84 cv
112.354 30.84 115.954 34.4396 115.954 38.84 cv
115.954 43.2394 112.354 46.84 107.954 46.84 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
107.954 46.84 mo
103.554 46.84 99.9541 43.2394 99.9541 38.84 cv
99.9541 34.4396 103.554 30.84 107.954 30.84 cv
112.354 30.84 115.954 34.4396 115.954 38.84 cv
115.954 43.2394 112.354 46.84 107.954 46.84 cv
.740902 .625055 .575372 .495155 cmyk
@
107.954 46.6398 mo
103.654 46.6398 100.254 43.34 100.254 39.34 cv
100.254 35.34 103.754 32.0402 107.954 32.0402 cv
112.254 32.0402 115.654 35.34 115.654 39.34 cv
115.654 43.34 112.154 46.6398 107.954 46.6398 cv
.456001 .333349 .326757 .00714122 cmyk
f
113.054 39.84 mo
113.054 42.6398 110.754 45.0402 107.954 45.0402 cv
105.154 45.0402 102.854 42.7394 102.854 39.84 cv
102.854 37.0402 105.154 34.6398 107.954 34.6398 cv
110.754 34.6398 113.054 36.9396 113.054 39.84 cv
.116976 .0572824 .0719005 0 cmyk
f
113.054 38.84 mo
113.054 41.6398 110.754 43.9396 107.954 43.9396 cv
105.154 43.9396 102.854 41.6398 102.854 38.84 cv
102.854 36.0402 105.154 33.7394 107.954 33.7394 cv
110.754 33.7394 113.054 36.0402 113.054 38.84 cv
.749721 .679194 .670497 .901457 cmyk
f
12.5 59.673 mo
12.5 51.8732 li
13.7002 51.8732 li
13.7002 58.5734 li
17.5 58.5734 li
17.5 59.673 li
12.5 59.673 li
cp
0 0 0 0 cmyk
f
40.2998 52.9728 mo
40.2998 55.3732 li
42.1001 55.3732 li
42.5 55.3732 42.8999 55.2726 43.1001 54.9728 cv
43.2998 54.673 43.3999 54.4728 43.3999 54.0734 cv
43.3999 53.673 43.2998 53.3732 43 53.173 cv
42.7998 52.9728 42.5 52.9728 42.1001 52.9728 cv
40.2998 52.9728 li
cp
39.1001 59.673 mo
39.1001 51.8732 li
42.2002 51.8732 li
42.8999 51.8732 43.3999 52.0734 43.7998 52.3732 cv
44 52.5734 44.2002 52.7726 44.3999 53.0734 cv
44.6001 53.3732 44.6001 53.673 44.6001 54.0734 cv
44.6001 54.5734 44.5 55.0734 44.2002 55.3732 cv
43.8999 55.7726 43.6001 56.0734 43.1001 56.173 cv
44.8999 59.673 li
43.5 59.673 li
41.8999 56.3732 li
40.3999 56.3732 li
40.3999 59.673 li
39.1001 59.673 li
cp
f
31 62.0734 mo
28.5 57.8732 li
26 62.0734 li
24.1001 62.0734 li
27.6001 56.2726 li
24.2998 50.7726 li
26.2998 50.7726 li
28.6001 54.673 li
30.8999 50.7726 li
32.8999 50.7726 li
29.5 56.173 li
33 61.9728 li
31 61.9728 li
31 62.0734 li
cp
f
63 339.973 mo
57.2998 339.973 52.7002 335.373 52.7002 329.673 cv
52.7002 323.973 57.2998 319.373 63 319.373 cv
68.7002 319.373 73.2998 323.973 73.2998 329.673 cv
73.2998 335.373 68.7002 339.973 63 339.973 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
63 339.973 mo
57.2998 339.973 52.7002 335.373 52.7002 329.673 cv
52.7002 323.973 57.2998 319.373 63 319.373 cv
68.7002 319.373 73.2998 323.973 73.2998 329.673 cv
73.2998 335.373 68.7002 339.973 63 339.973 cv
.749721 .679194 .670497 .901457 cmyk
@
63 337.673 mo
58.6001 337.673 55 334.073 55 329.673 cv
55 325.273 58.6001 321.673 63 321.673 cv
67.3999 321.673 71 325.273 71 329.673 cv
71 334.073 67.3999 337.673 63 337.673 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
63 337.673 mo
58.6001 337.673 55 334.073 55 329.673 cv
55 325.273 58.6001 321.673 63 321.673 cv
67.3999 321.673 71 325.273 71 329.673 cv
71 334.073 67.3999 337.673 63 337.673 cv
.740902 .625055 .575372 .495155 cmyk
@
63 337.473 mo
58.7002 337.473 55.2998 334.173 55.2998 330.173 cv
55.2998 326.173 58.7998 322.873 63 322.873 cv
67.2002 322.873 70.7002 326.173 70.7002 330.173 cv
70.7002 334.173 67.2998 337.473 63 337.473 cv
.456001 .333349 .326757 .00714122 cmyk
f
68.1001 330.673 mo
68.1001 333.473 65.7998 335.873 63 335.873 cv
60.2002 335.873 57.8999 333.573 57.8999 330.673 cv
57.8999 327.873 60.2002 325.473 63 325.473 cv
65.7998 325.473 68.1001 327.773 68.1001 330.673 cv
.116976 .0572824 .0719005 0 cmyk
f
68.1001 329.673 mo
68.1001 332.473 65.7998 334.773 63 334.773 cv
60.2002 334.773 57.8999 332.473 57.8999 329.673 cv
57.8999 326.873 60.2002 324.573 63 324.573 cv
65.7998 324.573 68.1001 326.873 68.1001 329.673 cv
.749721 .679194 .670497 .901457 cmyk
f
111 339.973 mo
105.3 339.973 100.7 335.373 100.7 329.673 cv
100.7 323.973 105.3 319.373 111 319.373 cv
116.7 319.373 121.3 323.973 121.3 329.673 cv
121.3 335.373 116.7 339.973 111 339.973 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
111 339.973 mo
105.3 339.973 100.7 335.373 100.7 329.673 cv
100.7 323.973 105.3 319.373 111 319.373 cv
116.7 319.373 121.3 323.973 121.3 329.673 cv
121.3 335.373 116.7 339.973 111 339.973 cv
.749721 .679194 .670497 .901457 cmyk
@
111 337.673 mo
106.6 337.673 103 334.073 103 329.673 cv
103 325.273 106.6 321.673 111 321.673 cv
115.4 321.673 119 325.273 119 329.673 cv
119 334.073 115.4 337.673 111 337.673 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
111 337.673 mo
106.6 337.673 103 334.073 103 329.673 cv
103 325.273 106.6 321.673 111 321.673 cv
115.4 321.673 119 325.273 119 329.673 cv
119 334.073 115.4 337.673 111 337.673 cv
.740902 .625055 .575372 .495155 cmyk
@
111 337.473 mo
106.7 337.473 103.3 334.173 103.3 330.173 cv
103.3 326.173 106.8 322.873 111 322.873 cv
115.2 322.873 118.7 326.173 118.7 330.173 cv
118.7 334.173 115.3 337.473 111 337.473 cv
.456001 .333349 .326757 .00714122 cmyk
f
116.1 330.673 mo
116.1 333.473 113.8 335.873 111 335.873 cv
108.2 335.873 105.9 333.573 105.9 330.673 cv
105.9 327.873 108.2 325.473 111 325.473 cv
113.8 325.473 116.1 327.773 116.1 330.673 cv
.116976 .0572824 .0719005 0 cmyk
f
116.1 329.673 mo
116.1 332.473 113.8 334.773 111 334.773 cv
108.2 334.773 105.9 332.473 105.9 329.673 cv
105.9 326.873 108.2 324.573 111 324.573 cv
113.8 324.573 116.1 326.873 116.1 329.673 cv
.749721 .679194 .670497 .901457 cmyk
f
135 339.973 mo
129.3 339.973 124.7 335.373 124.7 329.673 cv
124.7 323.973 129.3 319.373 135 319.373 cv
140.7 319.373 145.3 323.973 145.3 329.673 cv
145.3 335.373 140.7 339.973 135 339.973 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
135 339.973 mo
129.3 339.973 124.7 335.373 124.7 329.673 cv
124.7 323.973 129.3 319.373 135 319.373 cv
140.7 319.373 145.3 323.973 145.3 329.673 cv
145.3 335.373 140.7 339.973 135 339.973 cv
.749721 .679194 .670497 .901457 cmyk
@
135 337.673 mo
130.6 337.673 127 334.073 127 329.673 cv
127 325.273 130.6 321.673 135 321.673 cv
139.4 321.673 143 325.273 143 329.673 cv
143 334.073 139.4 337.673 135 337.673 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
135 337.673 mo
130.6 337.673 127 334.073 127 329.673 cv
127 325.273 130.6 321.673 135 321.673 cv
139.4 321.673 143 325.273 143 329.673 cv
143 334.073 139.4 337.673 135 337.673 cv
.740902 .625055 .575372 .495155 cmyk
@
135 337.473 mo
130.7 337.473 127.3 334.173 127.3 330.173 cv
127.3 326.173 130.8 322.873 135 322.873 cv
139.2 322.873 142.7 326.173 142.7 330.173 cv
142.7 334.173 139.3 337.473 135 337.473 cv
.456001 .333349 .326757 .00714122 cmyk
f
140.1 330.673 mo
140.1 333.473 137.8 335.873 135 335.873 cv
132.2 335.873 129.9 333.573 129.9 330.673 cv
129.9 327.873 132.2 325.473 135 325.473 cv
137.8 325.473 140.1 327.773 140.1 330.673 cv
.116976 .0572824 .0719005 0 cmyk
f
140.1 329.673 mo
140.1 332.473 137.8 334.773 135 334.773 cv
132.2 334.773 129.9 332.473 129.9 329.673 cv
129.9 326.873 132.2 324.573 135 324.573 cv
137.8 324.573 140.1 326.873 140.1 329.673 cv
.749721 .679194 .670497 .901457 cmyk
f
26.9541 305.489 mo
21.2539 305.489 16.6543 300.89 16.6543 295.19 cv
16.6543 289.489 21.2539 284.89 26.9541 284.89 cv
32.6543 284.89 37.2539 289.489 37.2539 295.19 cv
37.2539 300.89 32.6543 305.489 26.9541 305.489 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
26.9541 305.489 mo
21.2539 305.489 16.6543 300.89 16.6543 295.19 cv
16.6543 289.489 21.2539 284.89 26.9541 284.89 cv
32.6543 284.89 37.2539 289.489 37.2539 295.19 cv
37.2539 300.89 32.6543 305.489 26.9541 305.489 cv
.749721 .679194 .670497 .901457 cmyk
@
26.9541 303.19 mo
22.5542 303.19 18.9541 299.589 18.9541 295.19 cv
18.9541 290.789 22.5542 287.19 26.9541 287.19 cv
31.354 287.19 34.9541 290.789 34.9541 295.19 cv
34.9541 299.589 31.354 303.19 26.9541 303.19 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
26.9541 303.19 mo
22.5542 303.19 18.9541 299.589 18.9541 295.19 cv
18.9541 290.789 22.5542 287.19 26.9541 287.19 cv
31.354 287.19 34.9541 290.789 34.9541 295.19 cv
34.9541 299.589 31.354 303.19 26.9541 303.19 cv
.740902 .625055 .575372 .495155 cmyk
@
26.9541 302.989 mo
22.6543 302.989 19.2539 299.69 19.2539 295.69 cv
19.2539 291.69 22.7539 288.39 26.9541 288.39 cv
31.1543 288.39 34.6543 291.69 34.6543 295.69 cv
34.6543 299.69 31.2539 302.989 26.9541 302.989 cv
.456001 .333349 .326757 .00714122 cmyk
f
32.0542 296.19 mo
32.0542 298.989 29.7539 301.39 26.9541 301.39 cv
24.1543 301.39 21.854 299.089 21.854 296.19 cv
21.854 293.39 24.1543 290.989 26.9541 290.989 cv
29.7539 290.989 32.0542 293.289 32.0542 296.19 cv
.116976 .0572824 .0719005 0 cmyk
f
32.0542 295.19 mo
32.0542 297.989 29.7539 300.289 26.9541 300.289 cv
24.1543 300.289 21.854 297.989 21.854 295.19 cv
21.854 292.39 24.1543 290.089 26.9541 290.089 cv
29.7539 290.089 32.0542 292.39 32.0542 295.19 cv
.749721 .679194 .670497 .901457 cmyk
f
87 339.973 mo
81.2998 339.973 76.7002 335.373 76.7002 329.673 cv
76.7002 323.973 81.2998 319.373 87 319.373 cv
92.7002 319.373 97.2998 323.973 97.2998 329.673 cv
97.2998 335.373 92.7002 339.973 87 339.973 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
87 339.973 mo
81.2998 339.973 76.7002 335.373 76.7002 329.673 cv
76.7002 323.973 81.2998 319.373 87 319.373 cv
92.7002 319.373 97.2998 323.973 97.2998 329.673 cv
97.2998 335.373 92.7002 339.973 87 339.973 cv
.749721 .679194 .670497 .901457 cmyk
@
87 337.673 mo
82.5996 337.673 79 334.073 79 329.673 cv
79 325.273 82.5996 321.673 87 321.673 cv
91.4004 321.673 95 325.273 95 329.673 cv
95 334.073 91.4004 337.673 87 337.673 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
87 337.673 mo
82.5996 337.673 79 334.073 79 329.673 cv
79 325.273 82.5996 321.673 87 321.673 cv
91.4004 321.673 95 325.273 95 329.673 cv
95 334.073 91.4004 337.673 87 337.673 cv
.740902 .625055 .575372 .495155 cmyk
@
87 337.473 mo
82.7002 337.473 79.2998 334.173 79.2998 330.173 cv
79.2998 326.173 82.7998 322.873 87 322.873 cv
91.2998 322.873 94.7002 326.173 94.7002 330.173 cv
94.7002 334.173 91.2998 337.473 87 337.473 cv
.456001 .333349 .326757 .00714122 cmyk
f
92.0996 330.673 mo
92.0996 333.473 89.7998 335.873 87 335.873 cv
84.2002 335.873 81.9004 333.573 81.9004 330.673 cv
81.9004 327.873 84.2002 325.473 87 325.473 cv
89.7998 325.473 92.0996 327.773 92.0996 330.673 cv
.116976 .0572824 .0719005 0 cmyk
f
92.0996 329.673 mo
92.0996 332.473 89.7998 334.773 87 334.773 cv
84.2002 334.773 81.9004 332.473 81.9004 329.673 cv
81.9004 326.873 84.2002 324.573 87 324.573 cv
89.7998 324.573 92.0996 326.873 92.0996 329.673 cv
.749721 .679194 .670497 .901457 cmyk
f
60.5 351.573 mo
60.5 343.773 li
61.7002 343.773 li
61.7002 350.473 li
65.5 350.473 li
65.5 351.573 li
60.5 351.573 li
60.5 351.573 li
cp
0 0 0 0 cmyk
f
85.2998 344.873 mo
85.2998 347.273 li
87.0996 347.273 li
87.5 347.273 87.9004 347.173 88.0996 346.873 cv
88.2998 346.573 88.4004 346.373 88.4004 345.973 cv
88.4004 345.573 88.2998 345.273 88 345.073 cv
87.7998 344.873 87.5 344.873 87.0996 344.873 cv
85.2998 344.873 li
cp
84.0996 351.573 mo
84.0996 343.773 li
87.2002 343.773 li
87.9004 343.773 88.4004 343.973 88.7998 344.273 cv
89 344.473 89.2002 344.673 89.4004 344.973 cv
89.5996 345.273 89.5996 345.573 89.5996 345.973 cv
89.5996 346.473 89.5 346.973 89.2002 347.273 cv
88.9004 347.673 88.5996 347.973 88.0996 348.073 cv
89.9004 351.573 li
88.5 351.573 li
86.9004 348.273 li
85.4004 348.273 li
85.4004 351.573 li
84.0996 351.573 li
cp
f
105.5 59.673 mo
105.5 51.8732 li
106.7 51.8732 li
106.7 58.5734 li
110.5 58.5734 li
110.5 59.673 li
105.5 59.673 li
cp
f
133.3 52.9728 mo
133.3 55.3732 li
135.1 55.3732 li
135.5 55.3732 135.9 55.2726 136.1 54.9728 cv
136.3 54.7726 136.4 54.4728 136.4 54.0734 cv
136.4 53.673 136.3 53.3732 136 53.173 cv
135.8 52.9728 135.5 52.9728 135.1 52.9728 cv
133.3 52.9728 li
cp
132.1 59.673 mo
132.1 51.8732 li
135.2 51.8732 li
135.9 51.8732 136.4 52.0734 136.8 52.3732 cv
137 52.5734 137.2 52.7726 137.4 53.0734 cv
137.6 53.3732 137.6 53.673 137.6 54.0734 cv
137.6 54.5734 137.5 55.0734 137.2 55.3732 cv
136.9 55.7726 136.6 56.0734 136.1 56.173 cv
137.9 59.673 li
136.5 59.673 li
134.9 56.3732 li
133.3 56.3732 li
133.3 59.673 li
132.1 59.673 li
cp
f
120.7 62.0734 mo
120.7 57.3732 li
117.3 50.673 li
119.1 50.673 li
121.5 55.7726 li
123.9 50.673 li
125.7 50.673 li
122.3 57.3732 li
122.3 62.0734 li
120.7 62.0734 li
cp
f
1 lw
10 ml
74.7998 141.173 mo
74.7998 112.173 li
@
30 92.173 mo
120 92.173 li
120 112.173 li
30 112.173 li
30 92.173 li
cp
.732845 .672084 .657374 .825711 cmyk
f
30 92.173 mo
120 92.173 li
120 112.173 li
30 112.173 li
30 92.173 li
cp
.676844 .618402 .580743 .45658 cmyk
@
.420691 .897307 .813718 .655482 cmyk
%ADOBeginSubsetFont: DSEG14Classic-Italic Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /DSEG14Classic-Italic def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 126 /asciitilde putdef/FontBBox {-106 0 754 1000} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B72F60D248DF1D2906E8683B3BF7E0DCF9FD3162FC82FEA75A8094787DF4F8> |-/asciitilde <1C60D8A8C9B6A5F49439D74314166369891523B30998C2A1103237B05BED938AD1AE03F79CD2327D1F329AC95CCA78D1C149CB934341CD110182FA7C2239A2F0C3681FA1337C7836A3A7AAB63C13F6A60CBB9E77A8DA3541D4FF26250A87387F29CB6A2628AB2F1066FEA705A1DC884F8F4B08C94C09AB354DD7B7F9B7F39A5EBD8CE67FFB396A6D1E09642991F45644BD91E49E9F4F8FC924802FCA6D8C4F7247AB76963EE9A68C83376A4B3F541BF0092134A6B153522295907A63BE72F5B22763999DC69F46667DCF9554263210B8F4F497409C5A56EC07896E9EC49A5881323D6D0AAD96DB7578C451C069EBF417E64701A9BFBC0591DDF96A024B4F8BA6B18CECE8EEC1D96E63363CCB0CBB0DBF650D57EA00D7FF6FAE98CBA579DBC69982EAC58AAB7A292E0C176110482BCFA601A150019C4A6A053F47AC0E87DF5F95C717CF4C1B51910482EE1B59240946B1186FD0337B940C695A7740F19FF55DE7B0E9580D46E9A44AB9198D882E4A718081F2166139597D456B62DDD8167832A667E1D49F45F49466766E78ACDF9D4FB478> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/NJAABF+DSEG14Classic-Italic /DSEG14Classic-Italic findfont ct_VMDictPut/NJAABF+DSEG14Classic-Italic*1 [126{/.notdef}rp /asciitilde 129{/.notdef}rp]NJAABF+DSEG14Classic-Italic nfNJAABF+DSEG14Classic-Italic*1 [13 0 0 -13 0 0 ]msf32.5684 108.673 mo(~~~~~~~~)sh33.2646 173.973 mo
116.936 173.973 li
116.936 192.473 li
33.2646 192.473 li
33.2646 173.973 li
cp
.732845 .672084 .657374 .825711 cmyk
f
33.2646 173.973 mo
116.936 173.973 li
116.936 192.473 li
33.2646 192.473 li
33.2646 173.973 li
cp
.676844 .618402 .580743 .45658 cmyk
@
.420691 .897307 .813718 .655482 cmyk
NJAABF+DSEG14Classic-Italic*1 [12 0 0 -12 0 0 ]msf45.624 189.173 mo(~~~~~~)sh0 .993286 1 0 cmyk
NJAABF+DSEG14Classic-Italic*1 [12 0 0 -12 0 0 ]msf35.9326 189.173 mo(~~~~~~~~)sh0 0 0 0 cmyk
%ADOBeginSubsetFont: AlteDIN1451Mittelschrift Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /AlteDIN1451Mittelschrift def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 65 /A putdup 71 /G putdup 80 /P putdup 84 /T putdup 97 /a putdup 101 /e putdup 105 /i putdup 109 /m putdup 110 /n putdup 112 /p putdup 114 /r putdup 121 /y putdef/FontBBox {-52 -229 994 954} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings14 dict dup begin/.notdef <1C60D8A8C9B87A8F8B> |-/space <1C60D8A8C9B87A8F8B> |-/A <1C60D8A8C9B662FEE4589D4CD5D4206B74FD018F924F53E3E3F88C3071ECD07C8EC1C6484CB04CFE91F1C4BC542E025597F5D95927760248CD13DCC338382C8B2DD75328C7A0AF5F6E6100AA4F3CF35D609AFB3D386F23322C0446955804BD4EEF981E4AFF4A76D1> |-/G <1C60D8A8C9B7D98F6D768BF56BD21009DE089C05EEA895B6E43AA575FBF492A96C598234453375BEB7F1E77DF956BCE97AFA824DF553C128118E98034AF88D048438B248CAA81155710DE8DE4DA66AFBC52302C6C6E0A268E128416C8C02C6B44790E5024D6D404FEF64F79C542B8718BC7B517CF880C2ED2B655A36254AA314646FEF6D157663F478AC6C680AC34FF66ACD0BBCC51C9595EC839163A3012DC5668740BAA4A27C75A0FFA5E56CC990628ABED8EFE01E609FEE6653BC1EA41270063B8443> |-/P <1C60D8A8C9B7CA642A4149ECC4234E0C1B8CDB15E07D59AE449390925975A355BBABCE58A1A4F36BF1D3045A0E3DB552EC4EDA0246B56F298EF880B538535F386E11FFBBA6DA3E7104898A6D773AC9F177BA214639F4FE9C6A82068D395DCCD5316E2C019AFF7B6DE58903> |-/T <1C60D8A8C9B7A73DB9E09F7EDFD881A9CA3C367D451823EF6D4BDA8229FDCFCA> |-/a <1C60D8A8C9B75BE5164334C3925F27EB902615C28CCD8854C1445F97E36E68A3D14532738CE6D5E342752A636085CB267006B891845788E34A8D20749CB5C83F7DA87127C2DCB384AC8A3B18DDFFD048A191AC1C3AF5B5B6F1125543A1696476A66F54C3B7B7B1CA0D094015B657A3F5F9CCD0CEC61AA1DD082D99B8D3DAADC51468F78935BA113B8097E937E33B72F3D555BE205C16A21D73B64DB3CD> |-/e <1C60D8A8C9B7A9C0DC81EE6EF6E8D558E28FB9C325A25D9D3B5D068F7B595384FC7C614AD74381BD3FFF51E541C1DA83E1FF8813FCC3CC253CA97E9FF1362D9FAA3DF3A004211BAEB912DF7AE4C943432E97AB163CA474A54F94F89AC6BEF2C954B67E060C8B6FD4EEF2D71FF7ACACB8C5B64424CB60D3308195B493C40B6C158D97DA6C2E2086> |-/i <1C60D8A8C9B87A8F726EBBA2C7B170D31CEDD133960AF748936ADDF726778CC5> |-/m <1C60D8A8C9B68968522886896DE8B290FB6D94B620A7F457F616EF50D2F222FCECD9677FCABFAC49589C499DD0FBE6A57E34FD6DEAE5E345E80F9A8605B857382795CBC2A42B289570667DBE04AD8103999615068D35B8A75307DC080A1D765141BE1D6620A31E2AE14C58676CD6476E66A9497DE900103AF96B253FE76128A86485751126D1EB4357EF14> |-/n <1C60D8A8C9B78256D2A1762A3D3CD78E4A50BC1406202EB11DA523FF6417FACB15F6954F70A0FDBB65F427B1E24B7109F1268B7A4A8524D1817AC15135F2903D9679F8C68ED40F202C66B1E37D24D3655D7E> |-/p <1C60D8A8C9B7B4A13F11C8F85F1741FFE700C44278DD7BBA92FBC3EDC4AF533E231B75421387F05A1D3D87BBF51A5DE5A1EB523665093F7871D5296AEDE70694FB1416BC0EFE16600077D9D5F110C9232F099D5222DCCDA7746C3111D225259E6B759F587F7F3BAC8F98AAFE6D68D7171BBF2E0CC8F245A20182D088EF9F70851CA66511E2B9279DB49995F411082E27E4B52A6C5DA6741A785AB597C0AD038C25D94D43> |-/r <1C60D8A8C9B7361F028C2EE60FCC9CDE964F462A50A3EB943FD55069BD80BE966490270FDC28ECB2ABD9C6FA5A942CB1CD54AF76408424D82C0C10C462CC80> |-/y <1C60D8A8C9B77FE2CE362F51382623D8BDE20D3644DC740E5E87A32CF69FD4413CB8404372FC18E8B65D319CFB87D99E549A30FEBF29BA6372223D252BE19D4C89F30EF425> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/NJAABG+AlteDIN1451Mittelschrift /AlteDIN1451Mittelschrift findfont ct_VMDictPut/NJAABG+AlteDIN1451Mittelschrift*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 5{/.notdef}rp /G 8{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /.notdef /p /.notdef /r 6{/.notdef}rp /y 134{/.notdef}rp]NJAABG+AlteDIN1451Mittelschrift nfNJAABG+AlteDIN1451Mittelschrift*1 [12 0 0 -12 0 0 ]msf63.7998 87.1035 mo(Gain)sh63.2041 170.067 mo(Type)sh53.0596 240.142 mo(Param A)sh33.2646 245.973 mo
116.936 245.973 li
116.936 264.473 li
33.2646 264.473 li
33.2646 245.973 li
cp
.732845 .672084 .657374 .825711 cmyk
f
33.2646 245.973 mo
116.936 245.973 li
116.936 264.473 li
33.2646 264.473 li
33.2646 245.973 li
cp
.676844 .618402 .580743 .45658 cmyk
@
.420691 .897307 .813718 .655482 cmyk
NJAABF+DSEG14Classic-Italic*1 [12 0 0 -12 0 0 ]msf45.624 261.173 mo(~~~~~~)sh0 .993286 1 0 cmyk
NJAABF+DSEG14Classic-Italic*1 [12 0 0 -12 0 0 ]msf35.9331 261.173 mo(~~~~~~~~)sh0 0 0 0 cmyk
%ADOBeginSubsetFont: AlteDIN1451Mittelschrift AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginNJAABG+AlteDIN1451Mittelschrift dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B7D98F6D224A39071B135231F148F36F92A9E56394309D57D145F532672926E7B9D7AD9A18AE717B2697C6D5460708ECFC31ABDD39E8BFFCA80E31B24D9ED0FE69B1E908BC553C0FC450F84D2882B2A4FF9629F054CB58E44AF778559656E56E12DCC419C87FC2A32E24B9B69390697238624C7B4BAB41154CECD371F42508393B7DBC937658A3BEC82F74409C16A9339B63C6E5B677972F7140A1A75741> |-systemdict /gcheck known {setglobal} if end {end} ifendNJAABG+AlteDIN1451Mittelschrift /Encoding getdup 66 /B putpop%ADOEndSubsetFont
/NJAABG+AlteDIN1451Mittelschrift*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /B 4{/.notdef}rp /G 8{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /.notdef /p /.notdef /r 6{/.notdef}rp /y 134{/.notdef}rp]NJAABG+AlteDIN1451Mittelschrift nfNJAABG+AlteDIN1451Mittelschrift*1 [12 0 0 -12 0 0 ]msf53.1387 312.194 mo(Param B)sh0 .993286 1 0 cmyk
%ADOBeginSubsetFont: DSEG14Classic-Italic AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginNJAABF+DSEG14Classic-Italic dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/F <1C60D8A8C9B6A5F49438A77D80E76FFD51DF49E94EE90600357C59549C976F245DDD1997038D019E6CC32576C2B8D5FF5678EE5C409CCFF4EAC4CA47B96E5AB7BA178A9DF8A7E0CC589DE6AE17BFD801875635A7502B9D3E6AA1CB91D02CB78A9C888A7F9B242D657C37B19AEDD80AF84238693DE5FE808D0304928378EBCB7CB554969B6730BCA32404BB72E8884D34506819947D5381E9829CC9432116EFE32844DE> |-/I <1C60D8A8C9B6A5F494BFC3206B8A0A2DA2AD98A2A0DFFC52328D91181F33AFA9BED3F325AFDE462C87618B623D2E1BFA6D81DBE83D4232B969FD2614EA2033ED89176E30F0E3C08D36D5495305D9DA5D1D45669435CA7AA45531E788212203346B7E00F1FF6505CA105D01926ECF4676ECA593C22C9B26A33FDEAE> |-/L <1C60D8A8C9B6A5F4946A5855FE2E5EB64F7A1E5344E3BA328788D0E7C5F033AB1042843F83648B2A68D0DC4BB3AA5904663203EF9AC2621F7455529FA505717A04B706C865C8CCAE645AB617461768BD2F2B3E777BEA33C6E78D85DDE0002EDF76> |-/O <1C60D8A8C9B6A5F49BDBFD018D8F7C7F2D2FAB9530A26F6E0FCFEC1BFBEBC1524B8C146766A374A28E461A825AEFB1A66AF2A9251627820A0640162587F35D2EB5CC440895CD0924791665A85333ECB69185076357D4D9FB48978964645BAFB647AE68515011822960B6E4F2F1F97D71ECA6369D9D4EDAB3EC9F5A84EFD81C0CF55A11DCA62D4907AE2D45A7FE775CEAF7780680DB58562BAFE748AEDA6184F2CBA16E933AE4EE9571C917E339404164C98D92BB5403C25DB582FD52D179> |-/P <1C60D8A8C9B6A5F49438A77D80E76FFD51DF49E94EE90600357C59549C976F245DDD1997038D019E6CC32576C2B8D5FF5678EE5C409CCFF4EAC4CA47B96E5AB7BA178A9DF8A7E0CC589DE6AE17BFD801875635A7502B9D3E6AA1CB91D02CB78A9C888A7F9B242D651D5D3C8E8856507B39D43C327765CFBB1E3A208D600C4CC38CEAC873D59533BC263CF0D2E903C6F1EA595DECC98827C097C59C3B708DA957D7021FC25FC7DF582CE9C27287731D773ACC3FE3E6803481810B86B6A150609673871DB6> |-systemdict /gcheck known {setglobal} if end {end} ifendNJAABF+DSEG14Classic-Italic /Encoding getdup 70 /F putdup 73 /I putdup 76 /L putdup 79 /O putdup 80 /P putpop%ADOEndSubsetFont
/NJAABF+DSEG14Classic-Italic*1 [70{/.notdef}rp /F 2{/.notdef}rp /I 2{/.notdef}rp /L 2{/.notdef}rp /O /P 45{/.notdef}rp /asciitilde 129{/.notdef}rp]NJAABF+DSEG14Classic-Italic nfNJAABF+DSEG14Classic-Italic*1 [13 0 0 -13 0 0 ]msf32.5684 108.673 mo(FLIPFLOP)sh0 0 0 0 cmyk
%ADOBeginSubsetFont: AlteDIN1451Mittelschrift AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginNJAABG+AlteDIN1451Mittelschrift dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Z <1C60D8A8C9B7B4A1306F791E42363605F2DDF3BB82AE957E6B31B5437A14646E8184622C1640D34581> |-systemdict /gcheck known {setglobal} if end {end} ifendNJAABG+AlteDIN1451Mittelschrift /Encoding getdup 90 /Z putpop%ADOEndSubsetFont
/NJAABG+AlteDIN1451Mittelschrift*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /B 4{/.notdef}rp /G 8{/.notdef}rp /P 3{/.notdef}rp /T 5{/.notdef}rp /Z 6{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /.notdef /p /.notdef /r 6{/.notdef}rp /y 134{/.notdef}rp]NJAABG+AlteDIN1451Mittelschrift nfNJAABG+AlteDIN1451Mittelschrift*1 [16 0 0 -16 0 0 ]msf70.8516 353.29 mo(Z)sh15.0078 110.173 mo
15.0078 83.1056 li
@
15 120.473 mo
9.2998 120.473 4.7002 115.873 4.7002 110.173 cv
4.7002 104.473 9.2998 99.8732 15 99.8732 cv
20.7002 99.8732 25.2998 104.473 25.2998 110.173 cv
25.2998 115.873 20.7002 120.473 15 120.473 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
4 ml
15 120.473 mo
9.2998 120.473 4.7002 115.873 4.7002 110.173 cv
4.7002 104.473 9.2998 99.8732 15 99.8732 cv
20.7002 99.8732 25.2998 104.473 25.2998 110.173 cv
25.2998 115.873 20.7002 120.473 15 120.473 cv
.749721 .679194 .670497 .901457 cmyk
@
15 118.173 mo
10.6001 118.173 7 114.573 7 110.173 cv
7 105.773 10.6001 102.173 15 102.173 cv
19.3999 102.173 23 105.773 23 110.173 cv
23 114.573 19.3999 118.173 15 118.173 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
15 118.173 mo
10.6001 118.173 7 114.573 7 110.173 cv
7 105.773 10.6001 102.173 15 102.173 cv
19.3999 102.173 23 105.773 23 110.173 cv
23 114.573 19.3999 118.173 15 118.173 cv
.740902 .625055 .575372 .495155 cmyk
@
15 117.973 mo
10.7002 117.973 7.2998 114.673 7.2998 110.673 cv
7.2998 106.673 10.7998 103.373 15 103.373 cv
19.2002 103.373 22.7002 106.673 22.7002 110.673 cv
22.7002 114.673 19.2998 117.973 15 117.973 cv
.456001 .333349 .326757 .00714122 cmyk
f
20.1001 111.173 mo
20.1001 113.973 17.7998 116.373 15 116.373 cv
12.2002 116.373 9.8999 114.073 9.8999 111.173 cv
9.8999 108.373 12.2002 105.973 15 105.973 cv
17.7998 105.973 20.1001 108.273 20.1001 111.173 cv
.116976 .0572824 .0719005 0 cmyk
f
20.1001 110.173 mo
20.1001 112.973 17.7998 115.273 15 115.273 cv
12.2002 115.273 9.8999 112.973 9.8999 110.173 cv
9.8999 107.373 12.2002 105.073 15 105.073 cv
17.7998 105.073 20.1001 107.373 20.1001 110.173 cv
.749721 .679194 .670497 .901457 cmyk
f
1 lw
10 ml
135.008 110.173 mo
135.008 83.1056 li
0 0 0 0 cmyk
@
135 120.473 mo
129.3 120.473 124.7 115.873 124.7 110.173 cv
124.7 104.473 129.3 99.8732 135 99.8732 cv
140.7 99.8732 145.3 104.473 145.3 110.173 cv
145.3 115.873 140.7 120.473 135 120.473 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
4 ml
135 120.473 mo
129.3 120.473 124.7 115.873 124.7 110.173 cv
124.7 104.473 129.3 99.8732 135 99.8732 cv
140.7 99.8732 145.3 104.473 145.3 110.173 cv
145.3 115.873 140.7 120.473 135 120.473 cv
.749721 .679194 .670497 .901457 cmyk
@
135 118.173 mo
130.6 118.173 127 114.573 127 110.173 cv
127 105.773 130.6 102.173 135 102.173 cv
139.4 102.173 143 105.773 143 110.173 cv
143 114.573 139.4 118.173 135 118.173 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
135 118.173 mo
130.6 118.173 127 114.573 127 110.173 cv
127 105.773 130.6 102.173 135 102.173 cv
139.4 102.173 143 105.773 143 110.173 cv
143 114.573 139.4 118.173 135 118.173 cv
.740902 .625055 .575372 .495155 cmyk
@
135 117.973 mo
130.7 117.973 127.3 114.673 127.3 110.673 cv
127.3 106.673 130.8 103.373 135 103.373 cv
139.2 103.373 142.7 106.673 142.7 110.673 cv
142.7 114.673 139.3 117.973 135 117.973 cv
.456001 .333349 .326757 .00714122 cmyk
f
140.1 111.173 mo
140.1 113.973 137.8 116.373 135 116.373 cv
132.2 116.373 129.9 114.073 129.9 111.173 cv
129.9 108.373 132.2 105.973 135 105.973 cv
137.8 105.973 140.1 108.273 140.1 111.173 cv
.116976 .0572824 .0719005 0 cmyk
f
140.1 110.173 mo
140.1 112.973 137.8 115.273 135 115.273 cv
132.2 115.273 129.9 112.973 129.9 110.173 cv
129.9 107.373 132.2 105.073 135 105.073 cv
137.8 105.073 140.1 107.373 140.1 110.173 cv
.749721 .679194 .670497 .901457 cmyk
f
1 lw
10 ml
14.8354 83.1056 mo
59.8999 63.1564 li
0 0 0 0 cmyk
@
135.209 83.1056 mo
89.8672 63.1564 li
@
24.8354 83.1056 mo
24.8354 88.6056 20.4351 93.006 14.9351 93.006 cv
9.43555 93.006 5.03516 88.6056 5.03516 83.1056 cv
5.03516 77.6056 9.43555 73.2062 14.9351 73.2062 cv
20.3354 73.2062 24.8354 77.6056 24.8354 83.1056 cv
.749721 .679194 .670497 .901457 cmyk
f
20.5352 83.1056 mo
20.5352 86.2062 18.0352 88.7062 14.9351 88.7062 cv
11.8354 88.7062 9.33545 86.2062 9.33545 83.1056 cv
9.33545 80.006 11.8354 77.506 14.9351 77.506 cv
17.9351 77.506 20.5352 80.006 20.5352 83.1056 cv
0 0 0 0 cmyk
f
15.8354 73.2062 mo
15.5352 73.2062 15.2354 73.2062 14.9351 73.2062 cv
14.5352 73.2062 14.2354 73.2062 13.8354 73.3058 cv
13.8354 77.8058 li
15.8354 77.8058 li
15.8354 73.2062 li
cp
f
69.8999 63.1564 mo
69.8999 68.6564 65.5 73.0568 60 73.0568 cv
54.5 73.0568 50.1001 68.6564 50.1001 63.1564 cv
50.1001 57.6564 54.5 53.256 60 53.256 cv
65.3999 53.256 69.8999 57.6564 69.8999 63.1564 cv
.749721 .679194 .670497 .901457 cmyk
f
65.6001 63.1564 mo
65.6001 66.256 63.1001 68.756 60 68.756 cv
56.8999 68.756 54.3999 66.256 54.3999 63.1564 cv
54.3999 60.0568 56.8999 57.5568 60 57.5568 cv
63 57.5568 65.6001 60.0568 65.6001 63.1564 cv
0 0 0 0 cmyk
f
60.8999 53.256 mo
60.6001 53.256 60.2998 53.256 60 53.256 cv
59.6001 53.256 59.2998 53.256 58.8999 53.3566 cv
58.8999 57.8566 li
60.8999 57.8566 li
60.8999 53.256 li
cp
f
99.9639 63.1564 mo
99.9639 68.6564 95.5645 73.0568 90.0645 73.0568 cv
84.5645 73.0568 80.1641 68.6564 80.1641 63.1564 cv
80.1641 57.6564 84.5645 53.256 90.0645 53.256 cv
95.4639 53.256 99.9639 57.6564 99.9639 63.1564 cv
.749721 .679194 .670497 .901457 cmyk
f
95.6641 63.1564 mo
95.6641 66.256 93.1641 68.756 90.0645 68.756 cv
86.9639 68.756 84.4639 66.256 84.4639 63.1564 cv
84.4639 60.0568 86.9639 57.5568 90.0645 57.5568 cv
93.0645 57.5568 95.6641 60.0568 95.6641 63.1564 cv
0 0 0 0 cmyk
f
90.9639 53.256 mo
90.6641 53.256 90.3643 53.256 90.0645 53.256 cv
89.6641 53.256 89.3643 53.256 88.9639 53.3566 cv
88.9639 57.8566 li
90.9639 57.8566 li
90.9639 53.256 li
cp
f
144.835 83.2062 mo
144.835 88.7062 140.436 93.1056 134.936 93.1056 cv
129.436 93.1056 125.035 88.7062 125.035 83.2062 cv
125.035 77.7062 129.436 73.3058 134.936 73.3058 cv
140.335 73.3058 144.835 77.7062 144.835 83.2062 cv
.749721 .679194 .670497 .901457 cmyk
f
140.436 83.2062 mo
140.436 86.3058 137.936 88.8058 134.835 88.8058 cv
131.735 88.8058 129.235 86.3058 129.235 83.2062 cv
129.235 80.1056 131.735 77.6056 134.835 77.6056 cv
137.936 77.6056 140.436 80.1056 140.436 83.2062 cv
0 0 0 0 cmyk
f
135.835 73.3058 mo
135.535 73.3058 135.235 73.3058 134.936 73.3058 cv
134.535 73.3058 134.235 73.3058 133.835 73.4054 cv
133.835 77.9054 li
135.835 77.9054 li
135.835 73.3058 li
cp
f
134.85 183.14 mo
104.936 161.206 li
@
74.7998 144.173 mo
104.936 161.206 li
@
14.9541 183.14 mo
44.9351 161.206 li
@
74.7998 144.173 mo
44.9351 161.206 li
@
14.9541 193.44 mo
9.25391 193.44 4.6543 188.84 4.6543 183.14 cv
4.6543 177.44 9.25391 172.84 14.9541 172.84 cv
20.6543 172.84 25.2539 177.44 25.2539 183.14 cv
25.2539 188.84 20.6543 193.44 14.9541 193.44 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
4 ml
14.9541 193.44 mo
9.25391 193.44 4.6543 188.84 4.6543 183.14 cv
4.6543 177.44 9.25391 172.84 14.9541 172.84 cv
20.6543 172.84 25.2539 177.44 25.2539 183.14 cv
25.2539 188.84 20.6543 193.44 14.9541 193.44 cv
.749721 .679194 .670497 .901457 cmyk
@
14.9541 191.14 mo
10.5542 191.14 6.9541 187.54 6.9541 183.14 cv
6.9541 178.739 10.5542 175.14 14.9541 175.14 cv
19.354 175.14 22.9541 178.739 22.9541 183.14 cv
22.9541 187.54 19.354 191.14 14.9541 191.14 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
14.9541 191.14 mo
10.5542 191.14 6.9541 187.54 6.9541 183.14 cv
6.9541 178.739 10.5542 175.14 14.9541 175.14 cv
19.354 175.14 22.9541 178.739 22.9541 183.14 cv
22.9541 187.54 19.354 191.14 14.9541 191.14 cv
.740902 .625055 .575372 .495155 cmyk
@
14.9541 190.94 mo
10.6543 190.94 7.25391 187.64 7.25391 183.64 cv
7.25391 179.64 10.7539 176.34 14.9541 176.34 cv
19.1543 176.34 22.6543 179.64 22.6543 183.64 cv
22.6543 187.64 19.2539 190.94 14.9541 190.94 cv
.456001 .333349 .326757 .00714122 cmyk
f
20.0542 184.14 mo
20.0542 186.94 17.7539 189.34 14.9541 189.34 cv
12.1543 189.34 9.854 187.04 9.854 184.14 cv
9.854 181.34 12.1543 178.94 14.9541 178.94 cv
17.7539 178.94 20.0542 181.239 20.0542 184.14 cv
.116976 .0572824 .0719005 0 cmyk
f
20.0542 183.14 mo
20.0542 185.94 17.7539 188.239 14.9541 188.239 cv
12.1543 188.239 9.854 185.94 9.854 183.14 cv
9.854 180.34 12.1543 178.04 14.9541 178.04 cv
17.7539 178.04 20.0542 180.34 20.0542 183.14 cv
.749721 .679194 .670497 .901457 cmyk
f
134.954 193.44 mo
129.254 193.44 124.654 188.84 124.654 183.14 cv
124.654 177.44 129.254 172.84 134.954 172.84 cv
140.654 172.84 145.254 177.44 145.254 183.14 cv
145.254 188.84 140.654 193.44 134.954 193.44 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
134.954 193.44 mo
129.254 193.44 124.654 188.84 124.654 183.14 cv
124.654 177.44 129.254 172.84 134.954 172.84 cv
140.654 172.84 145.254 177.44 145.254 183.14 cv
145.254 188.84 140.654 193.44 134.954 193.44 cv
.749721 .679194 .670497 .901457 cmyk
@
134.954 191.14 mo
130.554 191.14 126.954 187.54 126.954 183.14 cv
126.954 178.739 130.554 175.14 134.954 175.14 cv
139.354 175.14 142.954 178.739 142.954 183.14 cv
142.954 187.54 139.354 191.14 134.954 191.14 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
134.954 191.14 mo
130.554 191.14 126.954 187.54 126.954 183.14 cv
126.954 178.739 130.554 175.14 134.954 175.14 cv
139.354 175.14 142.954 178.739 142.954 183.14 cv
142.954 187.54 139.354 191.14 134.954 191.14 cv
.740902 .625055 .575372 .495155 cmyk
@
134.954 190.94 mo
130.654 190.94 127.254 187.64 127.254 183.64 cv
127.254 179.64 130.754 176.34 134.954 176.34 cv
139.154 176.34 142.654 179.64 142.654 183.64 cv
142.654 187.64 139.254 190.94 134.954 190.94 cv
.456001 .333349 .326757 .00714122 cmyk
f
140.054 184.14 mo
140.054 186.94 137.754 189.34 134.954 189.34 cv
132.154 189.34 129.854 187.04 129.854 184.14 cv
129.854 181.34 132.154 178.94 134.954 178.94 cv
137.754 178.94 140.054 181.239 140.054 184.14 cv
.116976 .0572824 .0719005 0 cmyk
f
140.054 183.14 mo
140.054 185.94 137.754 188.239 134.954 188.239 cv
132.154 188.239 129.854 185.94 129.854 183.14 cv
129.854 180.34 132.154 178.04 134.954 178.04 cv
137.754 178.04 140.054 180.34 140.054 183.14 cv
.749721 .679194 .670497 .901457 cmyk
f
90.8643 144.219 mo
90.8643 153.019 83.7637 160.119 74.9639 160.119 cv
66.1641 160.119 59.064 153.019 59.064 144.219 cv
59.064 135.419 66.1641 128.319 74.9639 128.319 cv
83.7637 128.319 90.8643 135.419 90.8643 144.219 cv
f
83.9639 144.219 mo
83.9639 149.119 79.9639 153.219 74.9639 153.219 cv
70.064 153.219 65.9639 149.219 65.9639 144.219 cv
65.9639 139.319 69.9639 135.219 74.9639 135.219 cv
79.9639 135.219 83.9639 139.219 83.9639 144.219 cv
0 0 0 0 cmyk
f
.3 lw
10 ml
87.5645 144.219 mo
87.5645 151.119 81.9639 156.819 74.9639 156.819 cv
68.064 156.819 62.3638 151.219 62.3638 144.219 cv
62.3638 137.319 67.9639 131.619 74.9639 131.619 cv
81.9639 131.619 87.5645 137.219 87.5645 144.219 cv
87.5645 144.219 li
cp
.605798 .521965 .515618 .218143 cmyk
@
76.4639 128.419 mo
75.9639 128.419 75.4639 128.319 75.064 128.319 cv
74.4639 128.319 73.8638 128.319 73.2642 128.419 cv
73.2642 135.619 li
76.4639 135.619 li
76.4639 128.419 li
cp
0 0 0 0 cmyk
f
54.9351 161.206 mo
54.9351 166.706 50.5352 171.106 45.0352 171.106 cv
39.5352 171.106 35.1353 166.706 35.1353 161.206 cv
35.1353 155.706 39.5352 151.306 45.0352 151.306 cv
50.4351 151.306 54.9351 155.706 54.9351 161.206 cv
.749721 .679194 .670497 .901457 cmyk
f
50.6353 161.206 mo
50.6353 164.306 48.1353 166.806 45.0352 166.806 cv
41.9351 166.806 39.4351 164.306 39.4351 161.206 cv
39.4351 158.106 41.9351 155.606 45.0352 155.606 cv
48.0352 155.606 50.6353 158.106 50.6353 161.206 cv
0 0 0 0 cmyk
f
45.9351 151.306 mo
45.6353 151.306 45.3354 151.306 45.0352 151.306 cv
44.6353 151.306 44.3354 151.306 43.9351 151.405 cv
43.9351 155.905 li
45.9351 155.905 li
45.9351 151.306 li
cp
f
114.936 161.206 mo
114.936 166.706 110.535 171.106 105.035 171.106 cv
99.5352 171.106 95.1357 166.706 95.1357 161.206 cv
95.1357 155.706 99.5352 151.306 105.035 151.306 cv
110.436 151.306 114.936 155.706 114.936 161.206 cv
.749721 .679194 .670497 .901457 cmyk
f
110.636 161.206 mo
110.636 164.306 108.136 166.806 105.035 166.806 cv
101.936 166.806 99.4355 164.306 99.4355 161.206 cv
99.4355 158.106 101.936 155.606 105.035 155.606 cv
108.035 155.606 110.636 158.106 110.636 161.206 cv
0 0 0 0 cmyk
f
105.936 151.306 mo
105.636 151.306 105.335 151.306 105.035 151.306 cv
104.636 151.306 104.335 151.306 103.936 151.405 cv
103.936 155.905 li
105.936 155.905 li
105.936 151.306 li
cp
f
1 lw
14.9448 219.14 mo
39.0352 207.173 li
@
135.035 219.14 mo
111.035 207.173 li
@
74.8999 213.173 mo
111.035 207.173 li
@
38.9351 207.173 mo
74.8999 213.173 li
@
14.9541 226.44 mo
9.25391 226.44 4.6543 221.84 4.6543 216.14 cv
4.6543 210.44 9.25391 205.84 14.9541 205.84 cv
20.6543 205.84 25.2539 210.44 25.2539 216.14 cv
25.2539 221.84 20.6543 226.44 14.9541 226.44 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
4 ml
14.9541 226.44 mo
9.25391 226.44 4.6543 221.84 4.6543 216.14 cv
4.6543 210.44 9.25391 205.84 14.9541 205.84 cv
20.6543 205.84 25.2539 210.44 25.2539 216.14 cv
25.2539 221.84 20.6543 226.44 14.9541 226.44 cv
.749721 .679194 .670497 .901457 cmyk
@
14.9541 224.14 mo
10.5542 224.14 6.9541 220.54 6.9541 216.14 cv
6.9541 211.739 10.5542 208.14 14.9541 208.14 cv
19.354 208.14 22.9541 211.739 22.9541 216.14 cv
22.9541 220.54 19.354 224.14 14.9541 224.14 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
14.9541 224.14 mo
10.5542 224.14 6.9541 220.54 6.9541 216.14 cv
6.9541 211.739 10.5542 208.14 14.9541 208.14 cv
19.354 208.14 22.9541 211.739 22.9541 216.14 cv
22.9541 220.54 19.354 224.14 14.9541 224.14 cv
.740902 .625055 .575372 .495155 cmyk
@
14.9541 223.94 mo
10.6543 223.94 7.25391 220.64 7.25391 216.64 cv
7.25391 212.64 10.7539 209.34 14.9541 209.34 cv
19.1543 209.34 22.6543 212.64 22.6543 216.64 cv
22.6543 220.64 19.2539 223.94 14.9541 223.94 cv
.456001 .333349 .326757 .00714122 cmyk
f
20.0542 217.14 mo
20.0542 219.94 17.7539 222.34 14.9541 222.34 cv
12.1543 222.34 9.854 220.04 9.854 217.14 cv
9.854 214.34 12.1543 211.94 14.9541 211.94 cv
17.7539 211.94 20.0542 214.239 20.0542 217.14 cv
.116976 .0572824 .0719005 0 cmyk
f
20.0542 216.14 mo
20.0542 218.94 17.7539 221.239 14.9541 221.239 cv
12.1543 221.239 9.854 218.94 9.854 216.14 cv
9.854 213.34 12.1543 211.04 14.9541 211.04 cv
17.7539 211.04 20.0542 213.34 20.0542 216.14 cv
.749721 .679194 .670497 .901457 cmyk
f
134.954 226.44 mo
129.254 226.44 124.654 221.84 124.654 216.14 cv
124.654 210.44 129.254 205.84 134.954 205.84 cv
140.654 205.84 145.254 210.44 145.254 216.14 cv
145.254 221.84 140.654 226.44 134.954 226.44 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
134.954 226.44 mo
129.254 226.44 124.654 221.84 124.654 216.14 cv
124.654 210.44 129.254 205.84 134.954 205.84 cv
140.654 205.84 145.254 210.44 145.254 216.14 cv
145.254 221.84 140.654 226.44 134.954 226.44 cv
.749721 .679194 .670497 .901457 cmyk
@
134.954 224.14 mo
130.554 224.14 126.954 220.54 126.954 216.14 cv
126.954 211.739 130.554 208.14 134.954 208.14 cv
139.354 208.14 142.954 211.739 142.954 216.14 cv
142.954 220.54 139.354 224.14 134.954 224.14 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
134.954 224.14 mo
130.554 224.14 126.954 220.54 126.954 216.14 cv
126.954 211.739 130.554 208.14 134.954 208.14 cv
139.354 208.14 142.954 211.739 142.954 216.14 cv
142.954 220.54 139.354 224.14 134.954 224.14 cv
.740902 .625055 .575372 .495155 cmyk
@
134.954 223.94 mo
130.654 223.94 127.254 220.64 127.254 216.64 cv
127.254 212.64 130.754 209.34 134.954 209.34 cv
139.154 209.34 142.654 212.64 142.654 216.64 cv
142.654 220.64 139.254 223.94 134.954 223.94 cv
.456001 .333349 .326757 .00714122 cmyk
f
140.054 217.14 mo
140.054 219.94 137.754 222.34 134.954 222.34 cv
132.154 222.34 129.854 220.04 129.854 217.14 cv
129.854 214.34 132.154 211.94 134.954 211.94 cv
137.754 211.94 140.054 214.239 140.054 217.14 cv
.116976 .0572824 .0719005 0 cmyk
f
140.054 216.14 mo
140.054 218.94 137.754 221.239 134.954 221.239 cv
132.154 221.239 129.854 218.94 129.854 216.14 cv
129.854 213.34 132.154 211.04 134.954 211.04 cv
137.754 211.04 140.054 213.34 140.054 216.14 cv
.749721 .679194 .670497 .901457 cmyk
f
48.9351 207.206 mo
48.9351 212.706 44.5352 217.106 39.0352 217.106 cv
33.5352 217.106 29.1353 212.706 29.1353 207.206 cv
29.1353 201.706 33.5352 197.306 39.0352 197.306 cv
44.4351 197.306 48.9351 201.706 48.9351 207.206 cv
f
44.6353 207.206 mo
44.6353 210.306 42.1353 212.806 39.0352 212.806 cv
35.9351 212.806 33.4351 210.306 33.4351 207.206 cv
33.4351 204.106 35.9351 201.606 39.0352 201.606 cv
42.0352 201.606 44.6353 204.106 44.6353 207.206 cv
.791196 .157412 .360967 .00173953 cmyk
f
39.9351 197.306 mo
39.6353 197.306 39.3354 197.306 39.0352 197.306 cv
38.6353 197.306 38.3354 197.306 37.9351 197.405 cv
37.9351 201.905 li
39.9351 201.905 li
39.9351 197.306 li
cp
f
120.936 207.206 mo
120.936 212.706 116.535 217.106 111.035 217.106 cv
105.535 217.106 101.136 212.706 101.136 207.206 cv
101.136 201.706 105.535 197.306 111.035 197.306 cv
116.436 197.306 120.936 201.706 120.936 207.206 cv
.749721 .679194 .670497 .901457 cmyk
f
116.636 207.206 mo
116.636 210.306 114.136 212.806 111.035 212.806 cv
107.936 212.806 105.436 210.306 105.436 207.206 cv
105.436 204.106 107.936 201.606 111.035 201.606 cv
114.035 201.606 116.636 204.106 116.636 207.206 cv
.791196 .157412 .360967 .00173953 cmyk
f
111.936 197.306 mo
111.636 197.306 111.335 197.306 111.035 197.306 cv
110.636 197.306 110.335 197.306 109.936 197.405 cv
109.936 201.905 li
111.936 201.905 li
111.936 197.306 li
cp
f
1 lw
10 ml
14.9448 243.173 mo
17.9351 270.106 li
0 0 0 0 cmyk
@
134.944 243.173 mo
132.035 270.106 li
@
74.8999 285.173 mo
132.035 270.106 li
@
17.9351 270.106 mo
74.8999 285.173 li
@
14.9541 253.473 mo
9.25391 253.473 4.6543 248.873 4.6543 243.173 cv
4.6543 237.473 9.25391 232.873 14.9541 232.873 cv
20.6543 232.873 25.2539 237.473 25.2539 243.173 cv
25.2539 248.873 20.6543 253.473 14.9541 253.473 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
4 ml
14.9541 253.473 mo
9.25391 253.473 4.6543 248.873 4.6543 243.173 cv
4.6543 237.473 9.25391 232.873 14.9541 232.873 cv
20.6543 232.873 25.2539 237.473 25.2539 243.173 cv
25.2539 248.873 20.6543 253.473 14.9541 253.473 cv
.749721 .679194 .670497 .901457 cmyk
@
14.9541 251.173 mo
10.5542 251.173 6.9541 247.573 6.9541 243.173 cv
6.9541 238.773 10.5542 235.173 14.9541 235.173 cv
19.354 235.173 22.9541 238.773 22.9541 243.173 cv
22.9541 247.573 19.354 251.173 14.9541 251.173 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
14.9541 251.173 mo
10.5542 251.173 6.9541 247.573 6.9541 243.173 cv
6.9541 238.773 10.5542 235.173 14.9541 235.173 cv
19.354 235.173 22.9541 238.773 22.9541 243.173 cv
22.9541 247.573 19.354 251.173 14.9541 251.173 cv
.740902 .625055 .575372 .495155 cmyk
@
14.9541 250.973 mo
10.6543 250.973 7.25391 247.673 7.25391 243.673 cv
7.25391 239.673 10.7539 236.373 14.9541 236.373 cv
19.1543 236.373 22.6543 239.673 22.6543 243.673 cv
22.6543 247.673 19.2539 250.973 14.9541 250.973 cv
.456001 .333349 .326757 .00714122 cmyk
f
20.0542 244.173 mo
20.0542 246.973 17.7539 249.373 14.9541 249.373 cv
12.1543 249.373 9.854 247.073 9.854 244.173 cv
9.854 241.373 12.1543 238.973 14.9541 238.973 cv
17.7539 238.973 20.0542 241.273 20.0542 244.173 cv
.116976 .0572824 .0719005 0 cmyk
f
20.0542 243.173 mo
20.0542 245.973 17.7539 248.273 14.9541 248.273 cv
12.1543 248.273 9.854 245.973 9.854 243.173 cv
9.854 240.373 12.1543 238.073 14.9541 238.073 cv
17.7539 238.073 20.0542 240.373 20.0542 243.173 cv
.749721 .679194 .670497 .901457 cmyk
f
134.954 253.473 mo
129.254 253.473 124.654 248.873 124.654 243.173 cv
124.654 237.473 129.254 232.873 134.954 232.873 cv
140.654 232.873 145.254 237.473 145.254 243.173 cv
145.254 248.873 140.654 253.473 134.954 253.473 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
134.954 253.473 mo
129.254 253.473 124.654 248.873 124.654 243.173 cv
124.654 237.473 129.254 232.873 134.954 232.873 cv
140.654 232.873 145.254 237.473 145.254 243.173 cv
145.254 248.873 140.654 253.473 134.954 253.473 cv
.749721 .679194 .670497 .901457 cmyk
@
134.954 251.173 mo
130.554 251.173 126.954 247.573 126.954 243.173 cv
126.954 238.773 130.554 235.173 134.954 235.173 cv
139.354 235.173 142.954 238.773 142.954 243.173 cv
142.954 247.573 139.354 251.173 134.954 251.173 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
134.954 251.173 mo
130.554 251.173 126.954 247.573 126.954 243.173 cv
126.954 238.773 130.554 235.173 134.954 235.173 cv
139.354 235.173 142.954 238.773 142.954 243.173 cv
142.954 247.573 139.354 251.173 134.954 251.173 cv
.740902 .625055 .575372 .495155 cmyk
@
134.954 250.973 mo
130.654 250.973 127.254 247.673 127.254 243.673 cv
127.254 239.673 130.754 236.373 134.954 236.373 cv
139.154 236.373 142.654 239.673 142.654 243.673 cv
142.654 247.673 139.254 250.973 134.954 250.973 cv
.456001 .333349 .326757 .00714122 cmyk
f
140.054 244.173 mo
140.054 246.973 137.754 249.373 134.954 249.373 cv
132.154 249.373 129.854 247.073 129.854 244.173 cv
129.854 241.373 132.154 238.973 134.954 238.973 cv
137.754 238.973 140.054 241.273 140.054 244.173 cv
.116976 .0572824 .0719005 0 cmyk
f
140.054 243.173 mo
140.054 245.973 137.754 248.273 134.954 248.273 cv
132.154 248.273 129.854 245.973 129.854 243.173 cv
129.854 240.373 132.154 238.073 134.954 238.073 cv
137.754 238.073 140.054 240.373 140.054 243.173 cv
.749721 .679194 .670497 .901457 cmyk
f
27.9351 270.106 mo
27.9351 275.606 23.5352 280.006 18.0352 280.006 cv
12.5352 280.006 8.13525 275.606 8.13525 270.106 cv
8.13525 264.606 12.5352 260.206 18.0352 260.206 cv
23.4351 260.206 27.9351 264.606 27.9351 270.106 cv
f
23.6353 270.106 mo
23.6353 273.206 21.1353 275.706 18.0352 275.706 cv
14.9351 275.706 12.4351 273.206 12.4351 270.106 cv
12.4351 267.006 14.9351 264.506 18.0352 264.506 cv
21.0352 264.506 23.6353 267.006 23.6353 270.106 cv
.756435 .514183 0 0 cmyk
f
18.9351 260.306 mo
18.6353 260.306 18.3354 260.306 18.0352 260.306 cv
17.6353 260.306 17.3354 260.306 16.9351 260.405 cv
16.9351 264.905 li
18.9351 264.905 li
18.9351 260.306 li
cp
f
141.936 270.106 mo
141.936 275.606 137.535 280.006 132.035 280.006 cv
126.535 280.006 122.136 275.606 122.136 270.106 cv
122.136 264.606 126.535 260.206 132.035 260.206 cv
137.436 260.206 141.936 264.606 141.936 270.106 cv
.749721 .679194 .670497 .901457 cmyk
f
137.636 270.106 mo
137.636 273.206 135.136 275.706 132.035 275.706 cv
128.936 275.706 126.436 273.206 126.436 270.106 cv
126.436 267.006 128.936 264.506 132.035 264.506 cv
135.035 264.506 137.636 267.006 137.636 270.106 cv
.756435 .514183 0 0 cmyk
f
132.936 260.306 mo
132.636 260.306 132.335 260.306 132.035 260.306 cv
131.636 260.306 131.335 260.306 130.936 260.405 cv
130.936 264.905 li
132.936 264.905 li
132.936 260.306 li
cp
f
1 lw
10 ml
75 212.173 mo
75 192.373 li
0 0 0 0 cmyk
@
90.9121 213.147 mo
90.9121 221.946 83.8115 229.047 75.0122 229.047 cv
66.2119 229.047 59.1118 221.946 59.1118 213.147 cv
59.1118 204.347 66.2119 197.246 75.0122 197.246 cv
83.8115 197.347 90.9121 204.446 90.9121 213.147 cv
.749721 .679194 .670497 .901457 cmyk
f
83.9121 213.147 mo
83.9121 218.047 79.9121 222.147 74.9121 222.147 cv
69.9121 222.147 65.9121 218.147 65.9121 213.147 cv
65.9121 208.246 69.9121 204.147 74.9121 204.147 cv
79.9121 204.246 83.9121 208.246 83.9121 213.147 cv
.791196 .157412 .360967 .00173953 cmyk
f
.3 lw
87.5117 213.147 mo
87.5117 220.047 81.9121 225.746 74.9121 225.746 cv
68.0122 225.746 62.312 220.147 62.312 213.147 cv
62.312 206.246 67.9121 200.547 74.9121 200.547 cv
81.9121 200.647 87.5117 206.246 87.5117 213.147 cv
87.5117 213.147 li
cp
.605798 .521965 .515618 .218143 cmyk
@
76.4121 197.347 mo
75.9121 197.347 75.4121 197.246 75.0122 197.246 cv
74.4121 197.246 73.812 197.246 73.2119 197.347 cv
73.2119 204.547 li
76.4121 204.547 li
76.4121 197.347 li
cp
.791196 .157412 .360967 .00173953 cmyk
f
1 lw
75 264.373 mo
75 285.173 li
0 0 0 0 cmyk
@
90.8643 285.219 mo
90.8643 294.019 83.7637 301.119 74.9639 301.119 cv
66.1641 301.119 59.064 294.019 59.064 285.219 cv
59.064 276.419 66.1641 269.319 74.9639 269.319 cv
83.6641 269.319 90.8643 276.419 90.8643 285.219 cv
.749721 .679194 .670497 .901457 cmyk
f
83.8643 285.219 mo
83.8643 290.119 79.8643 294.219 74.8638 294.219 cv
69.8638 294.219 65.8638 290.219 65.8638 285.219 cv
65.8638 280.319 69.8638 276.219 74.8638 276.219 cv
79.8643 276.219 83.8643 280.219 83.8643 285.219 cv
.756435 .514183 0 0 cmyk
f
.3 lw
87.4639 285.219 mo
87.4639 292.119 81.8643 297.819 74.8638 297.819 cv
67.9639 297.819 62.2642 292.219 62.2642 285.219 cv
62.2642 278.319 67.8638 272.619 74.8638 272.619 cv
81.8643 272.619 87.4639 278.219 87.4639 285.219 cv
87.4639 285.219 li
cp
.605798 .521965 .515618 .218143 cmyk
@
76.3643 269.419 mo
75.8638 269.419 75.3638 269.319 74.9639 269.319 cv
74.3638 269.319 73.7642 269.319 73.1641 269.419 cv
73.1641 276.619 li
76.3643 276.619 li
76.3643 269.419 li
cp
.756435 .514183 0 0 cmyk
f
0 0 0 0 cmyk
%ADOBeginSubsetFont: AlteDIN1451Mittelschrift AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginNJAABG+AlteDIN1451Mittelschrift dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/O <1C60D8A8C9B7D98F53C02B5ACF0BE822E9D37FA1B22A27BE8D11E0B434923730A03F4240FD4AF2CDFEE113FCF1DDF550FBF2191437CB161B357D0F2950C21DB2400B87ED49C04EE4859141E92FED8E1C7A8F8A2316605FED64811D9DF8CDF53DF14AF8667194FA3CD56B23EF7B992833A9E31B34B954BC434F1B21D0A2249E93B5555E6692C6EE3A0D5C72D281AA01BAE4D621332FCC8A32639BD6829D2984F26854D9EC0C3A2DBC6F7515B74382EC4D0A107ED79D67ADFC7034B64B9FB649C9803F099640C7EAB2223DFA077CBC62492FF7AAEEF3C06CB4B138B07B502D13573D9544E9DF4C4984A4BEB454E1C88DD37EEFE016> |-/R <1C60D8A8C9B7D98F62BA56173B019995BAA6D93A5417408A30315A4B0C99F2174E085307736ED8A84F63A175B830D5FF1DC886A60C4877493A3A528A627E04C5F47B52FFB5FC6B0D46A9A1A414A5FA0D802D69F211EC2F3F69FC57A50FCBF3E4B572AAD5A5A4F7C42D1FCF8CC131B28280> |-/X <1C60D8A8C9B7832496F8EDFC4095E224575A3A9878593FB27B93EFE7FC718AD9D6F2C35CA395439A57051A1B8CF08FDC26C68D458B347D1B986129775F0D> |-systemdict /gcheck known {setglobal} if end {end} ifendNJAABG+AlteDIN1451Mittelschrift /Encoding getdup 79 /O putdup 82 /R putdup 88 /X putpop%ADOEndSubsetFont
/NJAABG+AlteDIN1451Mittelschrift*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /B 4{/.notdef}rp /G 7{/.notdef}rp /O /P /.notdef /R /.notdef /T 3{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /.notdef /p /.notdef /r 6{/.notdef}rp /y 134{/.notdef}rp]NJAABG+AlteDIN1451Mittelschrift nfNJAABG+AlteDIN1451Mittelschrift*1 [9 0 0 -9 0 0 ]msf37.1006 147.219 mo(XOR)sh%ADOBeginSubsetFont: AlteDIN1451Mittelschrift AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginNJAABG+AlteDIN1451Mittelschrift dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B66B39508AD28B8DA134B500BB47CDD9464B77D7CD28BA964855C88853CFD9C28609A7EAD89C4CF48F65B63D4FC803B361460719CEDF3F010749D606B5C2A84681C8F2BF3E72CF681699C37DDCAE18FCBA93D91312E84BCBD675B5EFCE3021B2C7F961C12F3458B3AED144B1A86C2DE9F660F6874E32> |-/N <1C60D8A8C9B6218489B21FBD246B6C678C0425B063C77718F880EE8968A69B3CEDE2F4BDA899DC13CEB325994344> |-systemdict /gcheck known {setglobal} if end {end} ifendNJAABG+AlteDIN1451Mittelschrift /Encoding getdup 68 /D putdup 78 /N putpop%ADOEndSubsetFont
/NJAABG+AlteDIN1451Mittelschrift*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /B /.notdef /D 2{/.notdef}rp /G 6{/.notdef}rp /N /O /P /.notdef /R /.notdef /T 3{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /.notdef /p /.notdef /r 6{/.notdef}rp /y 134{/.notdef}rp]NJAABG+AlteDIN1451Mittelschrift nfNJAABG+AlteDIN1451Mittelschrift*1 [9 0 0 -9 0 0 ]msf6.32568 157.219 mo(AND)sh15 146.469 mo
9.2998 146.469 4.7002 141.869 4.7002 136.169 cv
4.7002 130.469 9.2998 125.869 15 125.869 cv
20.7002 125.869 25.2998 130.469 25.2998 136.169 cv
25.2998 141.869 20.7002 146.469 15 146.469 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
4 ml
15 146.469 mo
9.2998 146.469 4.7002 141.869 4.7002 136.169 cv
4.7002 130.469 9.2998 125.869 15 125.869 cv
20.7002 125.869 25.2998 130.469 25.2998 136.169 cv
25.2998 141.869 20.7002 146.469 15 146.469 cv
.749721 .679194 .670497 .901457 cmyk
@
15 144.169 mo
10.6001 144.169 7 140.569 7 136.169 cv
7 131.769 10.6001 128.169 15 128.169 cv
19.3999 128.169 23 131.769 23 136.169 cv
23 140.569 19.3999 144.169 15 144.169 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
15 144.169 mo
10.6001 144.169 7 140.569 7 136.169 cv
7 131.769 10.6001 128.169 15 128.169 cv
19.3999 128.169 23 131.769 23 136.169 cv
23 140.569 19.3999 144.169 15 144.169 cv
.740902 .625055 .575372 .495155 cmyk
@
15 143.969 mo
10.7002 143.969 7.2998 140.669 7.2998 136.669 cv
7.2998 132.669 10.7998 129.369 15 129.369 cv
19.2002 129.369 22.7002 132.669 22.7002 136.669 cv
22.7002 140.669 19.2998 143.969 15 143.969 cv
.456001 .333349 .326757 .00714122 cmyk
f
20.1001 137.169 mo
20.1001 139.969 17.7998 142.369 15 142.369 cv
12.2002 142.369 9.8999 140.069 9.8999 137.169 cv
9.8999 134.369 12.2002 131.969 15 131.969 cv
17.7998 131.969 20.1001 134.269 20.1001 137.169 cv
.116976 .0572824 .0719005 0 cmyk
f
20.1001 136.169 mo
20.1001 138.969 17.7998 141.269 15 141.269 cv
12.2002 141.269 9.8999 138.969 9.8999 136.169 cv
9.8999 133.369 12.2002 131.069 15 131.069 cv
17.7998 131.069 20.1001 133.369 20.1001 136.169 cv
.749721 .679194 .670497 .901457 cmyk
f
45 136.473 mo
39.2998 136.473 34.7002 131.873 34.7002 126.173 cv
34.7002 120.473 39.2998 115.873 45 115.873 cv
50.7002 115.873 55.2998 120.473 55.2998 126.173 cv
55.2998 131.873 50.7002 136.473 45 136.473 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
45 136.473 mo
39.2998 136.473 34.7002 131.873 34.7002 126.173 cv
34.7002 120.473 39.2998 115.873 45 115.873 cv
50.7002 115.873 55.2998 120.473 55.2998 126.173 cv
55.2998 131.873 50.7002 136.473 45 136.473 cv
.749721 .679194 .670497 .901457 cmyk
@
45 134.173 mo
40.6001 134.173 37 130.573 37 126.173 cv
37 121.773 40.6001 118.173 45 118.173 cv
49.3999 118.173 53 121.773 53 126.173 cv
53 130.573 49.3999 134.173 45 134.173 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
45 134.173 mo
40.6001 134.173 37 130.573 37 126.173 cv
37 121.773 40.6001 118.173 45 118.173 cv
49.3999 118.173 53 121.773 53 126.173 cv
53 130.573 49.3999 134.173 45 134.173 cv
.740902 .625055 .575372 .495155 cmyk
@
45 133.973 mo
40.7002 133.973 37.2998 130.673 37.2998 126.673 cv
37.2998 122.673 40.7998 119.373 45 119.373 cv
49.2002 119.373 52.7002 122.673 52.7002 126.673 cv
52.7002 130.673 49.2998 133.973 45 133.973 cv
.456001 .333349 .326757 .00714122 cmyk
f
50.1001 127.173 mo
50.1001 129.973 47.7998 132.373 45 132.373 cv
42.2002 132.373 39.8999 130.073 39.8999 127.173 cv
39.8999 124.373 42.2002 121.973 45 121.973 cv
47.7998 121.973 50.1001 124.273 50.1001 127.173 cv
.116976 .0572824 .0719005 0 cmyk
f
50.1001 126.173 mo
50.1001 128.973 47.7998 131.273 45 131.273 cv
42.2002 131.273 39.8999 128.973 39.8999 126.173 cv
39.8999 123.373 42.2002 121.073 45 121.073 cv
47.7998 121.073 50.1001 123.373 50.1001 126.173 cv
.749721 .679194 .670497 .901457 cmyk
f
0 0 0 0 cmyk
%ADOBeginSubsetFont: AlteDIN1451Mittelschrift AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginNJAABG+AlteDIN1451Mittelschrift dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/L <1C60D8A8C9B7EF3224D703C1EFB8CD539F47B41D931E6DA2F0DD8BEA> |-systemdict /gcheck known {setglobal} if end {end} ifendNJAABG+AlteDIN1451Mittelschrift /Encoding getdup 76 /L putpop%ADOEndSubsetFont
/NJAABG+AlteDIN1451Mittelschrift*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /B /.notdef /D 2{/.notdef}rp /G 4{/.notdef}rp /L /.notdef /N /O /P /.notdef /R /.notdef /T 3{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /.notdef /p /.notdef /r 6{/.notdef}rp /y 134{/.notdef}rp]NJAABG+AlteDIN1451Mittelschrift nfNJAABG+AlteDIN1451Mittelschrift*1 [11 0 0 -11 0 0 ]msf26.9438 152.828 mo(L)shNJAABG+AlteDIN1451Mittelschrift*1 [9 0 0 -9 0 0 ]msf126.23 157.219 mo(AND)sh97.085 147.219 mo(XOR)sh104.944 136.469 mo
99.2451 136.469 94.6445 131.869 94.6445 126.169 cv
94.6445 120.469 99.2451 115.869 104.944 115.869 cv
110.645 115.869 115.245 120.469 115.245 126.169 cv
115.245 131.869 110.645 136.469 104.944 136.469 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
104.944 136.469 mo
99.2451 136.469 94.6445 131.869 94.6445 126.169 cv
94.6445 120.469 99.2451 115.869 104.944 115.869 cv
110.645 115.869 115.245 120.469 115.245 126.169 cv
115.245 131.869 110.645 136.469 104.944 136.469 cv
.749721 .679194 .670497 .901457 cmyk
@
104.944 134.169 mo
100.545 134.169 96.9443 130.569 96.9443 126.169 cv
96.9443 121.769 100.545 118.169 104.944 118.169 cv
109.345 118.169 112.944 121.769 112.944 126.169 cv
112.944 130.569 109.345 134.169 104.944 134.169 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
104.944 134.169 mo
100.545 134.169 96.9443 130.569 96.9443 126.169 cv
96.9443 121.769 100.545 118.169 104.944 118.169 cv
109.345 118.169 112.944 121.769 112.944 126.169 cv
112.944 130.569 109.345 134.169 104.944 134.169 cv
.740902 .625055 .575372 .495155 cmyk
@
104.944 133.969 mo
100.645 133.969 97.2451 130.669 97.2451 126.669 cv
97.2451 122.669 100.745 119.369 104.944 119.369 cv
109.145 119.369 112.645 122.669 112.645 126.669 cv
112.645 130.669 109.245 133.969 104.944 133.969 cv
.456001 .333349 .326757 .00714122 cmyk
f
110.045 127.169 mo
110.045 129.969 107.745 132.369 104.944 132.369 cv
102.145 132.369 99.8447 130.069 99.8447 127.169 cv
99.8447 124.369 102.145 121.969 104.944 121.969 cv
107.745 121.969 110.045 124.269 110.045 127.169 cv
.116976 .0572824 .0719005 0 cmyk
f
110.045 126.169 mo
110.045 128.969 107.745 131.269 104.944 131.269 cv
102.145 131.269 99.8447 128.969 99.8447 126.169 cv
99.8447 123.369 102.145 121.069 104.944 121.069 cv
107.745 121.069 110.045 123.369 110.045 126.169 cv
.749721 .679194 .670497 .901457 cmyk
f
134.944 146.473 mo
129.245 146.473 124.645 141.873 124.645 136.173 cv
124.645 130.473 129.245 125.873 134.944 125.873 cv
140.645 125.873 145.245 130.473 145.245 136.173 cv
145.245 141.873 140.645 146.473 134.944 146.473 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
134.944 146.473 mo
129.245 146.473 124.645 141.873 124.645 136.173 cv
124.645 130.473 129.245 125.873 134.944 125.873 cv
140.645 125.873 145.245 130.473 145.245 136.173 cv
145.245 141.873 140.645 146.473 134.944 146.473 cv
.749721 .679194 .670497 .901457 cmyk
@
134.944 144.173 mo
130.545 144.173 126.944 140.573 126.944 136.173 cv
126.944 131.773 130.545 128.173 134.944 128.173 cv
139.345 128.173 142.944 131.773 142.944 136.173 cv
142.944 140.573 139.345 144.173 134.944 144.173 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
134.944 144.173 mo
130.545 144.173 126.944 140.573 126.944 136.173 cv
126.944 131.773 130.545 128.173 134.944 128.173 cv
139.345 128.173 142.944 131.773 142.944 136.173 cv
142.944 140.573 139.345 144.173 134.944 144.173 cv
.740902 .625055 .575372 .495155 cmyk
@
134.944 143.973 mo
130.645 143.973 127.245 140.673 127.245 136.673 cv
127.245 132.673 130.745 129.373 134.944 129.373 cv
139.145 129.373 142.645 132.673 142.645 136.673 cv
142.645 140.673 139.245 143.973 134.944 143.973 cv
.456001 .333349 .326757 .00714122 cmyk
f
140.045 137.173 mo
140.045 139.973 137.745 142.373 134.944 142.373 cv
132.145 142.373 129.845 140.073 129.845 137.173 cv
129.845 134.373 132.145 131.973 134.944 131.973 cv
137.745 131.973 140.045 134.273 140.045 137.173 cv
.116976 .0572824 .0719005 0 cmyk
f
140.045 136.173 mo
140.045 138.973 137.745 141.273 134.944 141.273 cv
132.145 141.273 129.845 138.973 129.845 136.173 cv
129.845 133.373 132.145 131.073 134.944 131.073 cv
137.745 131.073 140.045 133.373 140.045 136.173 cv
.749721 .679194 .670497 .901457 cmyk
f
0 0 0 0 cmyk
NJAABG+AlteDIN1451Mittelschrift*1 [11 0 0 -11 0 0 ]msf116.59 152.828 mo(R)sh14.9448 339.973 mo
9.24463 339.973 4.64453 335.373 4.64453 329.673 cv
4.64453 323.973 9.24463 319.373 14.9448 319.373 cv
20.6445 319.373 25.2446 323.973 25.2446 329.673 cv
25.2446 335.373 20.6445 339.973 14.9448 339.973 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
14.9448 339.973 mo
9.24463 339.973 4.64453 335.373 4.64453 329.673 cv
4.64453 323.973 9.24463 319.373 14.9448 319.373 cv
20.6445 319.373 25.2446 323.973 25.2446 329.673 cv
25.2446 335.373 20.6445 339.973 14.9448 339.973 cv
.749721 .679194 .670497 .901457 cmyk
@
14.9448 337.673 mo
10.5449 337.673 6.94482 334.073 6.94482 329.673 cv
6.94482 325.273 10.5449 321.673 14.9448 321.673 cv
19.3447 321.673 22.9448 325.273 22.9448 329.673 cv
22.9448 334.073 19.3447 337.673 14.9448 337.673 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
14.9448 337.673 mo
10.5449 337.673 6.94482 334.073 6.94482 329.673 cv
6.94482 325.273 10.5449 321.673 14.9448 321.673 cv
19.3447 321.673 22.9448 325.273 22.9448 329.673 cv
22.9448 334.073 19.3447 337.673 14.9448 337.673 cv
.740902 .625055 .575372 .495155 cmyk
@
14.9448 337.473 mo
10.6445 337.473 7.24463 334.173 7.24463 330.173 cv
7.24463 326.173 10.7446 322.873 14.9448 322.873 cv
19.1445 322.873 22.6445 326.173 22.6445 330.173 cv
22.6445 334.173 19.2446 337.473 14.9448 337.473 cv
.456001 .333349 .326757 .00714122 cmyk
f
20.0449 330.673 mo
20.0449 333.473 17.7446 335.873 14.9448 335.873 cv
12.1445 335.873 9.84473 333.573 9.84473 330.673 cv
9.84473 327.873 12.1445 325.473 14.9448 325.473 cv
17.7446 325.473 20.0449 327.773 20.0449 330.673 cv
.116976 .0572824 .0719005 0 cmyk
f
20.0449 329.673 mo
20.0449 332.473 17.7446 334.773 14.9448 334.773 cv
12.1445 334.773 9.84473 332.473 9.84473 329.673 cv
9.84473 326.873 12.1445 324.573 14.9448 324.573 cv
17.7446 324.573 20.0449 326.873 20.0449 329.673 cv
.749721 .679194 .670497 .901457 cmyk
f
38.9448 339.973 mo
33.2446 339.973 28.6445 335.373 28.6445 329.673 cv
28.6445 323.973 33.2446 319.373 38.9448 319.373 cv
44.6445 319.373 49.2446 323.973 49.2446 329.673 cv
49.2446 335.373 44.6445 339.973 38.9448 339.973 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
38.9448 339.973 mo
33.2446 339.973 28.6445 335.373 28.6445 329.673 cv
28.6445 323.973 33.2446 319.373 38.9448 319.373 cv
44.6445 319.373 49.2446 323.973 49.2446 329.673 cv
49.2446 335.373 44.6445 339.973 38.9448 339.973 cv
.749721 .679194 .670497 .901457 cmyk
@
38.9448 337.673 mo
34.5449 337.673 30.9448 334.073 30.9448 329.673 cv
30.9448 325.273 34.5449 321.673 38.9448 321.673 cv
43.3447 321.673 46.9448 325.273 46.9448 329.673 cv
46.9448 334.073 43.3447 337.673 38.9448 337.673 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
38.9448 337.673 mo
34.5449 337.673 30.9448 334.073 30.9448 329.673 cv
30.9448 325.273 34.5449 321.673 38.9448 321.673 cv
43.3447 321.673 46.9448 325.273 46.9448 329.673 cv
46.9448 334.073 43.3447 337.673 38.9448 337.673 cv
.740902 .625055 .575372 .495155 cmyk
@
38.9448 337.473 mo
34.6445 337.473 31.2446 334.173 31.2446 330.173 cv
31.2446 326.173 34.7446 322.873 38.9448 322.873 cv
43.1445 322.873 46.6445 326.173 46.6445 330.173 cv
46.6445 334.173 43.2446 337.473 38.9448 337.473 cv
.456001 .333349 .326757 .00714122 cmyk
f
44.0449 330.673 mo
44.0449 333.473 41.7446 335.873 38.9448 335.873 cv
36.1445 335.873 33.8447 333.573 33.8447 330.673 cv
33.8447 327.873 36.1445 325.473 38.9448 325.473 cv
41.7446 325.473 44.0449 327.773 44.0449 330.673 cv
.116976 .0572824 .0719005 0 cmyk
f
44.0449 329.673 mo
44.0449 332.473 41.7446 334.773 38.9448 334.773 cv
36.1445 334.773 33.8447 332.473 33.8447 329.673 cv
33.8447 326.873 36.1445 324.573 38.9448 324.573 cv
41.7446 324.573 44.0449 326.873 44.0449 329.673 cv
.749721 .679194 .670497 .901457 cmyk
f
0 0 0 0 cmyk
NJAABG+AlteDIN1451Mittelschrift*1 [11 0 0 -11 0 0 ]msf9.23828 315.589 mo(L )[6.1123 0 ]xshNJAABG+AlteDIN1451Mittelschrift*1 [9 0 0 -9 0 0 ]msf17.9878 315.589 mo(AND)shNJAABG+AlteDIN1451Mittelschrift*1 [11 0 0 -11 0 0 ]msf35.4165 315.589 mo( R)[2.63721 0 ]xsh123.018 305.489 mo
117.317 305.489 112.718 300.89 112.718 295.19 cv
112.718 289.489 117.317 284.89 123.018 284.89 cv
128.718 284.89 133.317 289.489 133.317 295.19 cv
133.317 300.89 128.718 305.489 123.018 305.489 cv
.612421 .52224 .500694 .205905 cmyk
f
.25 lw
123.018 305.489 mo
117.317 305.489 112.718 300.89 112.718 295.19 cv
112.718 289.489 117.317 284.89 123.018 284.89 cv
128.718 284.89 133.317 289.489 133.317 295.19 cv
133.317 300.89 128.718 305.489 123.018 305.489 cv
.749721 .679194 .670497 .901457 cmyk
@
123.018 303.19 mo
118.617 303.19 115.018 299.589 115.018 295.19 cv
115.018 290.789 118.617 287.19 123.018 287.19 cv
127.418 287.19 131.018 290.789 131.018 295.19 cv
131.018 299.589 127.418 303.19 123.018 303.19 cv
.157809 .106447 .106142 0 cmyk
f
.1323 lw
123.018 303.19 mo
118.617 303.19 115.018 299.589 115.018 295.19 cv
115.018 290.789 118.617 287.19 123.018 287.19 cv
127.418 287.19 131.018 290.789 131.018 295.19 cv
131.018 299.589 127.418 303.19 123.018 303.19 cv
.740902 .625055 .575372 .495155 cmyk
@
123.018 302.989 mo
118.718 302.989 115.317 299.69 115.317 295.69 cv
115.317 291.69 118.817 288.39 123.018 288.39 cv
127.218 288.39 130.718 291.69 130.718 295.69 cv
130.718 299.69 127.317 302.989 123.018 302.989 cv
.456001 .333349 .326757 .00714122 cmyk
f
128.117 296.19 mo
128.117 298.989 125.817 301.39 123.018 301.39 cv
120.218 301.39 117.918 299.089 117.918 296.19 cv
117.918 293.39 120.218 290.989 123.018 290.989 cv
125.817 290.989 128.117 293.289 128.117 296.19 cv
.116976 .0572824 .0719005 0 cmyk
f
128.117 295.19 mo
128.117 297.989 125.817 300.289 123.018 300.289 cv
120.218 300.289 117.918 297.989 117.918 295.19 cv
117.918 292.39 120.218 290.089 123.018 290.089 cv
125.817 290.089 128.117 292.39 128.117 295.19 cv
.749721 .679194 .670497 .901457 cmyk
f
0 0 0 0 cmyk
NJAABG+AlteDIN1451Mittelschrift*1 [11 0 0 -11 0 0 ]msf106.117 315.589 mo(L )[6.1123 0 ]xshNJAABG+AlteDIN1451Mittelschrift*1 [9 0 0 -9 0 0 ]msf114.866 315.589 mo(XOR)shNJAABG+AlteDIN1451Mittelschrift*1 [11 0 0 -11 0 0 ]msf130.665 315.589 mo( R)[2.63721 0 ]xsh1 lw
10 ml
111.492 351.173 mo
104.992 351.173 li
@
111 345.173 mo
111 351.173 li
@
117.496 345.673 mo
110.996 345.673 li
@
117.004 351.673 mo
117.004 345.673 li
@
132.5 351.173 mo
129 351.173 li
@
132 345.173 mo
132 351.173 li
@
135.5 345.673 mo
132 345.673 li
@
135 351.673 mo
135 345.673 li
@
138.5 351.173 mo
135 351.173 li
@
138 345.173 mo
138 351.173 li
@
141.5 345.673 mo
137.5 345.673 li
@
141 351.673 mo
141 345.673 li
@
39.5122 351.173 mo
33.0122 351.173 li
@
39.0205 345.173 mo
39.0205 351.173 li
@
45.5161 345.673 mo
39.0161 345.673 li
@
45.0244 351.673 mo
45.0244 345.673 li
@
12.4922 351.173 mo
8.99219 351.173 li
@
11.9922 345.173 mo
11.9922 351.173 li
@
15.4922 345.673 mo
11.9922 345.673 li
@
14.9922 351.673 mo
14.9922 345.673 li
@
18.4922 351.173 mo
14.9922 351.173 li
@
17.9922 345.173 mo
17.9922 351.173 li
@
21.4922 345.673 mo
17.4922 345.673 li
@
20.9922 351.673 mo
20.9922 345.673 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/NJAABG+AlteDIN1451Mittelschrift*1 uf/NJAABG+AlteDIN1451Mittelschrift uf/AlteDIN1451Mittelschrift uf/NJAABF+DSEG14Classic-Italic*1 uf/NJAABF+DSEG14Classic-Italic uf/DSEG14Classic-Italic ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 17.0%%AI8_CreatorVersion: 23.0.1%%For: (Dale Johnson) ()%%Title: (AmalgamPanelDarkAllRed3.eps)%%CreationDate: 03/02/2019 23:32%%Canvassize: 16383%AI9_DataStream%Gb!R&pL=!1dK$d1^cTJV6?AhJ+`p$nJHS;cTpS*D0lYhgqs:@miIW$1I.uLB3Bt<fX=9SUNCFi.jiYj"Zi4Y3SX]YE3h]?$>_5.J%U<EpRF1JGCp\]'45WfoVYd%`%M6Scr_L^-WLebm_F<m!)7C^8B*Fe"J9det@2A(usUN'+1@GY3aq:Vbkb^98.R@d:;_D67ss1:'K%\`nKo-_6H6IPR>kH'4Y=H=PVYV>4p2MIn4d^/2@O,#RK7Zs*!`AT&uU"tNNuIo9qqb=j0Gkq&0r?Ega#9L_0J(!ZD\0cBN[rN"(A%U7\:0KJ1T(BkMS*E$6.VAD#5`H8OmDY,>Q38=`-nkVi0l#^f_UaoIRn2nU12XA$I$-GN^bL&sb.@9<Hj\LQbL\/U;qP&ZeE`5$RB%)2j).Z$;F'7bB[6NC>%J#eEBUB<_^]9dHL=,e0&6!C^uT8OjXN`\8dsf6dLDZs3p.eS%-npPG7Do>S']N0gj4VGBUe>PrRtl)]-Z%f^WW'HGUqji)BJ$Q343RAV)HR!KVi[3.8Y4iD5cuE#GXsq*.@HT;e#)^=26Kbfd)lC6&8ob[D\-R`:upao-P&$P0QUCoA2`Q,LnZ%RJ6MK$Hf4?IVI4r4@K3(dO-Zol3Q;F$HV[`ZA.G<:(d[2BWPD#D][%CK)sI<r2_bo,:nHUa+XLnJ:l6;%/cYAkn&pj5Z`V3-=^l_%KFP0uNh`@@3m"Z9$TQ&D&gs>7$[@=9M+(l$&U&dG,CO#8+@$3mhuQiR!CW\8N4qfg<063TaP&V>R^+X491$Na6HNc&NCSP]6oZ;0%;6=%.FGL)UOc7[E5V3jH6EuBQ5_QpY%ObpGJWL5X,"_PGNrb+ULis'&/c#Qci7M_5n-Q<=W67lq)\E#HND,`(cqP/ug_p6BQutlk%]c^,'`(:"AQikbr.s+f4n3.Y^'0m]>3m%?6ig2P>%K6?#_-\_t565HeQd:l-*!a5=%R/u6plsh.do$LdNSfW4?n'`An.V+F`F,ZI%XAgBd-BkYBBZM%g9IA`QaWrF&9Ys]s(]8r_np+=eT8.@IoC,=8&'L20n7ej9Mnukq-2>,P_XClk0tnJH$kY^XDj'9':_`[290o$)%-S,F8,*_)"O<XH+b<UsC-`!5N!l#+WJtMN>;?T3m9pe_dAk3O3KQP+MGSed2@:F+`pokI.$\#rJV%UF2g';)IH&T:i\HG.eS!\5T%4iSN&L7puY8K3d)p^`[BoYF=*'5g*021C9a%"?)lO?V+0Qn.r;80@b_=-,JurpUS2%e%2/=:3I]5B/2_.D^DNn<"WF1&s$VnjD+>%j+k/T94>OH^0o)<p(2;((P[i`-LHL[O?ZhO;F_uG;?u+!<9'm<555FW@JPZM@@lD$i?p/YWO'-kA/!e8SAPoBF;#N=Z9k>r@ZD`<%b6$'!d\`E#(d#ra$lALE@SU*[d"ZOqV$M0J4+889a+"qIXI31ZELUIpi#55O&'M/PmJ%]kMeK/e=bKS6lso9,E\GNVHs;aWU?PQ+%'.urF!&5[fKPsN=+Li&3$!^^gIZn2RoEW.9<Fj$4QGlXqDu9ie:A?2bj$0"`)T?orDu:E4j(mlus!8<Q3ftPh'B3@WMk<Ptpb.uO%f?uVWZagDHHq4%QJ&NVGQG2l2^%oS>*4?mc`9iGcaVFdZoWaO+,[)\E,rT(%JF=c_B&`;A?3#ZlCn*pql>N."oTh&BU\kAcC>G6.%!8j+"M6[+^JM)PT;S3"u_HQFnpmFj<?go.lNNWoM3B=h-s$5aRJ@/ngk-/ASJa8:3ie8eM9u(Q>%;IH@&bN2.&!4kcLb6CUf7`J*%ru`##-_%nqi"c&.00l,Pn^ZbRr.MSsg>WAFrXH79hnq/+2lNPQ"I%AO.>TMR"YnVE9i+=qQA,"khs)ulD3<!F-AQ=gJ0>>Q+ORt&%&,lfZY$]'4+*]kC\7sI4Cn-N'h]nNWndi47,j1Q\OONtS&](a`3'^-_Z0Y$5C]_d?O\C!A[7M"dfgmEI>$=Rce<j_e+PBPRQ6CH[%blhg$[trooM02JKkZ:X"RtGt$s)9Qg%#=9O8PR(Z"F"*8q1[!aGLZ2]eo(rtf*pqU#ra-n1>E76=sVh+'IP(DcA=Y"n#up:_B#Rb%\44Sl_:B`G7P%:YK!idZZtro&/oM,""/,m$KF!kZCe9b<7)eK)g-Upj8A4LA`*Ce]*P3Fs=/$Y.$uIhc@"N2nJli$N)d>Q614g2b%FCu6i'#k/\+oE;6)jpk#O?,)oW4bhlL59BupQTu(8mj2@?*Gm">`r$[%3%qZ+ncsd"K_Z<EC)V$WJ!-p:oM)Uk8^Ib8?1G\MjP9E%[R@.!,k;7WM&_CR?RNV.e6qNpZpB&!gIC^&$2,fW>N.hDZYu%#.ccU8SSDEjpQX+#/aK4Q-m].saI<_NBlDFk6s@Re)uGD%MeK>b%#2Fu+nk%P9O*AbD(q/6!&S]?r*&]X0>U\Rf*1'#n&bU*2b![<q:Ljma;c66"=F1@_=>mG/?+#ZXqC_S"@MS"$Z1MGY-t/,33@nse%c[[d3A.;(@<kP>Z>EWFMO3=AMNGU4e9]"2#;i1P8q;sb6=q&tXA5ss$!$d/.8YnQrnk>pS3a?0/rG.^"F,`:^^SNNsU;mGYN'rh6%/.ouih]BM$a<s!6Ng4(1,Su:_$IZ7O/s/pD,*<^UDu<7BK@CfropK1fl9TnSf\SGXj#[6=!o?:`i)LCU!dEQ9r!^B'eOXdUP%KCq%!q6e;gJEQ=L/c1.\4`VV.af$M35q'M/QeJ6R8UdHq'i*EQ95n<-c@s+a##+5QmRYRQH&[Wa9g7X,kiTZeb2rf01,:OBETgjYV!u3%aaJt.U^ds#K<5BX,LQS&#&6bJ4:;T?VNfa$p[p@Bru^3ljMR(aJ^b'b*gLF1O[hYM9+&@U\Y"K.)gh6mDbt9o\##*m^0MA4I+4aF%fXlqr@/jIOrPSuEp_Oek8U!Gu$+\!q/[>`LUtfUIq?LRr-KjBsa!9i!&oZQofZP$,oV`aNRE*F3Vee]f#9\Ab+C%uOlYYF^m%?)S%#'6N&gEgE@JqR;WYhoQ>hXm,\PKY@!lU%\_Z;2e,9$,PH4@$HlX!d(TgounV:^cMFn8HFgW8CMLl*(uR(]eG8"hF@qH878LON%LC%qio)?8h(An77%rU$>CbWmZtdGYgh]CI.0Ab9rt&,;j,i;5q5K-Q1U^$$Qtsm\Dm$;d65l)QGk@"8_WSWjL0c$=RaD&GZ*9q8A-hQ%1ps%jU0_Xu/Rh013[E`GD!*C2;]66Y2]a(2Knu$+M9^uB45loi6UE@8P4i=UP84ok;N0[EM'eIL(;X;ed;QlDimZ!@'\EHGf3qA7%j%uge"G.n%dccRq#4]2^n&kPD8K25iIY$?P/b_/fhjA1Ir["&9e1Oni96qfI\'bbT`OFo<$0#A\c4GJ).LgAQnm[a-<5NW)U1]Wg%'"`cVMs/o/5+rq;E`S4.g09d,YFJ?#gEVh*3="X!Xju/K8_lojnMY>,aSLhPj<%S/s,"/$CR],2AFg"N?Tq(Z`YG/UJR_q/&!3[o%r@R4R&cW796I75lEJ->%hICLbr&0/DM7%AE.n0)eoH4]0(`(Fd@u4G)d%-5_'&X+C[5f/_Q/@3?J\-U'@G<?T"Lb;Lr<K83piitg%W"43*"].trhZM_AZ6\7#_Rn0)KD-WU;mHDg=:\U]eqNT0@k1FW+\&0O._DUO)u@A>/nm%sY3l4A8=!d$M:WY=8=hg5E^an,6(Z0d%8bO.u?J%$M\eKQ"M$V+c;MY:oom?Qbr'u''Xo;jH9GGMcVR/^"*%7\i21Xj^$b4`V5X*3+Dd('_7i[*"+<AX^G89W>/Q=/b8*N/(%%CVl_>\VA"TdL$:IId(Y15%>,p4nZK0nr'd,`gdr)%OD+Nr@?=%RB-MnraUp&f2jtL''"3hdAG!2b7'1Rdb_c[WGh^Sp6]%mn@8G%pjX5))8+)QR0^_@.'+6dhpa(R_mL+k#*bn[[&@si\r#gM(o9hq^+.\Gr0tu)I$S1`;?c=)Pf]Ld-2:BF:c5C+&>%'m'!Yf//38A*%;C"kN<*kSe-A&SZ7W"mQKp'[OPd_t"3T1Ca.A_u'Bn14LLW@2d&fTJ6BK'>sQpb7_)Vg@1ZA-'1*3lK1ZZlU)f*PmuoQkIEG>_Y[%jo)jQ'+um)i_o6$op^f<AQ_b%`^4LdQtX<:q`"*CnrXg[1eE?p["'+l,sDp!V<go"fCX>Vk.[(PfG>p,a#:].EL<PCZI*r\i//fq%f8+j%U*XJhYjqRsa'>FRJ],sj&kV<<i]!/\q<WnGcQ]W;;G:EaTjYV=gLBghnr9GK0oAoMH4W52)-5CQOQ[/ML->uk_N<qW>&`hb%PU%i[($e`;Y@'#>qf:\a^n+g'*B*Y2s"F+S+ur>`Hu=u#`5rbF>:-[k%gMh>H1>c=nmIPDZ/rgCCW,VBo__:6!IHIRntu+en@\tq%?>M5"!L>"f$_`F@\9=L%m`2Q%_t#"K$'?Q*&+RCIO?101RWrSC*/^q^4t=^TH@M?JO0KuTYu8d\qb4;FETsq\.H3;6!FY#oeATn"%@&PRq>j89P(%cnkM/J=D&4VMOfb1QCEb[S&@r*b'9=39k>6D5K2j*D/GRFF[74YCRZG6LnTEETKJT>[ZNen<HcQp\e\.5JB[F$hq%g#S;!E/e:d8Ft_CA,;Q`m09"a7ccc9$WjmXl$,chf7nm/jNGX%,8(!e!oBg5qiZ.JQ'Cf*f!A#@)<jeMjcn#G?u@d)7ATp,e)G@-%f?AV8SX(\^p;[+dVldXlnHUs0U$faQ,`.mECgsHCMd]l<batP/&8.3]1Z]Rd_726sI`Tb3<Xm0qbZ[DpX$#*-m(&XICm)\67AM#0%RA:P+Pd&T)X,1jb*]2m=W9$nV'A`@&PiFs,FYrS_M@n7k7eYhp]:7Z\.$$/6Cjf"L4MWa%?FW.R/!os()-@hon#/#<XK[G:W.N5G%M=$>"V3KWN]f&`0[H<q(jHB([hN$AYddh^m7i7D-0$R%P3C5KYean41]Kc+NE=E`e4=?Ok.-VpQE:M0cWH0;J,md@&b=!OGnre%[%`V(t#Bc\]EK;:pj9.=YY(l<Sg,=tc9LM3WP75qt>RjXBUOK:O\V5T@Nj&+MW_I$8I'st1*?B5frPhT$59+p,a[*FG3j7Xfq88H>M%;+sZ4/be<OY=BK-f=W^cYOVOXA.+VPK%Lp/V%NSlk_Z=7;:n+RoW\_54i/_,ACm@:R[(c;oZFjUq7(t5-GN%1cm3lMQ]QT"ZYR(:%8fB_RX\-It"Kjc,7_rm4G#>gqc/k@!D^(p$(A]mt4;Wqm'6:',P$toY6F8M[iM"!8/+&dQ*=oD>fJ^oSbn4+!I)EB]4prg)PPb^^%RKm;e0MH2?W&+`Ipk$P-fLEtmf4;!0M4`hb7-1*c.jSgTYsB?/V'N57`3EQJl7(fcP);eNJOrK$K&[?hr0?,'4Ei'!PCI-9S'aJ!%<Kp+f-;!?sT/?27[UXYnI"EMOFM*W8>/_einjQC`76JBPT;8O?VFG.g;ponns.:8miq8C^0tWhU7']]'a8_tf^EZL`[abIKco_](%,=.J<p2-[FbPc*$-V5[hqoC12[*+>\D-aR?2RXg4iiEYhO79@NHjV[YQ6[oY+j;>*Du=GC)a.p+X7a@'C?(K9ht;B901WA;$%J+s%Kti>e+$@ba$>95\?3!ceiN*##L\![C5FP8,iF8^o?Ld"/eS*Co_f\l$(4OoKdD874W4$ZC2\LH&l!VC.(%+V(nG=5*H&kqMUGm$u%*l#k@?KF,LNc=Y9>\5631YS(]U$?LR3A*D6A`pA)o1dmu7V.R;Y&Vjs<7D[iDp%c8hqu'XmK3T;5268<%PLnr0S*1Sq&W5P$[:3d%$,6g#3WeBX@Mf;f9KTS0G659"T^5*D><go40E)_VhnrH=-$8uGb[1cg*&c_AZh^WI&&R"/\A"JTQ:'Ehembpk:.MXu</>r%c-O8U%[JI=KWuUr,$iL):WZ'-,pj:^tp=9n%5mh_LI1c>ERU8B*qt!$b@K*IeUbbG(JTQltSI'OLo@@;)#E??T`qLB.2*[Y8-N%6t?"$Lt%PK@J=.:4\g4[,CTNKFs0:&HJqk>4W[I=P4_T;!taaFM7.;K@?S6s%fbI'Z'6@fusG_mBm!T/XLh63ju5E@oBHVFXWDGbZcgSLlr@%!J3c1!0G)+!,(/D!eT-0d^*h(a_q_Y(SKu,3+"=iLtKRIR>;Vi^U%#tMAtW6Qo,V+^EOKGb,.u=(TQL^F]j-GmQ)ujJ4i#GX*MLA%qQQf^b>DC82K"=bV^F`T(O02ddmFIn<>oY[/Nd:a^,s2X3pE_I5S*$6IN7cu^jELj&`o!AY<Q77oor7Cgk(;@bnc_HiiG(o8_U/-%:VGh$rN,26YjP.mh:cg_C[2-K!UM.!iM7d$q:=F2hD3)S);!SVfDnjPqdI_f/7A7q`#-leSM5%9$lYT7?$@XR+r26E#!gR;J'6%@%Cg9p>=F\$e`>)_3QimMn#d@d=;.n<!%0g6+o+\$,LDRh?^[;+A2Zbk>TXCB,9^6SFb("V1CeQT&"ssd_KG,[M%sJfIKtg#,P)4./%T<(($//&WG&=AN.pt7TU_FA3@GQJTNZha@&4.gnTn[F,@-t`3$@"/8L)pHj?h(IWL`+NSc#*6pDI(cK&#'67mgRi]cP;Y,?^`NHl%pJ:)1+)p1#nY3sE^c9\.c+_$eVG*pE>5/N,.nr&+ItAbo2pirI2Li?S&*C`.H6(lpcMl`Lo7a8L>gC!r`hYEV#Uej8VRkIeFQJJl%@#n81/BG#d/C_`Kb6@7YrZLF'C,[O`HXmVb#!*ZF"m@"h]0GJqGQY0*!>5dhroZTRLkp&QbqZuu%Ft-/G7U_l8`OJEh7PATdt$0#%S++\;5p($=iL2osHS1iLK_9A1d[JK0;RMBPRhc]VUV!c.Ig:o:H=9jHJKI6287DTWUo^f;n,/Nhg:X0a#<_okJW]C$^BuurTF]EM%U[`^6:]>1>Ac`Z@J=!_"JAIRMe^-_CH^:0""F*0s;0@h\@@?8M*MED>;:c?t`#J?2I@qA#ok;<;4IT%^E8-bDk-22MOg:16btWmh%fI+l>V-qZO_nq$`KEgk4#fX:oDLcF+535@A!.]I:cV=mQ3t+=)_#A18%f9!f(`>;6PbW80P4[h^k1)g.4CZ*V'`AR:<2&OifmcN2%4,KTF?!LE["0]c]Y0Oi8#$map!"$"-%(IrAk;s"-G,G1/^_UgJVSHCZ7HfrHNL"FC_ON`2Ch+V(qW-mZE,c>9r.&"$!a8?::0uiB%P<QMTFH6bmJKY$]Zd3G8^eYl!D]LZtrrm)?8c$1'$cWU5:bp.tM&=KV0q)SiZ?m$IjBof^rNG.=WOVptGS;gO.YQ6T(mY=m#o<!E%Pt8nT3Yme'Ck>="@djlF`L1rp_D3r@8("1ud:afA`1t^>a$nq[;&l-#cs.4O&!VmTnUHt*k^Q$Ra8RTnM#UOaOnc*oIM:3/^F9""%D:0*q0+o#[rkhY3$LW)gPL]Q5BE/<.g2Kh5-Yo827Y`n_@KE)pEj/6NZpn]F".('+f]XBE-M:DkLkAM'fXA4*D"MP'g]go5dk8@F%%9+]nbq37p!rFsZ%#l@f-j6X6rt01%MGuNW.Mm(N>8uQ>V9^j+#!rNt7OSu-&cTf%:H,]9H(W]9G]r*FCH@l7a$DC%'1UgNM?edL%!%aQRK[0Tl'h>30<iS(u:&4oU_e%JaE!:2mo+ZYTre@17pseW$/O0:!#g5#s[`oPGLF\;^d@%(-=a5Fq;f2e=*Z#JE=XpTR8%I(h%TtOMF$d8WFD"=W2`!18ma\)m<ZS[9j6P!`gI?SqpbkJ6d7S4`$q%'9m0r3Z(]8er.$#`9%9j@1<8^UId=B9QHoKOnGOM'Fr\XH=o%Z^0t8PJbnU"2-/9k5j%?<?2$]]`>S?(SUF"#;'3krqnG;NW6n2YagYus6I*1n/sZ^:\9M1c<%fCebHrfDb+`AQ+,ZHcW]DsNU"FU%I)gd$^TC?.pOAV_/jY9^%^B7o!JYZ-<"4,_kf*sDUu[#k52(sg^FYeCs"kTtLE`*^p#i9g)Hrh./GNT1&0OWuS?IVfO3WRVO*_#&%htg-D0]cB,5&cSn`?TXN*fdrOOg$$-ZGQ*+,YE_i[Q4R561B.1%7I2Ej0N\:/1qs$7QD&`F`H%Mglm:+)l<5-]n-WKk-HS+rR!9W%3g`@62d2'8fXnDE[#EXL]8TLraNaaJf1YG&MC?YbprDWNch!>,4Ld^g<C4/;4P^$G;A^ueSQTl@'o_G&""b/UA7I/(0jnd"i/+BX%Qm?a9LdW(bF^mV(Xe:Vh^"6M_+<;pSP0(^RE?-I(aa>^3*:Y5*B#*LuaY%jA/jtKU0oL%[;HcjC,YZbnYQ-$.WR@$2EG3I@"miM0%E8AV9+%*jP-hI!<0#'PPY(ZV<(dE<)R&k7>[Mk]Y-DM&*P%obG@5OJOjJoNf.+dUpc3-U/QKYlFJ_cQm^br3YK"RoWE=7d>+B31\%2La>"0df[0,8.?HoL2b(K$g&`";So)c>nk^`<fK?Mc!#F$Lg=Oa0V%pm!:NR\aR>Aef3"sZ4Su<<fsL0iC^?B]Hd&EHLNVS'DCKk%&jb!P>tM@26k1Z>9X:FMA:cO4!_GFq[1GoLI5"do-3aGk3+HQHE+O(E@j[Klri[($=NpFOL`'X8^0Q;C(]R\/Q?@F^JKrQ1>gK:?%OttVSpAki>WXCMr(,`'2?%).8U'g>*XsIg..iZoIm>sG5F;CMUQD<\jJde6VBA]"NV%&%&=$gQ.>]`5Lh"r&3q5=g=qa\O:0did[%4;lK-]eO2D:`QU11+51ecJ]@.5Ugplgsrh:5Vk@*%,a^ept&t-XJ#O5/qGi4X8GEkK2J'q'<Z['1?/ld20?Gd)_HgF[&bo7ll"2S%f_/u=lAd3aH!jFbbBfe*d_,=:l=nKZ1:WX^0<'OC)JR@[LrDY#YTbT?BMfjI7R7J''/QZiMEaE/G1^iOf&[u9c3fVg/$hG>=-N*t%B;4$*,+LNh'(,RJ/WGF[aX]n=oNPMf[1,V9PE/EqH]#l+r@R8i`u/[@!NXQ[%_.U\(^Gb_(JpG9qua'T5O!><1/C]DBBW&Z$Xe-c%+SDoOR,BeKTeX5>(';83Kg5?rq&d8RJ?tBt$f9JS^->ds:S^A'i7p9Taa1b?-a"8k4e)7=Pg4GMg/QpZQ*3rYGp#R3d*NE^nB9e1%1I0Mj#*&E#MDshdeH2+(j**DqXVQ)fcKoleZOIiE"YljN*elqk!dU];;3I(=/Z**]f.)&*N5Fj=8F*[6.tADiG-I!_Kk"A>gXJk5%OmgNnkU`Q=L6oF,-TXFN*,GTsr97@`WmEWL$@F4ZA:2R?eTF),^jj>q!RDJd2rT?X!HFQ7&tf@0bZTNjCh]B_+t9c"6_q\soCksL%&7&?jWVhG&Q=lVaDENdB4fM<8%tZF;28@0CZ+ePNUWj(#OlRN'JnXg?<],=R\10Ui:g%]ho_JK0f7"@HSZ``gM.Zl.&tVnP>^)P0%9KeXW!M6'O_.Y4u;uTaUd[YFqO2K@u^R>*&hYpdNh^HUsUtDEJ)X<W>53XsPfh/UB#Ccj0I0AmRiIGel"ekPNV@noGaHW<^PeSBc%#GCRC,kg3PM!utMbZ?9NBRtr5!$>)Q<Epmjf==]B3M#:>iVHRFXOM4r(V/\d`_kdADCJ2&Ua^NKl9:E3B3*,Ol/qB*7/_Bo/@is3%`BXD#6W(S$!_&Z+lkJQp[bG&DBWYD:8,<<a-oN=*<>b5C.DX,-2ZE\=!C'h5i5;-7k;%E&iSturkL!!#rRV:'GWb2qpslEM_ojiX%RH"omQgh;@$b'Gg.<sN5QeB:t[fAY*G$+Ka2UV:;J7$"uGhKC5b+;Ef!.LQW6MC;^COF<V?\)GVFtl3b[_hMH+W;qcmXn1%,KQOU%V*$F/_TN1/)(^65J%b>A#CIel3Hj$icm>D4#r%9+Vpb07IdhgV:[BC9(`'_8g0QfnXKs(QG'V6l_SJ^Mot,=2MRcY$nCmbGloJ(K%Kn8F0<N*(2&&^6A9R%a"AA1:oTS@9V_VMF"kA,tSC,>Var8V*CKhO%@4o12HK$Q)dOUC6f_eIh#g;E')T;[TTj#mgh`]G3Ui1%$M%:'%T=@>B7(J"iFjD/f@jOQi`nJD9)r.;M_qeu=.N-^B#bgGk@^gg0M,_7eZZQu_WjjZ\%K^NAXr@7LI[isgG:IeX<8nO:hgIl]1E%hI9j&EN1,%r'$0^1/X3LXTLS9oubAE]>q\>l25m63\OLuYunEccAsT\;Z>ZMNQM*)p>Z'\X`PNBSEo#rs+JGE<Q^q?$#u(pZg1T!%)9C%mU[LB#[diTd3`P%(Qgs(YTTmWqDL][blG+Ku:LBLp'fJ!`Q/u#ZfVJ]9D"ZI9!%n$,cNTMVYD#T`ij$%7PK\^'9qne.4<@f=%\?+&X0`H(_*NFnnmM\?nc*PYP2>$'hm%Bk[KV1PnpN3`u@)uXk"Q-^UmcGjuDGo8Uru`3YLN<0W+QWn'VNecDog;T1`s@c0+\tt%%f.2ZT?#2%Kl+<MWh*1d8VlA`+P&]!STS08KhKO5+.!at^qOcDME8o1pIGYA+-jXCRE`7/UH\uhH$Fc7`olhid*2p%;U)jKDmn(o<%b'Q-oV0p8ES3!dDKdctl4\#\0+)NM&<rAXXh4Tf9Iuc31HJ5m(Qt;ec36005EU/As'm6-U;mCl5K8MIW!gUj^E)a+W\Y;t4e-C-I%K,GKTL&3T"V:4%=lEYj.9k@pqT?=!*$WR,UnOXJOJs.ZAIP]K=C[jkol3dhs%Bd$:XlK8RDD1rPWo8t<W4Qqj6o?JR&aFprHD'!X%+$9-P%hu"0c\irso(M\eV`sMqDq%i=)PF\/q^0jC=u`KI5@(%=o?N43]BLh\RX4t0k4MQ=qX$HF;QBeEAZ%#K[GA+/h:UODLYM5;%5!@Qsq+KE_>e7Z9oM+Mmc7q7VS')lO8R:'a[iVaO/2_d\V`gSlHU`8Z[HE>>9mc-")R3B#.hd9smAb'-pMV8LqoR[<rig.Hm*@Me%k:Jd#gHV1WVnG.qO9]D5einB['hfX+GPe+sVuS4rcU5obD[K6p4*!?'pdX(08$ElCE\Q9i_@^p3IRdl$=ZXjCc3B<QrQgCsE-kl7%>W(c/U\6[]E&?G>,*(7#7F:Skn9H#BabAQuBljI_s4s2+Ib<qHc/k>KkD,(o48\EPf.RA(:E]])oRE*\:AV'gj,?kH;eP[go@KD5%/gtAH^j)AN>W1fYnNTL6pOVF[o.cIZ45[pBL9m(a]K-9VeY.'^[9Pd0X)c9MSZOP]/slJ"[c[.a4`;t8[PN!D<a!3'r77E^jlf"Z%<?C!+>rU:AT;rh?AR*RTeW]</1B)FhImu0Ecf\BI[2AP5DQ;TN\38mOSNGo(0&2T!rQLgI0X'og.-n:OguVYMlFqN^ceL*ri55G5%=73X]oI/_uk+f-J=lD*r?3bn>*r#4[kR$h=-VpQ:*qGiWS\9;heTo)3WAj^G``r;fo/Q:n4<NnJNFrfLp3W[Eb,8l0c<LGJk=K#W%hU!D@jGbHq.IY5O@c]2-cCV[-^aaY7Z_lLSp=AJRqq$apGES_2hGp^npN^e,cPOn()npR!QM+U5/47/BDdhmGKZ8GtdrkZ;pGJkK%^/;HFT_Ns`M<Lq>nEW:J\R-ATZ1l-(l/boUI!Walq9qG"]Q<p3k<D_RPKqqIGkCu]\se,_qL-*HG<_RaJ,7Kols5,"M]VY3",2U3%n`EF4GO.ths5t^@nuqESELSK:rH.*%CoMFo3"O;A"3"hc'WCblNkk75K+%=c\7/k"*BsbqZdq)QFJ\rPGUf'iAoE/@K@S(O*c+@(%\DYunj%XJ4\fV..h_0)mT6n6X`SB9@-o5*..%tD1q\X)"cCLY(p#.AW\XlO4p1s(Y*5'&TL(eu*1n7o[I>$pc'c2=E\Gca96&^PJ%)]rA>lcl$Mgk0*1?Ud+'qKg\2d-^;=,Mg&nU@\l0AR#sgc/rK&>@3c.B_mHWV*j,o&+_d(FIE&sR9_](XQt(pA_@HPT2!Xi'=OA0%G\3RC6Y.#mg2Zhqk4!?(6?C/c,/,]_+8pND)Y)T?pRZJ=\=_K!,%?&'dl(8Q]ZU*r([#d^jSIPJO$&so<tYGb\Vr("k;)<ET<=p1%a1+99cKAK\LN)&cm018hk\oB9*]lO0?,dN$f2\o:$TDRtqrVOm47Q'T^WC,4r:DQRM^NrO''RZa+4[9643`fGI:7RC?hRpcE`7H]%S6oPR'%M@^P'BQjh'PVAbYQYac`g!,Y;VP(GC,Ib.h9mh?b@'9Hf@/L3ZUB@V,AU$"`2b$3VCT,(TC9tU0r&53NJA>=X7?,SJ;L'%j]SYR?9@I;?@0su*W#;rp,\r2RJbCp]J8bQc9$kAhtca!jm++8q4,2jTD![L\"-srij8$R?7`7S>WP]a$L*I8pH<q/4ftME?Z&-p%V\c+^q_B#4O"\tk_Y[nm;/9E[8qFjUYim>giHdMSai6>:VWi5#RJq<@aAO,Kj"/f-*G(0-kO7ctpZ!Cnj66tnT(DJJ/pXptk,Jem%aF3-lNnctbq/*9^kk:7aBA$HLhd!:do7Lqk?#W!0qh9:nG$2>XLI-^ha'lE\ppt/T_s[/qQqNtGM@XW)[Q$==5*nBm5KhJXGaL&<%o&GL'\%Z%3WKckG*"=5Yaq`ecJ5Ui?okqpeI\1RJ-`d'D6:2Ss4Um>6X6Jm0]+SdWe!7#\pJZ?^mH#i_ag,mQ>I1fjC#7g`DRP;g%f>BM=Y'TE;bNd'i8%T+_?qF`Z8#r(;+["@/51uIN<GQodVmTt1p#j?8;!jbE.$q\_4cJ$_TA1<,l]6N+DmQ_.lg833EI0c1Ik0#9%2l3j,iIbb.YP*+3r`^@h)XO]gBN-VAerA#+a6J\2+0=oDV7HQ-T(KU1Y.K6Lk.CAB)ta(TpCk;[-c25Ee(]ZDAsdd,1s=kTDY'Xk%>I5gUS%k5%?(SMD.;uom]c(u7:4$iu6gh@NH?a.9mN.&4fsi($\7"#L_t6ZMi%G!kqJsi:c1RJ&*]uR!,[C%5@?<**`NJ'IT'Cdn%g!f]jVYBHWElO^Zmgn7;pK'9C6?PbMQdi6_q9fVGjtG2XYP-*IQD^odmec%Ps3XQUq(@!C>M_5`H$ej0ddP\4aDH"3TA?BUmgjWe%gAAN?M17oS0uleTH5V*hihm<ZTneE_B>r'45C60ns-GB:=b#OGbkUMaFk,e;/)@\[AZ#FYH-%n3STUcKf0-`a1qN(']?q?g]D'"W%mAb#EopSP9[5Y9i3rN1=qknqqUP8]SrT`Dff6!6q>eK.m8cJ(*^g6p4#5-$7ojBo'E8MYY<PIcnpZM9q3N%Veh<\t1#Z'3ma]K*D%OZ21NkjBVe3h"mUJG8jQC\0)@br>[pBCT9<(an.'rjZ7T`lH8p7;$XI]Ltqif*jmO5>BVUb^"7jrEr:M1QOKZR2%m/gT23g0BRh1%BJmQ=iZ@:#DYeasdWNU)dJWoGbl-&!c1RS$8k4@Q.il5eE?SZ0K\kJ#k@qTAoXP1Js#3Yab-]0h"Z5&=(a!\@ljW',?B+g0J6e%\%'cYD]]!]>F,,,>"1C3$[U[g-_[N``O_KagqPFPsX&s^_Z(hI$4;;TK+PfajQKY'4me_85ha[+rB#-_YRZF#S"UVHR1i8T:UXgX<b%T$6=p0_Am46h++mUX>I'M'3;5E99(eB7;dZ#Y);.AfZm,Ri#[p7Q'=FKii*:<4&+mgFQoXg"qt>HS_Z[=3K-;2>So<,o#&Ejj@OB%Xpd7qJSj&-ou6F*;8=$`KQ])$q_u<W:o&1`@]Y*5Z/691I`i^s8\@f5h6=9Q.f;*kL)+``J^3UdV<D.&@%26bPE%D;k1pMjWo#(?%aFMVu5aLHX!dMVhZ#MM.+-j(kk@dp"_ih_/A?qWS0dBE$\c;oMTqYl>]5ZM\':ne,qLML(OIjf0/UP1!H88-!AcO*'3#DQkXUe5E%Rg\*sERdZ\Vl#.brO#JN+3$:B7ME?.fda=1#baGBVi)0bi!2MNq^:47:C7.W:kGs.^^=[o_kIG=B.6rG\`IQM(1/Wh#/j5$Xn*FG%DZs4F/<*a81&,gm>`k^YCcL$K\?T$@:"Ge7V6L4u9u1pHH>(l#]"?s*7uJj4g`DqgOY:-JY0Sakh_Y(kL4g>UOPCH'XXaN5h_UI"%ct8Ke@\X%q\8ddc`(":"[h/LR&c*8Bp/Fs%Q_>;sh3$ir3:0$G@%Sb]M>0GF[0Es;W'?DJfRhl\M211?;?OoqH1O0>LZ!WG9-C@P%a]qpQ!8F%\'EY"-Is8d$I7=+'4G?5OKOhP:/Bu<DUoJ)`Wn6I?`Pu(dKiEj4CL\G!&QZ(n1F88V2-/4dmg&]u*gngKVgfX>*qj&f%mnq%lU*46\SLh0!+os+XC:#2Mbg<qQ]7_]KM!g[s1[/22]u?fA\!\D([A]c^l7BQBeWb<q$(<TW$TRrL*!!3h.*`"[Y'!Ea;l.D_%N0q&p5dtM34:@?^Jh0jVH=Pt&:U87]N.?c@<RN8$W"uD!gL"fMfgTtZqQ.JuE$5YPZ^$Z4=Mc,-Ki2uOW`lR;`"h=>"W5ar*-V0t%QW6Cl'*\s,3_#)<C>r<6A^$*?/nI;UH6GT1$Y`9'18M!IQPWT1%VN>[S59BSGX6#)UgKlr;SGIs],Yd#<<I#:M6:SYX]5QXII8Kf%XuZaLMk5J@JW[u.`6[?k6j"BfW`^88;P:gG]g*#)EsRNfRnhG\MC)=t;ZCI*c3X6kCc43`0nak&/_9Y-C5,J)q(<L.K98t0jNZG,%X>f!`-\&?I^!%0m;%o9+TeffsHMYksWf^O%:&2bnLqs6=_qG2l<)i;_CKbG.3*rjH?O]T)Vh5p;fpht(eo,A$&GD`#$Ve*hS>fbe%;G4M'Lc,36EgB%n[Yk5<"MHo+Cfom<EK@'Wh4!#AH1,F_aNKKW>'WQulQoo*pN#b$^8QN;m*:b1AHQj?[\a=b5k$+g8r2JI,aeNQ%&^*cWMpj<9a.YXr+:C;Z,+\la]mr"ZBuuQ8j`!%s4i!9$pL*l1Mk;W16P6Q0_"U;*)_J1^>-I'gi,!=q+`7XhCjPTDcmgFOf)Vp`%X])&]=M5HWO>cQ)mLfVk"RdB63DQ1!_XP;;Nok@0IldE@pKtA@@63bi$2Q<1.h;Pf,Nj8"DY)e(o*[]@j"=Q:>[`^FO09Pt(S/En%ISOgQZModZfT>YT*h61`b;F)gar;9^;nhjm.cmhJ7O`PWE_Q_i;@>Xc!]Nnl]G;\.p=rUG8`VMBeWQ.]>m<`aSF[6L'tLDqV<P%a%lV!%V_OljZ3XWN]>8R5s[7?^e:p!Pgo"6XdKpU2ff]XR4Mpm^T-i3/Nai&)g$[3r1\uZ[$pK9:.BR8PK=6H=a\9D,tIGI"\^q82s%]'k)#+J;R]n#Kru+:E!<ReAamgIa[<q*Fh9b18d\&#Jl,jG0t<[M/jf3Mh>6].P?a9DMr-IRr0+jl2[XjmRoo<:DsE":,uSMj.O!%>S<kkQSGUGPX[%Vic!eP'YVXq78pA+V189/qmp@.nS72A!%rUa9\S#u,;2A\&SI65'r:+!P#2I$H@#u8Y@OTIn>?R!.T*q7k;hYa%b#:\HPVGT_VAHu<"[YX'Z?)X:OGaGA"i$LaXWjBbI[MV/>-'[YlibSObRbA:@iNN'hNm%*!'@G$+g]?2;Ji/P4e=Y<i3GHW)d+BP%D##9fT/GnU37@HA71K>M1N*99e$'UL^rh2AJ*3tVJ]??70Vo#].t!$KNtTf6lQ`XC3M5>?0r\jf>rk/Y3Ba$:l+?_lXUR,HHNNST%euR\AdV:F`7!+".V-GmQ"#T.Zc33$Y";F+`K73`l97tur2UF4%mUiUd>FIh#=):Nr]f$](P&>[kYfpgi>?!BQ;0Z<CCCmF_]2cPj%h!9X`!MGSN<h%ZR_VU$f"560M2B&-80(a[C$Lbl89*].-'8r3IN##6Z9DH$p\sL44>1L`?cec$[Sl>)Na,n'f#'uX1V15&b)?Qqc%I0eDR2G'`fJArRhht9WI)ee=.PqH(_)d5LD/g*d8UapIi\C71;0$Qo<\j5(1FhXp^Pc)]KNY_g4b*\(;gIKsT%_%o-BRHLS)Gg0m%'7i=P]df]&hf86/""h6H9+k(J/jeVF:"Ljd%Y?k"P2E>1D`j2pN+`6gCXW<f$T)j%r9,>t2O=b%"StF9-hX>pd&Q9*)@F^m9q]`M%0!5B-k!EHkj[_8'74SB7)PLB#VG@H\HI]*^?fRS?g[o66J3qGo9l#[%%1i,^<p974-`mibQLqPteEs(>."Hob4pKbZ>m<N*]k7g<%THj:ZE:KV2oX;X::q]d\kkDJuIIGm.FFfHN'@4&rd'l[Ej!,L?!<l:RfXftS3!D@B$1s.&o'-:a5C]2X[=OoJPTZ2/T_0I1s-D*_%fo4g[3:?m@WF*%^>Vi^p#]uS!<<<'sN)'T[PkCic=2\#]I8.VOR]hS[BOG%C>@CT]FE7tCAsR1(Mmj't"M22:Wsk\[G(+Us#7J>]%Y>WtE"*$gIM[q*>1o(1&XM8#)L\Jf\!RT7uD$Vf3_++q+P,SWt:]s2iCN!LfY^t^b+)3ZeCUBO-Cjsoe5j9jmgYCQ0;rRWg!558Z%lkP2J+)%M'_)8*ik7jDe%.p04]h2,q.I\qP'C"bij\IhjK'qB8n[oqd:RbSEE\2A*8tNKSgKIalDgc@`(SCE9HMUEUW6)Nbdtfe*%EGYMtI6ISWJ(e]dP6Og<`LQRBMdpkpIU:WS>?D&2d]&M(\'<r#r0KNoqq^C:q`DRDH7iA]B>\HQ2"p&hG^;4u80$B5rXsYPlT]e>%HgCN(5J3++l01+H5/'7+h7#]ESkeT9NO4<Y"-,)PTtuB\gUUi?UAsjDc->pRepgV2"rp:H(\:GYVj,r.O-6E5K)2J<-9W\O]?;dd%;(Q"?9$c$KHd:1L##ES59?O.?fnf)LZA\pJPBah[f"2YaZ^[BAd-U%l<>[Of>kn0#i8Cf.?uXe8-%_A.%=XSYGTVmA4o*OT>H&/0%"+('^#c_ig1]e#EnE?V4"!V,+K&5GV?=>br46sFj"NA2PqmiD6rNq4KTRe@0m\KEWcVbhs^.HO2FSOj0NJ9NF*J8DbTV+570tKV9%034fCDe'9B!sQT5pq?-%#O(cK/l:IA0/utH0*b.:*A7r75WtBMkaMQ(:ZOde.A%SnV!4+o!cL3KLpAd>qeil1`aDTt/VtpS!#cmS%]U,f8D4hKu]*&gp(JY.9SWGI#1j74H)KW]V_j;-8jGcBRlI$#/PKoOZ:cNXF!=BeSi/_uUIU>P0o=[?7`,2oa%i"jbau4CZVZA?j%:8t%n5.q5;Q/!k0j_5+akc`H7<afG/8g6c"Z58&RkD1ZQUek;,i_;IZjnqEMT2(]E^ke'E>gaA.(eu)<9F$FUfge5NRbnPHmr3X[%gq/o[#r"7%oB58Z>Dr[Z<Ii!eU=_(Jdf^5,BRi`7e>Dmf!Iu2(&V(:ZL3l4D1c)'3alq.(;3qY]1AjH\l%QV(')cZI4;&>5Lh;*U%&Oi3(TpuK$q19!'3&\E0h8C)tjA?(G_/"Vd3'C=^#0Jru:)@3q8)RusMGe.;TnL'u2,Xo2nA#1ba/_<rUl9UDVI+Y-<ATqn%qs!E%:B`0]+ECdS+6Pbef$*?1++!=0Bn7l"YoC.pqLJG<-m'%8cj(Ru<Vqo7U3R-HkbIqq^28F(LfN)2)HF3c59;BB:gY./3E(<4QB*1l%B-Ak@UXn=no:NlpRNk:K1mp5BLL0^dQI>Du3)'0JBmbfZprEGOkhje[49l!g"@X&%'cWAP%&E\gaGlarD;H#d8A&D^c0*d_/Gi.,%As9nh]_a+_n*=4YgMCY?-'%)$C#sD4WKhgmG+#qRd3?it;J;3=NO26;bDV??18:dRFc3B:2?*`s^%bV6*_m7d$HhHMTVQ:1h!j?1%\!cF\@t-D#5QtA./hP'[p!PiR&f^TX-A:E0O=$%Age72VgTc/V;g%mVHeGUP\rrk3Ug<]E].U]RDTVChOTPB2^-jKM2$F<*U1=51%Wu=s43F0-TAO1,V)m\$JD-9/MAJpqD4bOD>EkJuR:C"'B<[(H+.=p[@iS8pfm=cE7$2,#I9i>"06>60p[[%aP;q'2K1T.dUP'4=1%n/-!p9qP9`I%4:V3s8bmghpE&(B_a.X:76<X56cXD5SPX`/*E-=f:hN=%D<O9"\F?V9B,_)+piWd6YpjV5rKlFOj(]fj&,ASY=@_%Dni)@\,C+qX"?l0eIM""$oXGYAXY6t:6N#a.W!Q]F6C^0@rdMg-HFd!&]l'50sOpu"YHrAE;dMFqjpP[er/q]*OE;S^9QJoUEmsX%e^fB'-"V@0UTKg==6bqCr`ZkDFIL>(ej(+tk%\pLjg+1>9@ue9#V\I1K=OA@S^.O.Rk4:_mWE4=%.B44C:k'SYs-+T77=8fEY$_V%:K5')3?lV6G7bR-[kW0K^+*o?:ff&eNC64dqSm#4^RVZ%i*O.1a]f=,MSJ:b\@sW2=!eLl'`bq?`_XS=d+W*/+RdK\h*0[N8naI]%;`U!A!1ne>p"^PT>;6-H/$F:IqK0dT58EUlh7Bk/Z1V6`2!pFU;QKHO2\]6<KV0rG2V1\j71VMq:HQKN`%h)]L_!&VC<*QQ!OEuM%fYo#Xl7T45Q!;I1WAnt4<2hk?9J4oYK/A@bYLEs!9s9g3DE4"*mjgD2b3Ln&a6K>W>4')j77c4r+kc+fdXS_mg6Uh*Ud_rYX>UK*%9WqIPZ<YC#a*iIXXHc.F'8!SS=<K]?b-#QA\Bd%$(fp?>q_;]Eo"J4^4A'cj-Xm1gK-E3cglY9],1:uiQ1`5WD.e/l7F&8_!'78>%d$Mo\^Z.SQ>#Yr?>lYJk%NT!Cc=99e1qLM?ICX_r*NCcNWj2ljP^]nqWrruR0g!LfX@JR%]t2bcm7!,djVc)7N"&&;N`,Roq??rc%M_8LK()UQLb?!"/G\'sSdh>mSA`70bEqRGC\?bE[H3]G6?^G`NLsO09jZt[kIeW3r'XQ>!ALRuqe;q'gWk):QCm1K[\s!gX8JPl,%[0P<f/QH<.h'HBDIFUT'^O"C)Vm7)-bBc=`c;\K$-)#XdomC@-'rWV$r1KX*Ti[X;/.SS']deLFh@$;>B58c12=:VuUTJ\uB&cKc%fr8s]\37mA`Cd+8RPXVIX*4B_geU:qet,MM9nEH7*m(-.a6GZIm0JQR78ke<Y[GlN,OhqCRYAS7'oQ[FJO^17^u"hM_:YJbeU>eZ%#?WfOlQ<s;JQal]RRXC)69Ri+HU[TU/Xg/6j\D8bdIma.%>NJpl:q].V[g,JP_C<hdc]M2kF^J_CTdB%J1Wu=N/,e=.kW>g:_V#c%Ch+9l%k;)`o]e='Opr;<k$BX/RGutjj^F3fHjmEPE`pjT7\ME:JNlUe>>$(qUHRc4]G\>H-FKKP$*%XIV+8+3f[^C?RB.Jdlj_j$%\,CYm:STSu=Naur6X[sOLQD6$^lUYrG@4IH=a@BC_MX:Tkm]pi?%)C.`F+Z/mEqq`Dqp8%Fut;*%r9kd$[;'Y5Wsl$^"$Etf!E,@%0<^*%KrU[;4aP"9_g!s)$Z3%PHGcCFDtmjO&YRBXDtkauoS2q5;ju4:AeH8!?1(;i1H?s3L")#_j8mU[AMQ``XPKPTTh0`GZ`MuU%ZE\BX?/O(JF3KN!>8^[p$Bg]Z=f&"Uf;-&&K@%#80qE$S(Em@_Uuof'\g:q=!)TldNiBWQG`YC,'#BZ-587gCjdHf8<=htE*AphM%V5QKuEO@Bs9Q0XElJ.A0q-di.[<;s%mOg*2PBH!ljH?#DKe4mj($EMX4CPak5i:$l8;%jQ5fOpE#(^3`CK3fA%5pU+XuEX_jNGLI%YCh)YV:9Bp_Q-qD."#9I)X#HbB@%7ZJfqgH%\7SD*O*XUae:N9TX21hP=&uQ6)Vj@gcL;:3.oN=3_g0UE<[G@.30Rec8^FdmbMlA%*'+P%pI<hfqrQ0BB@+aUljh131G1';,9NFCB:M8#3aZSULJB2s,q_]r=j.#[=I>/Bj^+K5%nJTJ/jLgrA#-3"PZJC\eK]'h_SGK8%#;14(Ek8[)PldqRadQ%ahCmSY8_Mkec)7H<3j[)2)bYRI.m&':F_3RRX]."I*+&`k.i]a/MQ4VJB`6J6QK^20gkU7oCWUI4`bD.o%-qThfm^_TA5&I08ULY:R1-eHCCN`:;gT4>Z.'U\"MJe<1Iah.Niqk-mc%0#''`B#IX@7H[_o@56B+(\,DO\g/2b`>Gn%KJ=VRlS'%.j=X\Fu*>0@Nj/-PMLBk<GCO-4pMj((P<P[7Xl6VC"Zo;!\:T:b*?$S?_sXDB/n^j,!%$V0tB`B>d?EW2')=48lCNq[P3%RR;VTj%IOug!_ND?nYruK\_-FEOi!a[#)*!Rka7%%TiK+H`q2?&]l:F4aWJ.H?C7<$(3\ZW@A;0O`H$i2Ir"gcm?=T3rs3`PNf/i1E(Rh,[%0N\E124h4/-=m>/1pt[aO&$Y04J;Z2$DQphQoutKh$$*qn*a)@EJht`<P#N2TJD^2ot,4f,\L^*,5%6*m):]CXUr]9VOEWPV17%K%1V'Coj0ecQDPP3VdOMr=WpJH>\Xb=MZ0'31$Bq#K_P>*aK0Dsb+*15m`nG9PY]keUHA6e&8A;F=.s>KA*_oF=YZG"tUZf+m8YV_@%cA60BV3_C3iX2#A=8--\S!i]6nT0%?s$#d'acVdS+lB>!RijLM5LjmJ,qfml.lCp#Ik"&TdVP;MTBQIU%#^9r=F-J>H[T<9(\6!Y%eEkNUo#KTg/dk7Q(,Wb"$LVU(A(LF^np@HAB;Cg(Hn)4@$h*;AL>l\I\T-A0L&joX&K.'R8%ID,,%I!K[p)8?4=SQjj@[69AOM8o%-HBP+7-8fBmuHciSX#!>k=jR2KIr-aWD0RW'TiEbj0f`80TX9TdMS#tBi\:H9s5(aaG;&KR"f3e't@BbRW_('E,<!?[(RY=MKr`s%T6Fs:#-oOiBgoLVHHu1YaZ18&Z76ABeQAgB:bNnq`iHGrcLPSFeudFKa.^@HPsRNX.oe,21_s(!qhEcT"a'fZhEsiOP$C.\d@QRd%VRprdk-?P3T[!5U+-f:QWtq#G>0<o#?3mq(l9WK.9.;-tED%U%iWga\W>=cE7Gh!'PM.itWb8H/POdZBg98hC5+Kl/@85Roq/A),%P@_ZQYeXI!+)^ffWr(kpBrt3coc,n4DZ>[F?1QrJZNZDQ%u7gfXc0c"kJP,lic[fH:'3)Y)X?D$mB[>FmeLfmpN;hJ*@i4lBVdI/%c?_[EV-./q0:"UHM*am#17B3"X.V%j&hs,tY;MF]:J"QSKf,!i)./R,DE)-;R&^@KOPeJY8E4N.<6n=o>3ON=pU35(.hdl$TbD>r%P7,rO0Q&dSP,V][MN[;t"(IQs4=euE5;/*2Wh=mS7o;Y(RKgb!F1Z!am4_%gU$/Lbqr"<md[UKBlu4h0?K_loXaB*4(CsVJ6WG`'%Cr*pGC5?V%.cER<GMmdj),"alj/AR*?$kD-CbC?S=)2$a84t3c[KM=6?F=.(HnfE[]?5',8'+;5lmA4#m#mLRfI`(&X^n4_p;esD%;EK'Y6ILir7dB#21/]3TP`bfeUl<gD,A!Z7>2KP</>SP4D$.I/.r&M3P"H0@[Xj1D=:]/"pKMLHCFYkE]\'JeiG_I^Q4.CgE8NGd%:,>iDkc&Nu*'6bB*#_o$PMs_9gERFCX\RbbS,0fri=&dUm$S3im20U$<c;h"]`4#]cm*-3Ak$siX4-_UUtI\bX/]Q=4!-SY',sI;%CK<>K[$86>[ksF^_%OZMIf0P.HoEXPh0EH.Tu!I,PKmTP2_BiMrh^Kt3sS?(iL+\TZYPh"&DI2W*W?M/7K9.bm>iGRqu$VgK3j5O%L8,F0TA_6Y/bkHZa,=;'J\lgVI_Z%GP>9e7"h+hMnWtF'9NX&&q6>:h%&JcN9dR3RcHbfpFR#K9Z<J_*QP]m&s#Kt)VZSd<J;7mS%l=S[3^DJ9/r>9+u%;qZH5]&,uXEIAm_ldp"Slr3F"0+C7%N[L@!Qo8Oa7nniDJ3#t]05H]"mioVb-7X68buHhX$2U5I`d-'jdd9$%fI\>*\Q<pZ>MuQa$P]0Y44MG"$lN[0Q"h@G>(u'*RaM@3A_r%k7@Wj>!Zq:QS&+7Xj^7j_$RL3ClflX#>g2a8;1,CEb"3uB8L:-!%;=;B*'.+a5Ac9cZ2C(oTh;6SaZkcUf9&[UT0=b)/YhnabU=Y"Jng<Ii.TZ.S)P3*efL[l6@W[WqKmY+<-ik-/QShjq:6O(4F*6i5%jKtXS>:8O#*]mhj:J/[ZI*Iqm\S.n@+d^<^^*=XBVcslS=.13TB:V62'34,b0?T"E#5"=dRoZ;[*P$bmR2j(O*Mn/Iof2egAo`oh%9maG:!SMQu(o$ApULqthjjNCar3_#4SX-aeE>I_gflUDn8[Hsfb,2L'?[6<CSYaQNK<sgLEp<:S=rV,'Bam76],Wc!:4F#N0sg,/%/W"Q5%/3WS/"=g<C43I*3iuXJXh!'$ZK\gLp-aA7KfNa'SSY"l-C7JK[I$95FBV6plC>f1Zg"hjX&:I/O\Ma=9;gK>km5sa>)rPn%BB,audqQ33Nq=AKS'LqbWFKJfm68G":H"cHDgBiK3\?tCIuYC_ZF`3=G0Zs@>ha>,Cc\\'3qJR+G0Qo5W^,A$9Ws=:ZK\ajloK;J%SQ6tMlpPi$2P'jDjC;fNBsH:PZI[+JZfuRSs/=Um>0Kh36?@B0S^n4:A75tkVGj3'<M<qT,?6`(AD`a0OE(>'1#BKuloSr2O`!YU%?uY2@UGA=V>;T?'3W&JF4&[^5dhl4-G[?rlnd4pZprq$aZ]_X!C%2s%a5N5"P.oe53X/*bR@a/aNKTURDgkZVFd+lORDL:u1A(WH%]:9`]V,lcM:m*@<7&h#JgY$*e7mn.Dolpb><12!4=potN*HPk-2:TI_grWSbkT=oUdsAs>`\D[aSX-\T0m?gtZ?=OM5&!WHA+'%s%T=iW-GP\oS>T^T_._Rk)DPr[Fp-.V6SgeKir+W?EmO[c6=&m9Mp=\U9Gc%>B^fj9^]6oEM-GQR%74gLTe_M#ACZJNomX.MqH;s[q%H`ja\D8&Y@Oa\&nFmp#kQpDNO4=dOK\EHcdN)[JZA2)9t^jI>Oe/I%3cdiD,SPKo-YgCeVop3jToaV;Y&Q_>Nb)WqLW\N?.=BG/^%.)9]^315gk/'5I_$h^#2C'sNFL=`>Q_Vm+H"a"P5l't/6qK+KnMp8WS8bADrh!L8,lgs.Z(Ws\Mf$SXE"BB=:46-62$Q^A-bLDnr%T/<7NEXs;0=un$$2CV4&#]Y!B3gF-#1M1k?>fq;;:I"K\Q2Pfh`%Epl#Fo23**YI-f%LFbbH[mb\kI3qCZj_@1EVSh)(_C7oW[N>%Y5/Q_LL]Z`J83bXi\af8S(FEb[$KiX<R<A0W=5]X1Ko##]uLPb7q6*6bf.aE1XKST_t2k)q3C(igtAd0i;k=]D4On53ob*R2,p,c%G<k<N%f&N4-fl@rGdVe5h/Q341E/tk4Xoj('CKBH7e;R#l]i?YE2PZGm5Ts1*W*NrF,W9Kf]2C;N`#6!Yl\'(O5$Q4ln`a/q__^?%A3'69\7]9Q@Pnk$k6QpPYSI]6X)Un/Gs+6-;PdeR5s:"a\#UFkG`C_Nq<afkFqPIu#F3Y\?(WE#"B<)"DC_JCO3^-2;p)`@iF#jd%_gDg33XPjf"c)K"*4*3n$WL_#Cc@8V.QJ8+f!l@"A_[&(<QB&AWVTb?^V=!5.n%L:7+h."V9X)*4Zs&#3NhYD)*3eO2#j<9)KqI&%*;?skmb8>7Hd"X4m3_h"oc.'+RLPgiWGIl@>]W[k$QbQZ+6NB4a$"U4WX0Z)>r4.o\AIk$/0=P!@1OQ4e=joGU'Qk)LOmWaCJ,+]%U?`'5Pc3'r)2"+E?s6p$$@MPOe7gEPK>/=6DI<&m8r'%YEO"Q7R#dLP,LIfKmZ^d;+"kqHdrKmeO1FjAk6pC?/&aMbhQHI!XHO1X%1H][F6Sn=04Samfj^N@Xs/JaeRrN)5H:`?'#!g@2<4'bN[*n'An@Se%5)7DQ)dC)AV5@th_k@>BAFNkoIZC'V29gV/H-f4$M[iN=%O/EB!,WqUm-Tb=/R>1H1lN3nUmoT6E5[t;U38Er%J3l=EK'aE9rfu`4/l6!PII5Ab9"d5o&(6u%R_]$"KYr[O,t^ukK*XU978bhk%rN4Z&/m3Df<bf"n0.>Xs30Pj@An$4Lj^ChRop4&u'GnD&n>a&ph;K$9J#V=@oQQ`3-Uhle\>Q@[TWQl2!N2;:X=bAgAcHTBr**C+%m="JkClQ'ZMs[pLj0`:+1UZ>.=W21A_\t)%l%gQJ^o,1)9@.eVjO%4_[T?Lul1l^XZdSbub*,:p!Lr1.]k/^27]WmQ<Y$)k("s=t%XXm3Tla/4;6m#'/N)jZC+7r<s:mnBI^eAUJp5:Y@N*`+YlI>$gA$ACeFk5=QhVp*C8($V7[EWdnr#E'c9H%4JF4`Ct0\O]1Y%9%G%#4p<FN13Q8[4WM1Jd:E<l3n4^CIbK]`aZZL3i&T$aU<`D>#p^FhW2nt^#C`d,X8)HS8Fobh,!>]NKHk7K>BJ;E%jtqe)(ej;BS4?%)_W(HL2UYd+_=?dn)#[dP=FR1ZK\VL<YNRfl;N"Qg`o.oc;u$g1eK#,A$?0:JBHNg5rht-*@tZMdd$C,$RL_f\2"dq@IL<<X/EF%%Bq08d/X:D>Z5Fb&@oYb:`b@KnaC9qI9[5NHX@dPHYd/s]FEYGm4^WJ2A`gNc4&ffIF1E719P,o$_2D[bF)3@4=Pl1sblPa=<r6J0%>2P*'V[?("J6$^kot59[=b'Oo!3O2'os4Y#k,`FsQM[JkRH4Fk:,1KJ$d`Vu+H6!\T*8mc#B2L!Z<%g7eJuB\`lS%KW2D@>hB<8'%m[526[])SuP-+'I(D#WFqnj7h=E+&/Hs0CWiucFQ'nuNd%cuI?QN-6DI&:E7UE%F37nFF'm_g9(nephkG.^3<o^XPnHRPMSVdu&g%7_U\#(c"Yl[W&CAnL3!sDlB5Pp!YXjii.CIfGb0hlZ]GDTo@=jZb"laY]Kb$=a(Y-ZJ"\O5@]:E1"a1coi!]reu=,qj]?>llY!kB%7=XFgDWgj6YE_F\h\"0,e)hZ2eaLjY/o.L&AXQd.Sa0q$Sr$SK6dPE=dg1*5\N@_]%F=^RIKIS6kPE<TC-.rtq[-?jF8_%4=#7U3%O)t9lEY@Du,h_InIbW__r)>oZo.,#HfC.Y!1e[$.=kSAkn8nOBG\s#:\&Tt3c#`i,Q*L;5p!^'t,iB_i*hThmchoo>>r>HZ('*GE%kPFu`:\@XibPfc[1Hs?-ZNnm/kP?&L.aU2tB]jI8N*+c'_0.iY\UJ)*[J$SKcrqJ:n%nKm^Kn.np.t-Vq3HB"l_fTkejt01D3LUX%BC#hiS]>qFhLedc3XW@jH$i+Aa,2f=f?[VY#Ck[BI]<TN.A:L;m_-s>;aB"sePBrcWdW1c4!6'@=BX3l]E?](e560E^KjkP(nL!%%j*?$-X.dP4If#bX[nH:i_0LE`W1d1K3Y&LN;1.ZO$r?QND+>WFF8_&'C"^^d@BtU?\UKjNdLJ=i:X6cC;uO-[lh<NncZg#$^MD;9%kPFGrK1F=A4[qSHd4D?]nK#&=8ii%%i'"2!:A#io@m&a4r*2J>XHJj^e+YuVcT&)(]*llDkP?(@brn3u>)nm>Uj&i2CnIb\cLit7%[\GsC,Fn(4b->I<4;j[SV`Cp8j'9?i<tF_AY+Lhd#\SFk?,M*9p![a0c)H/tr0Q5?f?%0`&"/sHB%*,Zg#lU)iu&f<G1l%`5@(ou%6EGHUXgN6K/BoI]I'0)]6EDr#F8p=[1f0?,`7AY;HQ;mn]`iBsh#!Ck't84.Z0Icp@d9^G6G'G4F-q33U29)-L([.Pi2Z++.\r>r%a0<9_'8>.-QVD32d4gJPnAuN2N]-#45?3UB@.)cL,"T8r`Q-aY"n"5a@ZaGM0*iA10)b;=m'XAPf.7u:4=Rj0S^*^K'Urjops1:d%S3MEFAGctgTnb8W/i^G,/8"*DY$.XEJb;03Ms"F2g?VCm^,]JRkiS9\8iJsfF7d@G[njIrZQ\/-0u%gWEU<nrnp&h>d-pXIQ%!(o%T'4KmE(5>JhRi!To+.H9g]fpY1A`++Q?.7==Jo3'9?/58#][8j>0Q@2Si>(P%s@K*F0T_'a29hUm?^l-3>97U2]MS*[CJD,buDR:%]']b#X]!'#^,tLfr_4l8kDFa>#3.T8%qlT*$)YB>.:MiiG1B)ApW21B:j[J2WGaUb!fm((OZVe=8/e*J)=]lecd.4m9kGPl!-6of%f8]OMQr<re09Um!$dtAU]$u$Wd:LA2+Y4:fI?[C98IfV50>^"s)PnJ;,Sl;&@:Asi5D/\M.Yf$[M53?"MhOg/_]a%J`-?&L.A)gO%i5Fl,BarD.I)<p:#&YKS-uZ>"LFK[`nDaouWS*qr@J:#b(gpSeT!nG!O4$]goV<'NSlYs4-'LT2Q(?39bA?kAn\\]>\CMtp<M]c:%T@:9tVsh##2#93>4UrjH0OVEhjTq%E=??;eKK$cB&WU1C2SZoo%)3+-"i3QKY"hjN0C5kEn1l+mk!L;:);;_=p(uIZ<tLi[m]sOI%fj+>M-d9rrFMtdWoUYDs]d`LpFXfO^MBAg=nfSU-*e<[\Q6m,7+k_MBog_K';PU'Y#QaH]3TYmXqW*a])8F*O3TP30-p9ip1q6Tp%PI1bVEh.rs_>3&CG6C`jMmK.GmY@j,3NH!Y\9I++8WQPh_8'ViGJR#N3E]/3$iT"q&2)Chj]Qh"_\FL"n1AugF`^!P[eK@8TYV`k%IP1H62pF&^T!iSWYeF5>:Ool?(^fYO->7SNF;4mLhacgfDEHsTNA'abGY2WX^"oZ+:53V>Xk'FNT1u@U>#lj]FtCu<%qe3[r=HNa%`o$Z"e-E4lQR5`!NIR.Bk#Z`T)IK$+r;6p1[VstD,JoQg56`CtB+%cW:bEhWQpl^q$A2?Od&W)I:maALiii%@#O5jPU9F/;raNX;%Y_":+i:A6.6;UuTnAqFdq`1Y'q!HE#]ib#qmqG<2ie<Y+o6&XaffY(,'Vm7Sjm/&O6Yg[RF)dPKeU;<JqEE.^H@oCp>+qB_5IF)5%c#6(TDV<rYdtr+JFbM2.hnt6YcHSO@&?Z"jqs5&=Jo__hUJ4<T/D6V,&O%sdlM9"XWA(UOZM1I[:U(k_4@758%ej'9MjgnS`(EJl%-6^D*Ucr,LQb+!gEr4Iu>>E4Dq/tYm`'4tVrH0jp?G:n]^";FRcrJt.gKZbr6tg,JX4UFT8;CA]0==ro4D@$nAZoQB=5K2Ef)[)T%6%f=T:3_jt+P*SJ(Wgn?qh`Gm=OQ054Tni0fc+h%n^A4IHUCG'327Y0nHa/e_.CQ?p5&nmAd2S=r!`(Wdb&)J/0fD79k1dASM"SF%6K3A=;uR'9?pgqWpq3=Y=s#r,HI9TO-:#nk897h:fk(;2f0VkB=B-&dGJLK;r@bZX$.I:>(%SsTP4]rK7@l,:T?h4JUs;O)&2t)8%5@=aM:'l?XIaks]K*+LEOhTTTO\K?.M\Os#q\FRtgK43SEL$i=dg*N;hok<I/g%#L*H#C_Q/h1ab23=]2"I+Q/<E0rhA<<pjP6Lr%'tf`jJ7#cSUuLGtgZp;1?LQr0F;4WO$IGmK]:T0pI0q6foj.Q]\6RJ0efGmUAi+rtSGP%-pKt5RF3`=*#,*F7+Q@P6gt]3GkS!Zf%0KqB#j]PqE68SW2I0j:C8o)HHAE<S"BsnS#olKQUQPL/;1"dWWf)#X+Ff8A00S,oFcPGqEo0E6K+@PjR^2DHbj1sF'6'hoUHGCZK%gTLTW@=<[8pZH3tY4"]G2][qOBf'/k'L9A4n-W,'3%]P4(5)O<Eu'N"Y!M$u$g&oQ]EW&8@pHGZbbKIEO,PBiJK$A#Dl<P[1FS^]%d&J#sU31]ffk>V0I]_#LSRGVZQ78H`B>8>2W83',DgHUZcG*UH7j(]lNH%h?2gafTEB_DY?8$*nZm-@g_bo$RDYqOVWpH^45q!il%>`Nu<_`.20-'oX[mSN7AJu<nZhgY(31t/T"92$u[91\Q6]P'c)%u,98k^,8k$4"5!Ro\SYl:[O:TP2H^#7j/c4u&cd9*gN,`L*@l%amVb=m9l;Z9$gT,U8ht@K1WC@_@d((ZBXD)V_f@,/bej_M)0L/ZDloJJ8.k_/f/u<Jl[e?%d'M1V;3R_&")jb42$B_0$BhaaVsKg%`3/if\'Z#j:1t7@n.lJK'5(hXn'2X(oG.#fr<m#ilR7gT4c;])HNEu!pBsXM?hqtT+FaCCiB-%s#<,Df[D^*#$:L=b(go_EYA'Y%%R<,l-4AGG'8=H]Y(,sfd_Zq>\CN+)$;F+@I4rNWmQjiWiKmOSoj#sl9s2CIY_2f5a:$W^(qP`=pnehr&DlE_@b#?%'*:V"I?m>B>%*;%]6-ub$<-Lr:t*"E!O&)QA<gsG7s#+a&4Cg9C^gO,l(]r7/Z="UHI'rqj^Y0pt@b)rfUT@^BN6H!"Dgb%tlG\]maHO=lP2(JsL%`J[+>q-+)-QiV-<hT14e68\P(D4UWM$^K>rFgejSg,%oYV9m5_s$\O\o'aI`f1Z/cF#.8?17E\i^h.qcVjXm#iFa<Us!?_2(UL8U%Eaas3oe2RcjsGB5I,i'S7G!7&J:cb%c$j>>J<\0:8o>g$p,r:ck#]Fk:6<:o/1XO#'l8eimg90k_NEjKKl40eebdj-\]ptgoXEo\%c+U<>?)I&.c*_*5":rbiA=K^*'8"7:'%W8T(B=qP$%G"u=P@"Ks6+$]D7(I>1Hm7H!Njj*rd/cp.s<tF;":B#+!OuiKL;(Yh3QXO%2V\UdIt"H.SUU>r/^iV+B3:T&OB+_O-[ee-D4'sF=jY(m]H6;gRsS`sS(R#4I'pp'Ae`7K?bA31pg$!k6gDFmT0WigV`]kB-[\aG%`mY5GC_MP'e*s,."`Bp7.%_UbVuZMPJb6?mq-a)DP[,S_37#HV)e8s3MrW%J2uEiph`k<[4uf]ebldi#]Oc,#/hMYc&33I*D([u'%JY9EAE$a398eBX?-PX,6H1ln"j2olNL;p<gAS*J)XtO;^RMd]P^=bqrLL,B&4rh\sNkMrV%Rn?\d/*cse"S$f?cJ,ZIfeFb-eLi6%bTVn1s+!Sid&ZO*5T/>&>I1jsm0X3QkFO^bm@X^Hh02!ShRH-hY@=aFpc-U]^2=t#kV?:7XP%W9bqt?>\Rs+Kb(Ni_ea-;#'(YMC%Kk@L/?GStA5Z.;IIE9=Ld8r@B?7ps\`iKGA3]q@hj%&,>EF7,AVdG<M"0XAEi"@b7Wck"+(&:^Em.K3MY8SW4o:$2%$^Ksi=Xm+4%*18E2N(=m=Dt+h0j]U<>U0.X;BVboL&b7-<c]()o[mDM2=^#tr>k@^fequNs"='RP<G19m:bH+65pLHc3rt%`V8A)Ah/Tg[4c-cO%mqL1OG%ES`:6))h,O9C)k1Z0Za6CPo]+,T;;-C!h?ZDF:Ps_mPL\hT/h)DPl4'U?eE?p!u:?>idajBD6IOARU*$t!nGnkQ5RSdo!%W4`N<'lV1Cm+48"+^/DMa)dHmJj?HKaa>^/Z_63#^<HitF=,bS].FaMrR'qI@/`D-et(bEk[_DF1P=9<X=1`*6!nn\ag;^p.^O)>%>3&;XbP:\De@uu4E4(G$.W^O-0ZP3:C-\).DR!sASPIP0rk:Z-"Nm)2GdGc%6LOu"Xa::"p?Guj_$BUK>NFLC"p>#9':]4>PCnKB%d'qf(Ob$YB3/ur"]?AhO>6or.++XOmc=G5'a7jql:l:NDs-bkk[_>c7g/H]jlQ<.Z(8T4;g.B!O<%^"V3S^&C,\+Gg'-lVmh2^lt%>WC/I=hXN./iZ>WBnV)h!-Na)SWsAGG;76aqiZV0]aXh[fj$4cGDgD7:3.s$Hn.*`<3QQOHr]qa"IE+HiFRl:S_p=&!_[j;d%BDZ%s$:'2[<HV8SDsPscEH2-m1e`m1f?L1(tlJ:%9rj'*i6[q7\+13o^F@4%pK"C"'83R[hKoO*qdA>Z$es$4$hGSNu^9GpqMa'b(`^=%K@LgRM=IjUIF%[jN;NY-qss`dD<:4fE8ErK$"Q3(,hoUl=@,=e+KU9_V$400Zm;>:\@qY2a7J#W)+jP,BBC0q>N'T3T@1Y!9;@XA%eS%F@R@<Fps*cVJ"M_[+0m;E#'gKl[5+V[il.PYmhREk%HfTo1mXA>f4,t]c\,7H9[VK3QBfF=c^UTE?[/0LBcdSpfT/Zd`JSjg&%Ik,"+qQ#6f*3r]'a?!O-84K\f=!s>!NPD'"X4IdJ0[)sE?];TaQb<^hjH&?!!-iX/pNZM/rI)/o$lc9$&,,Ok]bf]6o?Zo.`'Utn%FAa]ZFF:E<E?6--3GX%o*T'2m4GSr@h-S;#GS(tbIL9b6E?4MZ*OL`_m<I7MW5DkRa1H55&J$M"j%m(sS@ITlr(.X6j+D*M)ie^#%(DCQsS(XtTglRf#OqOS=[56?;N_]L'R"[08WTWa?=8:qXW;8$>h+PlfTIT\X,(@&mV!ofSc;Y[(74d<nGu-nNpUAh)]mu/Pf+iHp%c^d6X8.Fc@3Cc;6FL3R%oY!lorN3HG7tW"Wn,g>T$<Y'KmcXR7-9fIU\CiS5:rB6F!J=g(I0P2dQd=g;B+b(61JEnja[:PP+I_Z3%,#cYYrl=8[`US-q`SA)k]#4];Qgm#uY]pU`W.(k4h<c=DKr6VC+me^R`P'6+HV_g&rR+ug$PnnONkuuiSElNr;tjp^.uNZ-pFlL8%gs&Hi[#Z$**Zm@ZVC$5qr`g=3d)]oS0k2=(=lpLL?e&Orc!9"PoH9TP[!Se1VioSM]'T3Qe#s;,<[!%u2%[URnuJ<?Ka?HCLoM$G%^IfZ^W<tq@GZ"n-Q+r/XE`3^(b<!F-d$ps@@<:tt5R?NFB9`pZi%G47.Ll+rIr?J3Io<+-)#]6lGJ"IsDng\UDB.I.=q'c$ir]mP%a%*>:3"_ef)c+/G$A"-<N0%+3n[DpoBk.5s0&5-;E.Qr9$?1'9BFukQ<N?ulUk%A%.]q:"D2(\+hF\9qAgIX_3*S1^Ns@dlM4M-o%*ubD!.0/)=MYK;_U*;QXrN]5]Fs4-AZhs:9K9O2??0ck8gR#5ibi?/V6pY$\pVu6q6^`^E!O&:#8fd'amSRJ49OFq:EHCrZK,P7B%O,"3]Iu9o0)1R)u$V$e\r:j[4=V@Ll`oFs070,(9"pIE\%pj/*-2-o=EpUH?E*LZ!Mf`lA$kV-mqA=Rip".m4oB!,75]D[i*MtJS%2@g@eLOmDC*'QdE2.Q[P:f195fZ7YESdBPp/Xrr1c8O]irUa%[MQDkf)\b#Uop:_(=,Y_b3[<p+mJ\t&G;2c(%6T"XJiYb1l74XO%im4C+NJO_8j+/<JFMP<W=)6<Z.l)"Qf)6%c%+CGB%T6*:SrW@%oF!c!]n*>J8&aV9I;X#_(\=NLQ[=Od's4YTdGs2d8bBdQ)k[)j%pQsp(QX>3@7J>Y`@]CS9E!%1?iJG/j4g82)4tOpA)[XN_S1?tE^cqMSbafW$eYq+u$>2*mEqT[lp<5:-_!s#>Xf_n"."`$]I+Z41%I!+sSHk;%aQfhGsX7U6+nqoRK^H-Ynig/o?ZA%rj>^rBeh]fWEnVGY?,Hkt\Vs\+lnn`19f%&Sh.sH2(0(3KQjU:1Rbl`aOa8ok.%K:.%9"-D06&-pop]<,=D6>k'0L#r3n-)P2q4,i9'>Y]b\rA</1=700*f8j/nG.6ALRp6\Tq;Y+$h6hN@OX[l`[9:he>Oo9+S!*1O%@k<6&-F'cO`Lh4aS6n$.1Ak=Xo\I?P^3]as&UQ6\IgJK-i%=!&%K6!CPi,)-Y0X,95<!J\=g\nI\\E^he,!(WgAMjH8@o]^AbN-Q%2kAh4+\kV^T>%I0B%Th#mg+)&Fs"9OlqR93.Z?aF&(T.>7;%hROej,ueA#R4?hkGFCKmEDp"R0jFdN>:F4H`,9Bj?i/UYpJMtPS`%NRZXG?6&4=gT*NPV7D!@cFrMVhOTGreFp$B&LLDeU#msLXf:!-br*-EGTEek\E-,/[kN7U[itFV?gln&GG_"BfX=`1(-mO+QIPWW%okSf?n%nq"a3SZon))oHirQ':Bn4d;)8&*,0Y4H"jtPl[>Y,p7frH3qZ'bGCKRm+1?'&,4g_DahICqFe4MJ1CF)pEd9I7IVO!%<V%Z72l#`Ir?,U6:oF$rISInRk%6+qP[F`^dhk)*hl_JPbGRjDYqs1C-8ubqO6[&FuN58eA#BJfY7d%"r$g>qC8GWO%0gO'bq@?[NIP%r7H93hoP3AS*g?5QqkqAHi'(2Y8mDLrUcG3K<h&3e5bf&,kgQ-cq^o2;aZqS5)*U:%J0MNEE!/=\28^d-bBC]q>4&lElDPMU4LNh%XJ:L"Dl2lp(YF\V)KG5D`@LPPI[[Mbpdl;K[n.fk'D@KflSg*7!(cMZL9)sXK63^We^g(X2=G"eH?4BAA&6)#S.hgH?cO<ljRM;(%`;Ak8CZEZFF*iB(Q@gTIf_V_>%q&i26a^!eX?j+7MSmZm@s=ae,W<+9;S9:<,elO4s"q?mVRE*Z?SG-2k*CHTDUtI\O&PiHlC@r_%B^,J*GHZhS&l2N$f*/T4S)K!u>lQQF_U8b+oS(ql=`uf<,g5X%%j&0pVpX]Bc*,sj3ubc[@=J#&f[I_@WQ2Lf&PRs[jl4$krfu$)%#Lbk307'^KRJ/p?h7Rm4*-\lUj2[L1f7&4WouHIGfhWKg;a6t1^56%U1\bV[ebGF)DE<7.qP3#,e):6)&Bq`aHMWV^N\h/=I#s_X%.SXiU&PYH<4V=.4YQSf=-b54c$="IA8nIElE(+WY^AlQ6L%;`/27L%uL41[dn!c2%+H\9qAbEW<T8;h6<sGV_``NCG-JRM%m>:&`%nKs"*rHW];Xpe.GO0K%)TF8KENe*)ao:KpU\q.,r2T&CD[Cpc$Rr<ERj4/is!ui2g!CP'\`YqB&=O&rsilX!kbS#Z"\-kZ3CB5Zh%9WfuLAj'MkRaTGf*o8hWVTfIH.QdAYC5N3t)[H*!%mg0D;mBM)b8:OuH.H5GpZ*C2N.h<s>lS)1G`ntK0l#1WV<OZD"Qms*Q00t2%ccuINhSd:u388L,WW>`!fF\QTD#bj)ZQ;4gN6DDE4#\:m2t$q[5hPLAU3lMZ<gTC/^NQm,i9T^pT[I-'>.HZbo.s5-G$[W+?C4\t%3LYCsCK`mB>l>`f`#P?k3aIiX9&RLeNBn8q9k[NKGh@>rGG"q1>FG&kT4TgfpFM>=1C04"&8NFg!0+!Gl/(8>>+/s#)?ID@T"\S"%0D6_f\aRD=kF.!TGijbE0MgcCR(,^ld4XY9r.BXD"di3&5O_bV9C,YAj^JHT:L]Fgj)EF@+EKR#T6'l^`/sYR4CR<b$`!2#p0H3S%=$8nI:&XeReH]^Nc?^6mo,"16`cj1>gCN/OJuFR#9&@h.Np%,\4+04iA^5/;*kt.e'l5_i!-%sW_4b3@NUkp&NTf6B>;pL1=9QFM%]F5ab7CVZt#mg,(8.N,HQKmN-r[hC8C:_^.4"I!#4^W?fjC3:<^T$[h=4cE]qd8<OR9OG)nuYS]O5F3FEgEZG6B,?EWjX5;3b:f8%>poCt>A-+(Y*5mPH9O3-FR<]?_[ZC=s%H==W]L0:PTKq4k(fs#9HS&Nr1$=NktT7AcfU!nr6"1A)q?/>(erOts'7UmqENLd%@(e_%Y7UuYEAjYfeHJR`<PtLA5/A3"goda6\GCh<2m6NOHbH;j*G&nEC."Fq)S`TS4DejKX(Rc7WSI;r=&$]QR;0bQ:>CPJWA"6=PE3Ba%@XZb0*'JUsI:7Ecq3>am73p?S^UQS"I,<SfZLVc'jg1@;^33*(c>UE;\ce9qS)d"/Q+FipYf1%^`Ss_90dJ@^rcl2=FEDkBA^JMP%SQ@aWQK,ViMRn0-)Wh.cf.A88"S0]W\csY1Wf'32kW=^s@4V"ZmrfS^laCVL6W4t+BHId[2k9*Wf3a!GC`#fd%fV+SZnOL)d%9Ng%Z>6[MHZq]IoA_4)T[g_Y%gQ>)Q2\Mlp)_r.$6[/qbE8D%AHZEpb3G/"nQ<!ea4L!Tl">okQ\jQe:&SDa_uB;eA,%L@$p(nVU$lk;%k\R!)("Q<^mXA9dn*W<^?nm-)(`NB_XjCHaqsaU$j`ScmZ%15QIa.>\\VW.26Jjs&o4g^fT24hG5bWCAQ7L"X#+!;5\?6VOYOd3X%H7Re<MU;;'Ic]K7oEu(cg[jkU<>LX9^Q/a!*0+nm0LVX]]abG"_Q(e$",kaJ27%E"lXR<>4C?2&eE%LiqOLc=JqCN6X5WAUGlRT:%Mn!&(Zl%f4)U,dd'EWr^?;lLWos*I]U6=G/3"HV7IK<_ppPufTi'Ua,9b6LeHh2">""#V&%o+LHl(r0QlsK$%\.0^-[&US'RKR01%\;FLNCMN;.?0H^(JPSOW%mr%fE%jp\TnV^]*Bj)fp&Z0ubBllsrKb!Hd_<PPcfWuLm")DnIqE&\)]p)0"nQ/H>:9`MeM$+:Je4l<%;;Hm,Cp-R"S'^u0#hRs3];S,d'4M%9<tC>T5F7\&/sTb>T_1Ha=;Upo&Y#J-ZqY,-%RUp<\*dVNZR<5Xi9_ni:96XO+29T.l-<+J%!_/,P.^\Ci-Z_S-IQ=qPl9s4\E5r<?jMo2rS5A!Io@mV>m5;&4d2!Z`2g%UUDe4laFrG7p=e'ScWT*6MM):rPqeBmrN%sU5>'PEG%ms.BKRR1"5bl"B*S#ZhGdq7k#]3j?Nj>C%AU9;b%S#)Ad$OC@5rp&Wp5d/?(nJVUGSV@U%qhMoPfe:No-*"$OX/YFiqC@!8i*RS$%,\CJ!q/d^-IJ+4R\U4s@PM0aRo05qZJ7L'e#RGKt+;kM2K,`S\Y;[BA*mOu2F=3j>:SmNf2XD5`36U-g5"WZb$L$R8[G(VB=]D"O%K?%_[Bgp;PE/NlX]no[V<^n!.,,./#r*o%f.ko]DM$tp&c?iu'ES6U]RT<0o=:'/"fsL>:;W;n@V0t;hjD%hc,fR9f(.7a%CM?\*%T:2V@bBH3K]l-\S5?YYaBDKKkpbKia^DeK':+]u"iQmF\k.O%Bmu(:Hr#40lgOL68?G<q/fe-/c[<#sifXthHm.8i\;8IY@U<Zek%h%kJ,4.pq,=^8W*4@Au$@Xd'W[F#9jRf83s<=OOSopWj].%ms.(=pkhflD#e^N]F$r;J,B'7HfaN+m"<nD-&*E:iV>$hm*m:>rNm%g/=OPE1gP>jF#f&@EY3IT1$G%-De#`1Cr*JcBN`ZqYBI=:Np.44HB?mT#$0YS]_?R@-6Q_>_/=9c/ZIPT1<rD@JlS*omAr*%CTS2%kdF&uU"%IoNHob]#A4)fb-\WJ0#)jh7ZCK%No2hf@MKjED@6)J=a`Rde[Y\*+Ke&;/bemf;r*;Bm=5=!6[_AQW]naDfIni5Kp?ah%*]/o'010JH:gUA5g0i"[GYA,[gN+H;oMg>:^'l'86SX*1r]CUX#A.kRXUdpA/HGqG$sa>6V;,jpK8_HH(=]O2GN_\f0Bs$NiTAiD%/OX/9X`)/GB=M+;6q5_2^>SElk1"k@l]8-Z,rKf5;qUqWA*WYVJ?*n;+79"[9@&ptJ#1`;WU1L517VusrP[Md]3XiWk/*_QaYN:M%J"7*0<g[^6_05Keoo^)(%tuDH-7F6:fr7VU]Q&-$P%"(713i6YqS[iI52!Vs,FEiDZg$H2c0GCJl^j5[3qb=NgXDWOa($d?%__Y)%_kML(U&O"c@@[%OVlB6cRRVMFH?=Yq.&khrU<)NoMfpK9FqaKQ_=7@"dl=`2kI>-RWG[VZB:<&R/%<M!Z[VlG.;1=UmU41flcrX3%3T4%WO9R'UnR,"q\e<g\3]:U7f8$DW2*3bEP]NB8CcUU^QA-&sD-T6U^4'$3.pk6e2MQOQ`Ubc2njh$7!20sD\ts?.Zlmkf#V`WV%h*7/pV\KKr.Hj5<3[4o95HN`W*<JSQ6"mD)#[pq*(g8m[a0U!h>[Oi1j_Q(#F/+eNTbEs0Hi*qEOd/.oW_n'5Y@!4DCVs$.a7#mr%^>c8rm&9F:E?$)*HMX'Rk_,ks5_i3@DdM<N6#%DuG-;\/U\md,fhddIj*Qi)7e^5lc5&B^G87kp"COigeD/!m%>RmGZT&Jk3e=\O%(fF?m>/`]R3^FE1MCgQ`_/)55EH:B'BJr&Liq.BT6#GGE0WWFHFZt\Hhi"$IB&+Dm&BjI(>%:UP>BD&:.I*4gDk.p6MKF($Hu:Rd%k'hT"TlA=ZPa2WjWMjo@'/7ZAJ>mR`><9J7c$qj[b@P/+$8daJ/A%J3[<2Dsm(t?uA#_66c/Y@MB'GYQG;J4QhO!+hR@!<-lF@ec%?B\mmW[3%^4-B9[FGSngN7u!k[&2EGIgC43ll=Bc?JP^$mOn?G_'<d?IY1:1bUoq[/T&_LG%s-tfa7RUrO.5Tl=3P;W\XYcBM)@(%mQJ2o5LmPBeXO'.5LmPqeseXgT?8IDDR:tT=ZGBG'PK:dk6O'295;*jF_8GZ[ftqi[it?Cl)?fJ4ZR_.+4l3,d+bFh%p\?/10cBo%OVgtPgE:lK_i"bDUA&T(e!eZ2J4ISN'l`3h#3+92bKJ<1k6ot"9Z/;6&6EAteF#8$hcdOqpZg$!*;1+c%Et>?<>g,8f@qmrj1a]$%fXEh]FcI?9"cjAS)E<^Pl=>Zuh+2-AWR=jmo(-+d.R<2hBCkb2AL6$mR87hQcZ%.g)(s->HLL'B`h26?%^\^bJYKB^ZA\S)phfO.%6=#A7DQCZ;RFZ;#k#V0B(Ve5%\:WYII=MaP@2&7jMq)at^YHgRs0.C2g%3K=4NB75G5fCJ;>K$("H!q10"Sb5QXTc5qk67;$`LD-%[O3]JdQ(ZY$6&YMGAc8WSoA=p`cJjELcX*l3BVZpd.Hg9C&GLr3.8bfQr:TUZr>m)1&7V'k`HYE6V3C`^8,1p9Z9eVn>FS=?"fY4%_WfW)jkJ4TgqpcWSU%oRp?\edO`%9!3]S+VH4u9/[J6m.;N3jP$=dlXL.n-D6f\UW)tET/lT<@FJW70H5;$'[m`BKr!h3VZHqm`J%.`X]ieH(/o/t=&a>&_C4;5^^+X^)kiA\ZIFmI0?"Gl?a"j#S^oW6<``A:W#%#Oa=^id^^f>4ik'$d3SK9B##CV0XYm3"bFVZ/+I:%R8=!,s43?9\oSrO3U\#l@oh"_0MGgl[;O$Oopt?&:S%:2R_!iObqAAHdTM:5c5nS$Q+d&6rmoc9QhD3KPMc>-LGQWcXVD6OHNPsB%qA*n4hV8J9SE_rg@$$\#nqf:r=2-kE4[,;%*k$kIiH.^26c-ltF4o]2!6N)b&s0I^gG@jYr$cN&+1a-=+^X'F=ciq))*E+_0imA8%:gI=[;co0?NGCUW<]E$E=HTd/ItJ]qmN0Wj%?.AKlfN<!FE;/57SkI1O%IkJT6]9".XB^(W)UU/LGs,0G4"snd?m>LZFjlDQ\D'7%0>$-S2>4\^k'%W2c5d(k?"_m*Y@dg'gV@$YRCgc*E6;aUJ,_=_gr>M%)l^1bK6Hq..]>#2gOVN'j2rn2iqNAS&,"(Do;II?0sOPi%?I,@:8^*L^#.-JC>m`R]f.BWqo?>f<Wtl=liUT=<>F)1(045#Cct`hqm/2'8"21QjEH+(E_>XfSk+[$,"79f1LI(lQ@Ii-OY?NVQ%c43"3"#tIY;h;i/VYYF.(O`H4iUT=<>F$MEMT"\,h%KDAg4d]X\SgYNXErjr6EXP(o.['K/g5MKXrmR*rnGZ]mT5E.3*6]j0`7a;%^hV\I(XLda:3f_Tk0'KFpZ?S0Xk&lhRlL!cn<');5<F2&4e7Xeh/!h+qiQM:BNDDHS]*).RqT5<c/T,"#LWK]4-)W>c$roD\uKA7%X1>6G4'B'&]94P&!Yi<F[1DlJg^TBM7NZ)/n=2]<M*c`kC!\hWc(tE[8*bE?$Ka@A`7&;E6g!CVjKmja1!Hr9Y%BV!h^f1!O&fL7%LbK@_QG0LG9[1_m[u?@B3<6Z=Yg6MU?0KF`%uY*^>(KE'D.r"TkUm+,LJuQmYE.Jd"W2IXAchMqa)c.8S`">1kcNOfoMS`Vce_1P%;t"mBlDFmA#PtK=dK"Ui__4U2!n8f$r*h7X&tu5B-/dXuRBHY#0_kiunn<P5Mq7(X>,SgEl^Q#67)(bWo?*_P\,CLui/lnJK7A4F%I.fh/)ffs[":c][N`!V3r>7'EVZ"&5B7qf$B>1T6fHiCE:htDd?18^m>@1%,@1dSKjI3!m1bhq"1d7AQh:l]!N[qo;m73iL/_n3i%&&4Y*^]O5Qn6h0,)n.HL@X7"B(2C+Y0&bVr%(01lN>3`UYm<f'>Ej_g3#si%^[VM9oWEIYZ9@coEb@**)#>E9q)6WVAtQiP%7Ba[%4armPXJ%"]G52mlo!41cbO'[Ko7Kn%j=WAP,\I(.oi8NFD3c6U0u2qk@*(dBiX=gZr/PP2N3UJ8:DZ9GG\Edjq'mHZ=S;E%a@53J%<N*3u`D,lth-%3>3f@2/6A4Z_2g6a?;HnM/URF'KWp?V:2k)aVi@"BbK-BdA"<&E+/58pt6,QjB49"m[g;YWd2jjrqrDct;mlttr%>J7?AiB"ugRu$J>2r+kRmDA0X:]m;kiuo-Kl=+kU/A6CahOph^1keZVJXDo5cJBqA;8']Emp+W%Y%s0Mm+;RTO)_@h.)/6%r\msu%gR_iMeW=KY?PusI7ZYM4%`s"+OkujjYrP#@nDtGboDsH1E[o)NepSH0QphWoGg_q1GZOS9/XE.tGS:K6QFC.On2q*ej4PD0V0XZ%%`UOehQ?E%+_JP@SoS2484l&!`QX?P8;!rdDMnj\,5NDA_@)%1OfmSU=?fN39MOj2nmTpK/`*#W;rU^bp_i(4?Q#uLGkggE*B=Z%L%DEeR?+^NGPmU?!Z,)mbQlF3U1ml+6mF!h41=l"A0YSah9O*:7"&"r(K\*H,^.-%i^^?+fR+5I)c5O`)T?g8GCP3Ys>C$1B-G:ddK%L4E7F_Mn@LW8u(&3WElN*rXPfF*Vcq?"(-is5qmf@c#qE1--BA^FNYb='mLSCm?YcX"U'FSao5,]ms;aWt3h>Q`m.+2fk>SIOnef%S-kk^ND#c&Z^D.TCskqjd)3EZm3hPW8,.0i.!!GIaD^Frdg^rYIP/QNH$jD=[$A:H^3k16l3&nKCe[t0`!g@IRV3r;@7TH%5FV?G%QW\k.^FmEVkK83_0'@T%nEXjGs5<')%DnR'Ma+bs:,']#gmB$_DJC,`=*#n`Ru:??@/aYLr8_l2F6EcKpQpZ$3&J52L_A#L(B3p[%T>H#];dOBB>8qdai2>2L+7>WUHD>E>G;]$CetsmFg50)9/oD2Cm@R0[M0$rI#f"*@%q#A43\#T)UIoF4#%e`tZ"#7:hMdr5IQ-rf%_-[je>Q3DN/(U<J2cK135GkKB_P,FjT.)qBIf,pI<k;R_'9:s<TShQoKV(/&n^Ge!oX>hfp@04Zj!HecAT`=a`\mY:gnb7VmiG.^%2s5%!jmA1im]FaL<]Bh;KeYJf"#2T4h(TGd%/LOZ/k_\+;ND??'OdWs+mScZ2b,!V9E"Z^QQBN(;ZYhOW0A-4fg,1M/ke)e.Yirb%Uf+G&hJd@`_$*j6iYS-/lY`E.KjMU0dle6Bcj-pA?g>WE*\GP;fB\Q,'R8oJ%C8i,=EAupM"W,;nVp`_$7:CaDqpnEP-+W\-<J!i%J7r;UUQp1a#8%M1)@WW)?J4iH]68V6B\u1lo6%`D)Ool$DGI>SqNFC)?!*$`AUXC1T1ccrf/k,0[AT:q#8$%bi&<kArP';b9W<+B%L4C23J,8j0mbsqY:EMdfO3RC$p#_V/.eS1=k@!t%GPBeY^Q2G+[_M7tmN7KAN6O$S]R9HkQE9Fj+7/?Sc$H:X,o<Q'@;Uau^&A<2%b56SRch3p%?Jf"5+2,>'%!H7]3p,OS,nt8&0D\*%ZQDEJX*=%0j"k$YI`BkZ/)t]u"77,R<?"Z_1?5KHYL:*cMf\>f&+$JHg*%dl%$r:p(qUX*]Q\Y<Qh9V."AF#/gp/_c2`P:1gr9[MFChKg#Q`b6goVkqb#("s!/`13ErdFGi#!i%[`s^,TIKu8?ou6^egubI($M64"%mJ[r+IHA`Ke>LVO`om&fr.ZZZF50:p@(m\1s5)V*^M?L+k2j;64=4@Ir\>qbhci$EkDDV=^E)::jW]MlB_Z;i_\-d\VM"IFG@0gh%V:j9Gk8l2KqgRfF+3kBDB%?&E)m5@OhdN-8\PTq@(bDo+=4J=Y>*Vo7^K8hW`bN9ZU(SI)`^Ve0;6>:a_<F'\eXG*-buB_D^8]\s%[Q7N@hgb^!_ihaB;61:DO!5Cf1T]\Rca@!2X/d!%/)BJ4<ia8bk6;FlYL?p[4Po:K'uBbr*^>Y2%%tI:If.&!$hIrE+0I>'mSAO:%n)`A.D]T'>nlcVDi__qiEj?FX4:oj-9g,&6b3Mcl^;Ta.IY,^F5PJXl;)(i-de^pu&L"Bf;[;)qarT8kTsT'rr=lhdlU0Z3"M`Od%q7Md"Tdn[*3@K5gdf6\"H22c[*Gk"uG&[?/F''!2=!-Eg$$ql$D:nuh?<odX8ldb;#)0.!iI8$m)NS5e]/kt\V.orC\m,).'u#_n%)#(*c/6'/O?gXtF??nbT"<6u;M`5"]Kf\]b?6k$[pQDalR^c6Y/lc_1Wp+;7>Ge+7fZGFZqY85.eDe@_f7REA-s+aq^0'CWc&fa*%Y:kt+`D)$5*F'T8a/At6l*0H`nP0:$WJ+&I&blnORP:ugm?Rco_ru%AgMO'3VFG!0p$80n?tJn+7hI=-V(85#C`P+j_c:qo6S=p:%R(i7p.Q#=skfZIL8pAHX#Qp6kc3HE`fo.;&,M)b[KemD9maNWBlIlTt[e&4XXCaD':mngX(Nc&UfB3OTUl)/hC%V#ac^4?,adt#!%3.bbJEN($BiddoY^CP;Qfco#;.\:M0MLp#)#`@>5fPY-jYh^4^m<_B@]pU:3c%](p7Vs-HJb:5k,B>.J^f3H,<THpK.;m]i3-VZ(%3qrQ(F!p"Urq.f-eX:O\\W_Z0iIZ+uO%_HYDRkrs@[K=SJo`;,mlPuu69,##a^HH%E:2eEZ/Gb*-aucaHH+a^ma1gVqe%@P7IK4P%.A5!1GOh/#5e"n,4?<Z<H0%db9+'nV\W_fGJ3MT?an6@p(R7'";aAeUc9HMnR0*4OF!m.cckhp.q*Z[):RsRmO958&F!m0)`YXk$%=\(>t!P+CiS7_[u\W_lg/gtr7M,HU23d:-;"nY7G:+fW/$dG6$/+V9Z?VQ\CA+!mB^5U:oHk*]NRo;SE8+'o-76]Vaak'n>jVY$%%*ig3N<o:VC2K=cgMI#Yr?XRsNiJ'FT'oZ1,q0-G&_Xd0%d^VXb_2X;Sf'.-S`pKJ'r\Y?/f'_.DagnX.G/"*Rrj2@F(QJk6mG3X3%Y\FBQ@Ag+@`G,cu>bA".W0ftj/C.<iNG-H`?JM*TmZt&)==RW>;O(GB"OkcPomrP&9ss,kjk7e79$N_OB]mP)FLV;\><$h&^tJM=%YGEK0oKLD5*_ILSktF:`(*6)6B_pdRaqc$jIZ`j450=W^9'>t4Ruak/LU&jYAfkRl%qRcq:[b&piLqe)L7R0kftp,@qW2NWaqc$j%4<eu=+(YfjV0=Vba[b%$6Q&!2BCSj-n5/+J8UQcST]WjY]tLbe;ftJ$-77Zmcb%5)^E>i5p@dp0:\u*#s4KR%WA4E3K"q)ac,Z'o%`cRBZ0*shuf]l0PrTcg/27BdIMoM(NoHrG?0-)+;I+gd`FKiN*pn+epI.ZF7`^=if\mJ5'o%MaW^\9q\_s=kXj5\$Q>@3G8O/C9(%MY.s,190`&T0D]`md>E?4Z7e6s*4#Ks#L))QX0W7o&K6p#^(UnE-LpKe%^(8&,,],p5f%TLEG[QO+*N9S,XA+h#C4Nra2.e^D7"2%o:q$,m3/;&RsT]AE9M"K^Pc.mrV,4J^Q!$1NaRN,5IPJ"E*AsWNqiKbo?kD"V_@OHs6/D,iV)\dB`)atJ+n2:jk39%E\?YG*:L8$%7JQ3P!\(nZ5,@c2leuJ8%X,;DG<bO?/0)p8^7&slK:N\"J=Z.D#(5/)o4WLBbH@K0_!TO9c0a>^q;Q[8&N"kX#\*;BpEP[u#V+0l%q+/hI4a4F-IdZDaqo>3+Si[6*_Ir6^iJ;-mhG,r6S^"89r6*gKB-0>Yh=6]%9`s#q7:/6n]/$fK(03pJKZ,lr$VM^,%j/]=\7WU-%0E/s5G'dSSs#l_#;/"kSK7hLaen&*oG'@j(kO.2nK>Za*_fHbehs5<2I#'pCs*Xh[SsO3WbfqeJ56'g5hk,on^AWEQdta")UHbmR%WpoC7Sti2tqu4EG>@.-r^T-+^No'd$e'Y(qcOJd]RU#gT)n5P>k3&KQ2"tB"qW\?Pltl`S'==-SpPg,ogGeokGk]D/#oX`G^Ms@b%NkTo?["![Vh0o;E]&j._/3`jK%?9(#n`0'#0>!!XO$<O"8Z$7iX)HeG0:U!(kIf`\[cR]8Fcra#l.aN[A,=4DC#?iB00@_7jr5h%%Kj)2el/;7eRCu/Bc:^BEWb4LR3ApNif1tGo<6e8#lr;8*jm5sl:?DC,;E<4=;`Qq)o=n2b4H$@6F[P`sjNd2jUC*?HZbY*YG`JEI%hGkV=)Y3\+E&l/Brj9F]nFt^f:'+&cgM`$J=aYt$s8*4!s7\Hj]$a`%qR6G&C$59O);61Hs6ifIBERrds8?XBoSF55b/;Et`e)8f%H[8P:4R&k/XFU>R>u]L7U]&FjF!!RfCi+VbN=]iss*&=LCJEI83]Iiu<^-NOfhkeW]aq_F+#dUFT;M#+YJ2q1p.p<qfRST-S(jQq%:Se?H56&V(f\8JVqffmh]Xb6CT8l]V@Mi:c2jV<n4>j'4+c5TiLPOLj=28MQ5mmD<lHr2#_q)Z_cL0Z5k5kDH>:T`_DdsHOWq0#?%r7g*MnkZ^P*IU'FqnqBL$o*B1^2Zeq9&6,'%dNG6cNbhccF'ji[091e^<)X'eVHE>HFEe>BCSddh4OC8`\mOe]j1Bq)`RLa"7fDq%HI=\IqcJui2G^\1q(K&e/(;i8#\N<Mk32gc*&QkqngsIkc*hNEpM./6pOAVJUT38MVlf&<W9G80&R23.r$5LQe'*@2`HcDXm:,c5%Gq*\k/7=H!s8'*LJfX9513Sd-BVMb%]r5kE9WL!G':!3eZ=?`rNGY-Hb+slSFenM`Z)Q$MM3Uss9C[kH-IOAB<_)X!Su<pZ;JkG>%atpiC<_m%<pA@W:%KF-:&,^GYIeX!drB7$PYm4dBIuhTmnA+iui&&U),`8oZNK)2b.hA#'Ebg68,Z!dZ?;Dk)\kF7#i'_W_?pE+S%SuYhg;/Cc=f@Q$TWpkF4oYfB933^GPrWlH^=Ug)%M>Ta04Z+HZjU^nRi5X(@!N,&kr7.=[e,C&1(+5MIVD?_gFq1s(+)UrWS35GW%B5R>thg/YeioW`7M%77Kfn6bNk*P_j2dSK!ouAe0OsY\8gtM^SU?71`^4R0]goe=Iq.>Zu2tr@sD]\BH2AscNq;J3jDc;oN*R4J6%_nB5Z9;P`[3,L10]J)b`S`3MVf,AT@rjU?L"[!;`rZWo4f-Kb<'^nZi58GEe^nV03I]o+%IStHLJ<rb(4K1HrkTt3f,28/W*>O&:%X9[=8FS%(3a&H@oZ05/r+A/rRWXtS54#]W$iJ^luk94k-\f[WLVSDiQN6/?Q("-=Bcgbl"mZ#dc<*iC^G4hZ*R,Vi]WKguth6l'k%=$k#3>'Z:.^^fUF:=<)K<0]:A`Q'9d,UpH`pkpO@>OJ>BO%&HM5m`ZS.oN!1&imc6YG/bN+^4]1estkN<d6nV"tu2k2Win-m[JlP%U[.TaPab40H`ja'6lR>4D*sOK_.Kc)*,EW'7]1AIg7@eX(Z,WM/7F/H?Kfn",b_HRX:j*4JU'Q,Bmisj0u`EIG#0YT#KC:R$1,X4%.p3$PE"rA>EGdOO&gHNHTc>%I3ThRU>lhj18Kbifi'ii3,nc,F?1&$&&.>NP7RjujC6*i@^8JtO7%+B&5m>4@&U?Yb)&_>KOQ8er%?fhd(BK%)4Uu<?3cH)]k`XWd@.efbl4#l37Vd+:;A[jI"<DI:?.;m;TaUCS/&Rc"JJgtS%a[XE;-R<R]&WjM/No_kD:j]&5T^RWN%[eB2KUp4e`A4&]n<lq4IZOA'pHH7H",`9L<4^J79fQ-($FD5:h$Ue5eZ8%unD2=jrRXQrLW&Dk:bh4=KB8)a=8,t%4N1r]Z,1-As%Cs5CZjXjhfbI:MK(//$-:A\KGIM=C./6B$S\gI*RFtfr8GDZpK1QT@_`#,k[cOH>)aQ&<p#t#)%T0[8@[RA"-'8c#70B6ltnV<%Z%BThI`(.i10`h,Xu).>Oa#Jt?>m>+cdEn-#+5:_.gN^(]7.NO"*s-D]K\aRjUr7MjTVbGGjajRcPb;:;rCloKhgig'1n74ui3(6Ak%jeF/lm9XBM!S6>(`R609=2gG$^757ed#[j?;Meu"<bB3>+j.bZp4:"0NYSpZAldn6F)NkX^GPWC1L[N`SS=$_UM;f6X,B\d[=Eq*%JtGVHPU$PA82;5E?O,[0M&Xbk$njn;.#,5U8L5qs\lOUG]R"-COkpgW7d1Z@X9k0h9iRumZ^aMN2WV`F!0,L*ILNPg=mWoHE02M:%`at:Sd$InX(Q5"G5*cO.h%6ER(YU2aq%eNd%HJ^p?u\WOng;1=8i&H7,kB\*$-1,qI'4oSM!a"E,)b27!=Vll"=;\0YRo]!X>$sA%b7[!lgces]#[r@W`P]DEdPnQcD.`QNE83(("4i38cD9c;dOb+`;Z$%i[6GHa7q/BK&\p73^RsEIjT5i)Y6=?8AusC`&jBWZ!egq@%W/EMX.:4fs-%dW_<bc)laT]&ZhUIlBr\[!Y>Y/;_!6Y_(o11@-7KQRY>],4.6R5:&aTI@_O;E]U[L#g6pgTVPQ3m,=SN^@s=n=U8%&,UW1b'ndT=/Rgi8=Y\d\T+cIY?XRLI%=!GU-2$EgLLnFe5rNP-E,u,>XlcGs#s1ImFFb=N1NpSd8Je%'TYD-#BLeeiVi'#kDe?E%BB`j;jfQtY*g/OIUk;kL0BZ7#B`#ppT\]5OB,[@5kS[J+#'0dad[[W(a^-WTod1UTM9"`Y"=jukU0\8S.c4em;;PCq&CEul;9F]B%LW5th%Xs8i0DtDWm4MA(=OYhOh7"+sK-CANY<o#gU(&A7DY+eD?jO.a[0&u(S5>^_!455$N<N52,$I`8^-\"Z7n?P@-L]^3")G+j%f"J:U<uu%5jeT;9kAkqS:!VrnE932l!/7dd.?G)QfU>?:Q2"2+$X^mS93Pk?Mh$I7bNh+)GW1l]*/R7REquqR,fs1JpQn97H<o"V%P"(LU_i]p@bm#Pd!A11e.FlO<9h^e@OpITQ@n)0_JKB9gafUA$\$RGjS^'\o_?MP1;[JrEN+BPe0JMJIUpQ=fj+/JP<@(bYV4Et#%@@/_OcLG&$OI#F<6K7<&ErQf@Rq]g/+sbpVPR^9Y*&[j)TZ9U?UmT\(S9m?6QI'OfJAD)^Fb)rTC'$-HJP(do16[`CXG\1!83fY7%_i0a(mVs92S:(.d;J2Qp'8%GNiM@r#'b#_lEe'sBRj8XYO1$O[.&&MS,^e.?EYV-P+5"j7!mWdB5q=-25A%!:Q%q4N'bg]r.'BU)%JTD!KFW8dJV!a;5b7UXUSJs@q+N'*a,q1R3,Yc[g7d_KYl>^jENFC)oD[3>4q_>2t0R?NL4H;Coi+W<XmcnIsq.->h"'inN[&TI_%8d[[(aVmfl54Z^nXD^UG.,a&!0::JRAT[9;Le-d>$,`Kjf#^Km;O'I65`*L6qPh>no(bp93Hm`EQD8.S<)Qse90!bcP%?krki4Af%Pl-oo9M6*r=A$[RRkf5$,hkIGAp?<EJL(q`Ie$TNCDdp;>7mtC6He"k9W_+g\Jh>p&;?6f`YG&7.lp'7FD$W&Zq<u<PUfFnW>'s$%A@8?i=f-!i)%.]p@1nAYi7][SijRW*Le.UJ:?gW\*NA&IP7cJ;,4mi,rqo.S>tg@7SRS?^8MR.V51ZYH&uW>L,<R,,V-,40."c=U%0bV5$:`d^l53%cX)Y]Q`NYH-^OQBKm96OU/N/8R'f'T<qg.ObubWUMJ0PO[e\@!MYe9!L".)E4sFntSl[re&!,TuVNGeDuWF'Zga%%72=47IusB,n2++.lSJjej$;r?0E@;ZRrcX1hSf5B/>oH9/)D67,H"S8X`an"Mr[(cZCCgF,+hf83%+M*J.l8)$HJOD*7V]LD9-e%/.to]S$UL7eXg>730Zrsb*>UXdW8imf:QlkF%N0Ye-[[g0Q&9F20+ORiN?C09SG++KSnP"hk]lE$+7?Br8E'eEub=/PHFS,'JN`'%+&,G6n7O]F9JT%lO693(#['-j_'fau:)FdpRc]iiARR2I7buIE-Ms#qUoaK].^g3YU`H()Cn&mN3+5W::/_TZF1Z(eg`[M$X*ifd%d@oAf)HIlJrj:]geK.0s&_TP4%$%8),"s@P&9iqmJfp>U42aZ5M/J@WUs-nM))Fmb4@kO<7M&pb%s`.7KT5W#[t`t\QrdgAL,32<%nRQ>'oo#i</_7c"ie3@*p9f8H1"E-W-/brQ(Nba#Z#fiG[p:7&6^[Ts<Qk;s2IW!c3h@h*5f.YK2FFu-KdtTh=:n(,-*d0^!@O-<%/'!=_&m6-HZ)f7!4JL,fd1-q&)%2D.IUH!mq_J_r?c%6]R#Rj"7H8'Zm2&='/Oq($XGW%=^a'r#')",fNBk?gSBIK*]9>Ce.jkr2%dI!V]Ep/\E7ZOgW8BPotNU=e_*7hPQ@5^tEKJ4n[Nqht<lW.&r<tYg0";u5B@XZ(dO7fG>,+p/.U?Lf1UQutLEI=(SG&[Ln"cpXm%2$>Mh_@(8VDG.ojY$B\"eXtoMKQ6=&cGpm[E936'46M6Kn)eY.<aiU#VW]i%GfG_*ges_T@Ilq%c%MW&iII,2laT>>(@%^OPN=Q;%qX#GkGKt;%#,aJRA)-LCF%G:kE.Ni"`!%?B'"MuFK5@i6#"X?"4BLD-b.hdESu]Vg+*!-fN]H"kZR53ki)]B,lHd9rT&nt*)UAlI%7ceH),$;U$FrlAM@7S^caS%:u-^D4&g!5LY^[jjZAJ/$]C:am-]K(<E/f&VJiAJ)j$Uid_m>$eq+qe6ng_u.36Vt#VS1rq+G%6`=%-QnthD<K\*7Fb3ug6m@MQdg$_0Y%s9jJ(@eb=@!E#hJ@T:n%c#nSUpoLZ`O1cFH"e/@FhuE+US47]09T_O7B(6n4&s5_,c?NY!PF%MGt822O(BAP1'i3k<d?k<:B;8e.b*M$nN],_N][[r*MZ(:IhAiFu@!!'rCn"!dH3#XEo%R8k%1=.<rup,WMWpg^AacS3l]XO:@i&%JqdMmkL`hJiSFWH:d-j;][<":WRcaKV)(:0>R=%7MTM%O_3Qi/D?f+Q;lg[Zc39%Cb=S/5.Fo*fPhI=W6odfM7/p6`_)FdUnei;E%>aI\FOu7.gAP!DLO65i'_GFc&$R/T`'](]EF#d)22`Y4QH)ktgTi7(m6tCla8?i,Ia1Tkhi,;&+L-n\]>K?@#V[B1Qg>&,VMmO?(%`C"DM$t^j/'`>ot;3^4J[W)ck0h,[&;3FF7Qt;-%)C%///CPrnH*!6)@uU"mEa9-q3//R:,)0O174?>o'rUR$3):2(nhF3J$%*E,%=mV_Jn1K]CP3#8mTb$`c`JISk[5+^2>=bo_?neC]^W5huM8DnTEE!9lCbE`NqG;3E>`_B2KYk<^`9$cH@Q@<@:FjCdF=H6=66qD)%QJm5P,R,o1,"W,nMIIQd!g*sm=njr%@'DA'F;Cn!TMI6o,]=DBg$YQu^KQshUm$+1!]L/eD\XX/dc&t8)7Sh1jkfB'h9u*?UI[j%%$)b:]YeRrbI=,un\,H!h?^o)C%o3s6;Z-Ma$FO!Nj(J&KRqmG;fF.t0ScG2rNG&Ll66)o68ZbaOn3Ft8-3b"g-7W?s_m#t61r,d,%dg-O;MlVmmQ>IChc[+q6%e0Pd+s=+(#"Y4CYgZ1.,k*DLAq6>+Ytu)VRtb[cK?lMQ<0Cq1c4imn*U$NI'e@al+o!rf8gr7#)uIuM%1\S9\L2!$u\-,4Hb.Sj":FgM>#XiC?(aQqRG=[lFQ,8"PM#\Ir&V`Yln7,-%>r9R30i9>He(F"hJ.4sL.L.NT'r"YMd[HFg\Ih@8%0P!RF3h.-9itd'nJRJe<mD*]5IFs#8,0;*UWj=ZXSMCG"i[h>QQh:cL`oto!Bpp?@[Xm;tDEh@@8'hu.hXjhY_Fc5^!/q2)%'e7?%XTP`Eh0KOX\7L&F_jF6hb.5P?W^or1bOmk(cerDCP_6\#OdJ7mUp,WjOQ5(YJLCgm<^FnD=r-t#W(.]d`f]>%P(D16i"IDVpn[2W%@RP_sUu@7OJV:Li'/AaMSEY)o`\%%%\[U;O;hn/.pnUkI1+63G<m;W"-\6]BK"VP$%mUTf3,+Pl?`-^h\1<MG!:(WO-1gD*<>BNn%frWht\ehVuP#X3YiK;.NlT.NWQ<lhk,h?Yck<uQbj$1p?ka&H+>D`l7XkQX61fZH#2KF`ZYX)3(?pm#RSHF`pFke6nRi"Pi"VTCd%m@HS-L8k7N[0:uEF(=4VE9ItfR>Vt$-%T)OkqF<T,;@o5is,L@@$fcFY<!Nc@&OMCAIVhk\QZ(&PbEF1&S4pm1'qh#&d`,CQm?Zh%o$iPO'hT[E$mcN_L2nL=#i?d36qMqb\Od3=-V#$f!6lhtec?(=)2X/)PXt!Db"[f.l;4?FR?j>I;3n2fKV+^Vnp]4AbUMqr:ViV2%G&i`5Ep[tZG.Lp?7BW2%U85+L;>_EEYaddne_>.9]CUZeks1;CG12$5:TY7oa=(ZTTT1Eq,%rA+&Ts%PDO>d1[n:Vg`O=/gQfpmt%SNt%r`JM)<PB"KGU!8#9=f+8lW3)Pl!?_>#4a"U]j.8;A)a/>JfkL"GE=rQg3>(qDEGh/!NOMOLe6s'5##ANp2f^.)#_t,O&X*^f%L<6qo?ZgVGiF,qd>n\9.0?uUufMcFRiT^Ol_Pt`F=*8^$-P>-;!YKR9)/]kW:,W-I\?df"WZNlADfjP:,eR-ILe3AC_dqPsY<)P\%#>o?/Fc@m*5O5M*4\N,rNY=-s*GgJ!r,okEir2!VI//^,]kTs;T`-uI,5CI,,3lAlgb:s^!.*F-a/-\si>k5_FY3Hi6_Y'I>5IQR%JEWM/G/E2!/is)IW09mT)X;&NJ;1]&"JDGV!mjb]":Pl#J=MEVaTS91Xu6;o.*8at1oq\R&X8b#IFS?m#;g:'G,(1so@e=n]?Y3d%6[A'@kI#*>>\Cnc*%3:nF3,T7f2LBD-3bXt]=BJT/q3&(/^Bdj=HWMZS4$1O"=!+Yj4s.IFf\Spf1s<D(j_';'>8Q39OCe7@8eOp%_b#M^0d86@fNj\\gr)1t";s/m<G//roV'iB]@$EK^Zi->k*U,&c@i`c=I`j//:R=dLRW9!C4j[))e=mq`'[#4maj12q#*8).d;DQ%$!5iRLLXgLnXa's(mdReRQQnGi?T$W;Bd_6`XS8SF'j'7f\p7SY?_5OIP5"hES.TJFs\Ur!".!_03nP*2X""!L5+g<,r.q6ppUAM%G/_b:4*HW'Q+/BQm"ug=.,g&S$*#("6<P4b=7sGd\.i.UNPl8R&R*/0\9&(!)/o\-,nW([<G0/5&?<.eY"<.#B:X4UAVp?[LP_/3%U=5,9nOn&^WK/;?PT7fu-;5]DP+;n<:10fKY)u9:k\tO\.N9=t#u3QW+unrm,'M(gEPjH_EQf(KfeM^sQh=HN:o@TW^?UfY6__"a%]*9B=B;_:SGe)9u!#g%,NWTa&B?,Qm\7`j5L6]Z-L2k*c7,%Yq,'M:m!tDkTa+8t,m0'*@p[qWY0Q*?VWWS\"BNdLb7NtRi[-O6*%S^["^EnZr,C"M^YM_$LD`Q=Jj::j%%ZV7IKbSdB/;-lK@SI'0_:*KiDi'bd``jk!Q2V'A"Bnu6.]s<:HPY1&9XJdVV-5F)M,_G=#%Lq(nD\4J/%Q^i6DIFT474+4'8dr%!+rf9,-p`,KL@^<O:M=S;_9I)Xc3/N<DS;7EhUtfp%)f(`"[)78D*Y22Vr^l4MKU0Nci?T$W%;BkP9A))%$?#s@qGhCt`CStG?*e$%C4)*@=\<qtj@knd'l)L9^WaAh"Qs5H18FA')`8b<qi3Y9U<)kY*-AO"cBr;<g:P%)T-_#?@%R/FqXVeft(QFPm!6E:q8Q]<PtALZp/U5U&gW\\(+&CoKMf;,_N_d5FWZUAr\6h&ea,4;j;Khl&G)VQ<Zg\=/L]QT[Va2:SeOt7Bl%dD6)08$I?IP1P_V87"AQ`4U8P)t%S'TI5!OQumR5]H`fqY.:_s,jLJiXk0]VLsFaj`s8g+[GsNir+$d\R(&%WNSq5)5f:cR5f:+j%(a<d]3"bbGEM-as2@_Qqf8]qB.u/<Oj/0Aj3hY_fVR>#n,gpd@]?Y3DH0p&/Y?cMs?FrIuggB5CX15p/96uud0&^R?KdNYPkb32K%+8j77&nO1&UNKQFIGscM=1Gj*7"7YJpEi0DQE<7T9mFKc!uic@.);4HL1Wh.b8Hr!I,$uM<PHjGU.IOJN$R=&f?8aT,%XZ9jGW6%%,PCYekWhO62C:8]]h"=-O'<;o\Va[=Cj;Jta0^CS>rILneqc^^$7mWH6F/Jg/<bCCq?RS<E'MER;]5*[bH[Y7KMN_"WN"Vaq'q+-%k9>sGITLg^#>mY7oU\H=`T]lVPEeCt#VUi;Oc[uo3QHg#D%nU6'F0FJR:pJRJOC?:&s4i=eB4Y>_1t!&ZnQ4[bm6';*`E)9P3"UX%\T*?ThCYFEV%(YcFtBK-J$5b+f6GIm;l9[[4H?C?,U/OX(1pDA1KP2(*R1F=>dPZs"Pe$=OlkJb^,C?k#Z]q\9\;=7>aoFT#PejT%9I83MfKIuGU(k9r!4B5adsF4pa(2\6,$]CD^S<$qOK@.;M<fX-c'l=#UjUGhVDbK@n!L!`[sMi/$E$:X+Wmal,4WkbDeR;t(9%.!%a`efqcIUG?6r;=&#\#05r2d2Ahik;+beHa)9aLo0=iID:JkkasU`WU7VGN^^5jiB/56:?%m-rtn<C299@=T%<YU#Iqp`HlJK8U3l%=s',GJ;`mX^e?JoX4s-uRH]T$Lg]Pff&^"])S&GbfCotlGt+FkW_OYC%f4PsIBn!.6oO%.:F\MM$qeiU#7@gu6k5po4"j>6's/"L%1hda*m(jE5VTDll@,r7,"mM!iP9F?J)O,A.U$4q3ck2boPR-t2ABTo(a%[hAf/!+?D$ajF"jeIgA>]rhH/<B2,o7WPT/;WhjuY9]%^ngANP6NQukHcPaT[&=%Kl4nfR*5g\4I!+&&4o,PlB`&*+,UeI1KMG:/Fln/*m.SN^D+UYlQ7>H%P'TABRP8=,Zo0/8%R_*h=6UL%lM*p(?2AHQoW=AAUVVSY2>)M6iFSY8,0`7c!_La!Uc4$ocWHj3(=,-fd_HoeQHh\EMO)O)&4clsr!dF&B7U@cP^R1fm8TPJ.8iZG%h#F7@-Hn"/Vh'0jV/o#7F>),Yih)OPA-@*K;2TG)q!s&="tp5$K/^@5Z)U-Gqh;9d9(?-rq!Z"k",$=C5o[VtHZ?oej-t:%E0ATp%P7Z^?@CksJimYupA[[,eDD#/aPk\.n$tjGpS>NmC+oaB/MG5Q`oc+=bI;B)@*\%FmL7L?#K8]H63h(5HJ,0@hg/eCF9DPW^"5hJY%9-#BgDD7]@MD@5>fr)(;a9>(,q)f!VK)_+I<.l0g@jF;Io;N#_ih(OZ:e+,PEZG:)&C<I0Aci+)qpjLVIe3CEf?H*6VB]E(Se>al%dnbmi9PZ5WFC(TuC%D`\mYij;R3tCkiU##9+^/Y]Enq/mApF4>PU!)NkOdu.*hCd?LN7_)]^pHVaA85F?4T^28Q648["gNNam6c7%9"tCV_jh3q"m3C8g^@GLR/'_6V_PM/0EqZC^cd1bRa,&D!Yf5')*0jUVL=?DW:P<@3@9rIf)t'@QMq#(-'s72=osnQ*#G:_n(VgC%(L@W>^B:Z0/@nO7W`LJ^*A=*#cfK]W%LbBPBV/Y:!=Z[]Y=C=]WRo&W-'K8E[?\BG_UGI)S4FFbe0dm7:T<ZscZ&=F0R9GF,M&%0%K0T#K$I<4;##/D7;21W-Uk=U!aUXe^LOVMB@Fa[@r(=XDQplqW%I1OoF+\g&N,J96^a^p^4c8F=lOeSW?4U?EF'Y/$p3Q4OYtp!C%R+J)_\IJ[%#\]c?YQ4bW+O+<ElVS'pl@0@W3-AO%):#o:_@3?7(,MB0>"n1n5/XB"6($W\Fl?smpNd*$S:4X4Lt5ap>W9R4);[Qj%hoI8'Gs+3l8*BR?TtDFYoL7-Pl[`@Q=C:Yl1iAX#.d7lU<VQe:L72%)X\/A`"X94@3gB2!VTTGQN<#,0Gc1//*t:DX$4A55d8I#t%Z_=]beA9loGdiZpi`P0Y>I5Bs;G"h/$#]ek)G#D1cNMmp,<?KOVs^q,"Z"fpqnMA+OX?Kq:Ll^PNVW.fa_Cr&PqfYfo6uX>^"fOl%,TQFZ,$],f\A5W%RB;f#@@q-#UjTnhn0\s,MU_#<\<0<A&dh#p3h.-9itd'n!Fc:im;Kiu!93b4'9^AKmUnp4',1d?KZ?3RdZX?g%)N4tJ8Y#u<8g%#S,4te0'e8P8To*"CcCpDqMHTHb@"bM=Ugf162*`?0JhVe.9>oMX><6h)#=n0"g,/&,s/aNQFsmr"1\-cF7M8Qf%VFaOV^dMoc'F`i8]D1G$d`O5.:N@3LUqYj$W_l;4.Fh*;,#d"-l::6>!<X1\G)o:H&P7""f]/_u;QB\;E7;Wtb?I+=BQMJu/SXi(%D:$3ZUIeFW-k`Hi&fFne3<D$6D?LT\q2pL*E/6f<BFVraFbu39&4;:"i>-7:ka`2f3c&M[T4fL[FIoncZdsEQIOrh!\Kp/2_*)Qd%(GENuPguO^8NBpimECL;<p6(mJYYj'+M8l,Gm"oHSKPs8^J0r.<]DDJ/M!@B09LMAKf?C#!XhtVU?"C?EMq3kG+O]5\,T1[R@dLY%.T*(D7gZNm<fr[,R+]Vj67^#A'2!=iLg5quE`&uSk6&nC8%FjE-a0>saedcS6>;J[5oVnqkhr2CCT.=e^),*n0tPJ<UJ+ce$'EL.%\f?W(>ojm_*;$UsVUslfLAZ^;GE$XGY>CrUk#tP14`q0*cf6aR)CbthJt9$>K8S5tT-hhBTCr&210n$BZSGV+T(n&q5K\")U$3kt%b_k#5ZBup9'u!YT'g!"F,"X'Z;NgO(hG4bdTU1TmkogbdRn\_BiR+,e_^+,j8I$SZSN73^Em?ihBi*t[YsLBZ"hBZSZ%?7lP-BOe%.0'CN?U09l-s!.g=@')?A^Wp`.gV7_<`8rOa`gk7@7=rZbt,)&Ho.CTVXr45:d1=h\bm.tPl'bd-l$)ZMYcV.8Q7poCj5lff_!Xt%NF&Ve.bWd!P,Q)sDd\1,AE4-"F/-_UrU'Q?Qc=Q/X^hP6Rr0Gq:`\cJ*TSNZ#nkB3;`=o!W35.:A/R19`mj180hipRq[.G$/GDA-%I?!b.UOb8b29#6WSCU'p\T%[naj8ujcW_*P18Y`bfTO:V/_2jDj77;(i/H9!R64XH616dYZ9lHj`*t73V7c@-fRc$g(\5p37;5*n%)GUDm[Xqjaj&Sk5%do0AelQ[ak(YfdnXD@!XXL36R059OFc'Zr(tpG/<=1"!pkV>@HrdEiX-o<9lVT1W*Fe6r-h:cuF@*:gVJECP%VhZ[7kCdM!/^On.?pc`6&@E_[VMHsL6V,qYN[X4_MBEK#P]EE\iXPIa;<."i_0ufSTa&pP^BoLb0(*.9\aTe]knl#`T%DH!iq%JP%NC4Es>fJ`Cm^XL5>0;ooVj1%f7hWGsoiccW%iFGc+dEM.-^C<ZI2r\H-13d1-"AeE>+%G!-*.\2IhOs-U;N-l0-U(,(hN361?S(t%)q'ienI<_tduL@TG;*nAp_J[b4(V23U=/N58Wo9eP6c)aTpLj_]7lba_MFO<@3cVA+1p]YlmnZ#A#":4N!U6g!U#3)j!N_`U!@]+%FQp=KShIS;ORE@[22roL;R"deL_?_A,37/pJk>#nXNI*$_Jd^ScfZ7]1&]6r3h^[30/Te$@"o8uAo4nhqh;-f:MIS*ULH-Y8[)3R%8so*QBjgOFRE`6m9n1[<)P,jGnBA[Dm\EEh2>ic?<%"Yf%d,[Rn.lJJRE@:l(M>e69#WiH%RsB95>%u+Co\rO#YSp]/<45*755LI%4%FE/7iE5cdQCIr$qhAhfYE!A_HP!MiuB,W1S*YhG"5T5%WFq5ab^m_;EYPXT\rO$2OA2DcJ;88r[0@%;u=\Mh3*I42$eOM[bL*#%m_=g6)JE1_GB]\Jmi2=Yqe^Cmp[8%+m_@`T"Ln=7L]8fPf44FIh9u;mVp3P[2NQ3-0\a4jlhTKqClj&MII#0XIcLF09e8\EoR#lI%Aib[dc7*Pm0hff_P%,XNi6!BM+PMp5E_T7@6?TDdG]afdkb+Qo@FUj@^8QI.VlesqCWJ0AL?t-^FOS"\o[hS4+AI>T,Y`b:\9V\q%,N@6Zq"2&qm-IM$I,b&+n8d6nH%IM@/#Qto;^H[G0\%)&.Rt)R3WR9K_XgI=8Cr,t@7hu4-"kUa^Zc2gF2-O.8Iu!YIJB!P`J2BX%EVrK8E5f%$H/G:;?;RGV`7sra+>BrgP2Hnnn<dl=P2N$&iHZ-LqVZ&r16'>%o`^2+m7s7.rJs\S='^Jig'C0Rh#j72V(>jV2$-W7%nl1]QJK'0Y2+2acAAB'*Ebt*#meh6P2PPW$1t1:Ti43@m'N;F^jt-FiSB3L+T!Esh$:M>k0u6(JSNWaPmq2%ofU#.a6#ure.]c5L%rZl)L?m*nVBSqPZ!&$Z+.#Ek&A/pa$<bl"A@7)1-==63YNN^o,A_3Xe3hYehY'g_c#,(j"DQ:e<hX?drOTZg#fL(o,8n>Ir#"?R@%qP?Z>'N)UNq-d!d3uh]t;;)Pq_B`.tEQD%+W,P>DIM]G@+q>1tLI6qUM@s@a2bHEH&P./I,bhkh<6d?Y,2j;#eK%TU&?:.\ZmJf>%T=l?LRu3$e2c3\-EuS?DJh[U#V/\GOS\*?+Geit-I[\3p=Eu5*&kp<]i.2O:j%"gOUf5T6E-f?ARu&Dd<SKZfBTVC>:1=V+^psKb%aEt*e+a3ZB,i,Fh!j1J1TgXKkJXbSZNi`]8eD++G'Qm7%3b2Cr&tSXe)KGBZ!LNAQJVJH<MVqCfLsIUPKY3Ei,Vlk@+pg782^5a?%_3<<LD^4SR(NMWp_i[9^ZcpL[3C4qM#pGK$KQ&118-^:YKX?f!2A/Bg>;tB?S*nkP%s@2-gXBNAC%UPUWnX]KjcQI3-a/4OcP0Q9%i5<H[LYgh(]hZ.X_?iE,qFdH&\akE"a,4V`[ncSG<S/"uFI3E?C;:FpIDOM^E_q2K)6Q,rm:4[DkmWnnB;Fs[VY8k+h0J%j2m,3P%"@&EUq8&<V9@CYIQ:OcLg<1[MI//G@h0=(dlW.S!n@+et%QDT85PUPq?%&]0eFA/=Zt3j6Ir1EL44*7XX1`/J!OTQ[cPd\ke>Hp2%,0rA8g(*a"l7f6O@ihQ%CZ[o=_1e1G^9\`HE3G\/]?Nb4S#.cI*,lOa%0@+RK#oNH'U@N'q009D%WU3Lb*phUJ(@PQgOkBo</I2%%M26K#6>h$46)]jG2LDrXb\.=cX9;h<6OVa*M1g/p"<utKj4l?W=:Nik?`Y^bmTF&*U`QcVIF:DV#<AnL@L\-7c5n][oF:m6l4L(J%#k`o%5_OL#";%7Q#RE^VO?d=^DGW!RJ/cuG<l5C7s/P#^o:U*YTH&cNn"?D-MY<XFO]^"V^,jSAkP=tZ4C@=VHG8BfLAR*"Etu>m%HbC\KC-8YE.D3oaEHW(LhPsNO^jKsi*6J?5-8K/W2T\8*M:0ISfIWs]L&Fl5=s10S#%A%cThT/Z"-]Uc@[6#OdP&(J05YWWh0XHe%]SWGUSJ-;7cMMEU)u0k0=[.'t&R*5K$5eH$8\>_ZlP6sbO+8JZV(%"?mX.e4#p(D0@L=<d-8?^kfRQAN@"qV,2Jr1*NO>GoUQR$`%oGD5[)YaS0T_GiKWR)n[ii_()](?gO(GOmH77VK(>c5QKdc(6BhDUm9+CU&\)D`4YW=0H1-k-8Ab&+"a^194hC(sf8$$-n:/WutF%,Cs-^&cen+PiJPik;PlIUs')Y*%!Y-brm,A[6@=c90"d^Gtj[=2N?-e_?ii?N(4hVLq&*U2_B?U_hejNg>PH&7cT/[?^J"U:R=!V%Q@KHM[[)M+<Z1o![*($42-(GN=(R%cWBaoDr9GQG#r=dT1DWpoRpi6-/tZ04PbZ\q1[AZ?s5^7U7aKdER:m5^LRgkk-CR&;-CR+L%\>lm^F;C=j6;t/9'_<T>KmD[Ta9<JqcCPVUj^QFAorJ3>bW'sW\$2QMD^/A"61Gsg'6ak[E](r'IYK*p2bJ_r4-nt"p(/I"9n2Mi%KbRs;&uhDB3Eh]d7eId=!#.VAS(R5,d?0IL0jZLAO2t2V;4cP]JU^.pNB%W/")mOC7=MW?;1e6p".`WCg1ZS=aCp)A4n=011R"_"%-VD:t#,MBEgib5+hITh5J_e&4R0LgO$-$Qf,Cp/i<Y:'#i,a)W1K4`u#UBHW0Hr>[4!L6VWJ^;P$6(Zr9phm5g.4Ob7^CfB=l^Gi%`21W/B[Jm^2K[Tug/'I9)phEC7Y>\V(GDCkLl>HE_F<GQV'#HrBii\-DlbG1S#a]3bu+J2cL;e[9UtBPf^AXYW=kJs`9/pkq3KUc%=TQ)_g"HceE_:LUJBeMK=TNso.tALcL@]bs!p$RRj14gg2V\Ud+mo[?,.\Z<6%:IXKT1A>6-Vp4GPR#f"Kb!:!_il'q?hqpL-WV"%"e:Bdd2=TRjX9F-oGWf^>Se;3KZTK7d\;*"D*b(PZo/f_-ScRT&5EJ*%m=tH3,g(Q=3h=N\/G\0nWWbofF'Bm,6OW#&PUr(0PrP+%&7\-O&HICpZ2H`HL@+gd6u^TUaCQV#(G4[B72L(Hd/cXN]>7$g5e@&UC-(jpq#H67^_IV];^pmOCM]:qecR0lojDrHeg+us&;[iu%5S-[@U<]pg:"`J"'h1sOcE>OI'frtDO(;</*A-r2Yq)b4S<-N@m%VVGA]56BA`5_[FV'B(!G$D>!D)3<)`7NVi;d_`CQh"drf3j#%!<ks5R6]c8KDKViM%lO$k2kgFT8-1J(s3Q'i?Yd1gHA;BD(#Wjr5=@9X#%YR1\+!i&g*Lb"Q@:ed8Dtu`/L,HT'CJ1SN>3Q`6`Hd%NL1RXr"a:(&Z&p+7ld0iokDaiHr3J*qMP\pR(NE>Z(FosQr:r@gu'H&UKdDn,BCmH;lLb(]fOBo7)rKjL6G.f6&BD!mKR@W/*IfP%'2i`#9dJRF7cNm9f;6C.@5@!#2"t"*'HL)Y[Pa"3$?qoS,fSD2ZU@CNRuba]GTrVHnlhK8M3_\lm:K,(gmW2M+\a28!=@k.F<J\G%UI:8a:E`FuM),'"KFT8"@1HA2opu^t9L+LL2R5oM>gdaISlS7DUX%T?:"n1LL67\.ZSlpVL<eNB"'HRbI!TSG8ukeSTY8?jq.FM=%i<<@\GG@Q=;6#'D\[Y0@T%h1+;6%:gM-dFM$t1N"*+HUH#D>C^^Xt%+g11gdURN70]9O2hj9r'[#7b_!4#=nko[oRoNagV.Yg#N?%F<Oa4&B4UT;@N!Q'^e%'$.PPu-7P(=EJ(g&)%l(c^8b;Qc7^7Q\?S(o"lEqG`s*]hU*MpHFgWiQ#SU$9lOp]>89h0\+sJ%Y)_0k`%IFUc\mPNnriU^%c5$puq9da'Xk&Y&hR+!4HF_*`UJLIW:K-ZlP)aEFmD6R1h@F-//frUf*,*N*Kj^S?NYX\J0i_3RY76i+D5-oBc%-l%Ol9/S;VE$LGMJ1(s@km6'@)7Sh1%M1]eC`f+\!>*#8d/;n5[sm+F-36S`dVGjZ&0f:T.@>g/R"[4';j#!$&ni_+#K!Ro>U.Do%O\,-MRYY+MW@!o(Q,aX?n49(oPf.4JVFhdN_JIbeKQ&/tn5`+K6olf1H6&8jMn\J(%NS$H&*DcF[/KT1YDMZJ1F]F!TY.*JA>Z1k%Bp\uPMc61Ybd;JIP_XMnqe^$ce_^1nZuil[.<<cr#Hs?@1Q_hfn>ruf65kJ"gc1E'o`4d!X@/Qnd#rd'9npfs#^1m>B;_T!8VeY>%WdYYlJSm4e$#*Cp5TKp6NpY^(5SoOLRZ:]dD3Tj>0MsZC2*pPk!%&'e73sXk6j87,a=ou;,_R;q80i#8,S<HKdX[jN>XTJL5Reb:%[#.CA87\M>7$<K82_Fm+6^eL!g8>,l#rQ"'JBh<P3GX,Ce,\bB8[6%0LCX:$kO,1IqO)%mC0[$&49-*DU<CiQc#c@@C+tsd8NQY#%/4QCY`DE1k7)H;FJVa0D3&Acea4nNQFtTu*,>+UV'A;oBKUUm/]0]t]P6d-\Lo>8P2b_074k85`4+4'@__13oG&k<41<I&Dc8Zm`%+qQY<ne<Mn>]$\r^`P/=U]_;2%iGt#fPter_bL2"m]\L`7tuNs;AL:&_:+-8jj"$NDE*IULn'8nLNC@DgtYsO+Ei:fhI5"9Lu430%:)s#X@:oq$!n#R;adJrA:eLf:ZS[tQ;?@/GD$`VS@:u+N%_2VbeSA(4@4,FsGM&>AYldsU2*`@+M6[5l=F_u[)bqTa8g'kV0ngsC%)H`@^8]K#'eJYVQN,%gcCJrm#62#.["-cBO>]eUi7+>XXCqthUW`3tn*M5gN@:t2^3lO'CQFZX,f9lC.()j+TLRgiM*-Mr,FkC\7%R);Z!479?56K*qh/m@8=CXGQk!d+dug0rS55SoQARuC[&,=3NI%Qa]!W5DBG)"+UA@"ssl+9^dq+;)&2S;95m"Jh_$3rs'*_bNH8%k4mslVVF$&<JNCOd^45NNJ*bG@FmO+3euOPjfgg60(4_A6<t*5%GRQ*PfI.XO:fP3-r,2X8,=jcIG!J:J\l7SDf@/GA.Wu0)D/%C%2u2CVFtZ;-`o(,\GR+8,d^V7Sj,V-4RY3VN5F5Q*^;EbYBU1,_(TPtf+(RAkb9Lt"8X=]iK.2p*/]u=W@<[#cVan,B,=(pLgCPQh%KOAhij8/O'B=RRdoCFs)o@URVU`"'eN3j1ha8TA5n=&pADi,Db]L.<cFkW[^;4)Mo(_(D6d@jnR+u/nt2r3ifB(*iRYAK`AGZ6#L%&t<O=M]/B)ImQZAb&;Bl=]"\F'3P,HluDV61k>q)BU,P66Q2=3h:hE+S]3&&H&S?Tb[Q_<C$"07hBe<%ND+>68Gd,=JkJ[Ck%>Z*%#Z7W!L8lWD6OJ<!J/&".=99q;6\+IB6Qj@_g$T.u&+9X86'[T1VM(2mml#J^*SbaUdfs^\d;Yk<@'M8#,636gq_;02CC9H8cghg>%'%oZ&VlkY"Cpm9*D2`;Z=H6es[QpQ;<@NLXjdn^?l9Xe!Sfj=rmqCZc1q%;m[[Xp%NLmdqMoLJVaV)(Hc)cuGL1dZ`XKr^dp;5*]%3/GQik)#Ls6\W`YOc)"42WSfQ:4g5.NM4;a7%2Uq-;QD!UFaFgmk3C1A[/\+O%BaB7.C"S*($cg+PH2!p:R@E=J/ZJ,T!tQ8Eu1d%RQ+$)pgR.66>6%Z^^P$O>X6k>.tsC/KLSfOQestRntSU)Lab:-4k5rQ3d%68m.Z]G*F\lCUSlS48/(kTN^pJG!+MHi'0#S0$;aAg%dts6(pL5Gb;2rZXCrT=i,SGhDS0kKa'h)YR9Gep,!u';*CPP5uS7a$8&/&YUejq'BQu^[2;]S>L(st8,H\8R(`\e_3A6IYS+uX-1%)JU`Ip9`"Z*&gq62cjRd<bY>BAVm`B848;qk75[X$p1^';*8]/#X=l>Tpr9',JJB\hE(g,B41Lh#)7U]gjAa%@9ud18CisEENZCM%Fc^:XL0gie?a*Cj7TKh-!>PbY!I.3\V+'uB*d72,(m?>P<)+M$!]H&P'tLR(PT,I4DB/iu\tKq-To6\4.'E<;E8hu[]\=g!_aR80%C$qs<ld0>iX]*E&%\:UEPU^KSh1>N,Qr/2S%GB42.$tjQ;Q1Dt!lB?Ep&u21OAJ9]eAQI[N$o3.+lRhfB?nOhH'(W788oKYUDK;k%Fo_mpR!f!('8TVJ0jfTS\:>GUNW%@X6jF@,Zc\71$("XE8rDCV<bj5QqtD(-)Mmr88VX=A`fjpkG&_e&\(!m``aC[f4\AsoUL7R3%SP#fSW<23R0rMG)L6rf',&0<'`7'I<1GNump9[EQ/hTt/B4^;.%%W[Bqm%uU1RqofPuJ5OST,)(W)f>$NGDGRo\;V%^(I-TNpIXH%\J_uo$['=<8CZ]VeVOUfo"cD!:7:^W`amSYJApmbWP6Obf-3-n0^$=iJhC]cOPFf6aMip6\lt'`YnRYeVCPQ^eL4Bp++tdn>b*2K%p"72$0eo1f-.n>jR"\d;TuKX!`,LZk-ZikR80k96!YL]W^^V#tMiR)>Wcd$3lSt*'Qad"B0U'?n$UK%HTX5c'(QK*<i/jsDPqjVA%HltkA6s:=NiT_[.3@#g1"$8iM5^US*]Po"0:emmN=Nh/n8>Nn;N/6Y<A)'U#*"P%AQ&`WhQ#V_rlL;$q_q&6C)t<@/M)$LiHQ.]&%E$qQ;@miGM)c"9&PJE+je&#ga#*RL#[piN#X`P\kJEUHG3$!\iE5lLH'%=]P&h,CP,N@tC(cN'6CR%.QV8Ld!0c@IaX3PG+5ud.u%P>*O]\'>>9'?MoCn6%Rn/"D?Nj/5/:csA@ND$%3Udi)'7MUSLn+=1hJ,Ws<anrX)>S-Mq9+mkE?2$)'ZMEoBd9FQ\kP&IYF4hHpq%NfclsRM_/4h:RLr1DoLR9FSsFeR;:06#GXU2F,WCkCmF##oR3X!b.f<0eXMM@/N.'^t3%%3(>+0$mCc6JoDrsYYC9KA.#!Oi^h9$%L\<0XBf:][/oLV9M$u4o8<P^dVF=j75goa.lS+MIOf"$lfst<KGO(;)AMWMu_OVf$*;iA@fiqP"`2:n9/if,QHu<YY2ClmT-]i:!%73Wp.14^D,YiDkF%_G=_2Q^DS.m![PKPn#tOgu&pGcNe9P7Hc1agemb3WjN&&@H]6NP>,W5O,Hdjqr<pQ'p8Ur,KbaQnt_ckE`qk%\(b@E.8D)G+X`uo43e:VfElfD*Hl!@[KMMP*-Qs^DD@.S/TE"s#^FFHQuk;H9ZG>*e_sqlLTMS?%=%[(3:+Rl:E=Ui=u^:2Q)0X"%WD)K@V(/dF98\pPf9Sfm*Hl!t3"(mE-%DJ9:u#DZAqbl?J:3+7pFEP[`E#L6kWKVNGb[51'2Fr1%T^[+BM$.e?.G@I3eV88YA;S=%^/\&j:s1P0XQ6RKLoA(kbY",\$0L8[r]4I+;1Dl>+isdpk(]4"Am#1pf&W"/:*O-G3f/[hlSpQA?cQ@rq!5Fp\DN??Qh]lMoMUH1%*<rqEf/5h?Kr'JB$sr)"PDH0P:4O2HY7j0Uqs+BPU#cO[6+IRuKUj24UAd1SBW/[@!#k:/'7bi5rO@e82pHd$!DNeUXo3AeOf%a%%FoJtt?h\(+lf.@s.pOW2%eMJ;@T\+3DKl:&V1!`a=CI*_$puD*@)u(hG9g%%;N/iD05OOLm@H%lja[t0!lZp4";9.]m@H_@68:25%^%<.S7ci2+7u3A]TN]/N`CO7t8K'"C&kUnE\7tB1:)E/:Ok(\C7OP,!"2Lit8X.A^ZNN>P=U^Au5a*HO_C$[QH?sJX/C.;`oF_>B%-T[/OlW2jVP;7&V=u@'GG=$gMB,+g1e#4Zg,LFVD$mMf"Ce+XdB^LF:1Dh;]0)W>3GkH(cS^`T;JV:k$6t6;V)77k]0nC4XL,`R.%U@Lum'I<bsdZ$Xm2\9kqH`D^l%Ye-lH"p#V"[ea`6)KR<$O/nL3t!Pr%ISVD`S>"K<FsET=fGC^OPoMTQq!SO-`ltS<ngS^N[ZTQ%<^_nA0$I6QCKlR>]"i,^?'qP8NmZN7)XSCAA=+b#&?b\QM'f@"&>M3XF(Ia<L-S+c#>1hAgRmV2"?RL;"<dn]ihd+mXlpuh6UOhA%8``>i7&2[h]F_X4,]!u7d1G==B8.i8]MX:SK>NItE-.s&77-8Db"ZAAFaJp>)ej03d,1*;"/e]TVhhb3+6d5g`+c1?!$eZD8I]V>%P=.)j82.tU)(Mp\K\,!+7P]fC3;?%n3d$4s"E$2U!(392(_6a]W!PctI`G,".%D[k#B-M2`UI3,bVXKBLI*!g[C0V)6m3AL=r"m-%nI2:*3:NU`6aUTqp8LH5,U$>KN8RgD0!nm+MeMKM]DFWe3DiWgBGMd\PSXuo[\0IRFpq+kQme>Dg<aqBN,HY,hMO%.`cbCAcAL"P%0n(Au7eBI[X,`a.c].[5mM/Q#9T>$e7p;K8&>^S.gUENX\%h>o4ZM:d;U9W0:i"*MP!uT>;=5-okKW3W5=eU>W::YbZ!0aPRQ2Ph%FI&GZ\OM-,G)@+P4$,fps&3@2@6X"7m)lQbEE2"_L^1;IZbDEn_)DFL&L1^'>;+^^?M(_]9Z$"nPqB@pP),7).?P1XRW9X7\9:Eh%M$*qcW#/`\7sB0aduIYiV,+_8oPK1e-VBDC%F9aTe?SD]eTia/(ceV(aneSG^@OCF(]rTA,C$S/4A3f69[d_Z&eA0_F4*%Ac9qfj%7!6l+5u[Yrm1%G7h-=_37QS+*.^Md,6VWCgf:cTP-/s!p:WeLB[5TH$-W6=GP6*3lkX1"k$o:V7K^d?K"lX`7>'bhG'V\,s$+5k:%B?T`DVY.(`-JdjS8!/gA3N?kbP)7$8QH"41KVp))<*)]QmWOo.0rmDqGnWbS"EGg7(#b<3!1HLn#Z)-gO=MW?`2`Z2'1ptF9F!;S%0:b$Ebf'gDNe`:ZO-=/Yam-2u64cI-,7#HU@"<2@OdI9t&iCniXlGUu+G<-P&4.Y!Q#IuB8;A<.K!`6d4q^2ngZ4q*ZL_H&=LZCB%T6'@n5M)Yp"2ED*d4$r/[gYU-WT[&*UGel-g6G$R1(oGC"ahqp;brLj!:rkRL2aoW+N/:/P-pJEC(R<]n2lcCi?Z,\_K.1/c2a&=%F,tF_hbNQQm?b,L?YVufkJ8-:oru_<N\3FJAHZV7lc_tm)bsgVTppt\bULL]1l7$"8M*,ID"CWfKaXpeV$p!jC/_)M:(e+r5Gq69%FXA<dG##"HQVQP)C;?\7`[N3mFRGAC@kFUh]?%f./nK]HRfORq/h-%qp[/<*]M#75Un!%RA7N_--,9b08X5F&6'oM_As-r1Lk'<7%)j7^AJNkfT(>cQ5Q@Y4Z%$b!f6HsQ=X?@T:[!#"uWBK,g:iZtPA(&4?,sA.YWBk2mR%6_;2[OOqE(Q=g6ISm[OlV\*"<;PF*;;u1%'QH96C%7SeUNl1M+!n]<pIB4;E5*0TWM1/QWB3.gl0tOO5H4`j/h@;!@(_pOn3R"M!dmgoPQ2f\+!n]-/Vg)$AVO,#)*XuT8q7H;%N"Y'$4/2rR?qr:+;p(*P*?BNLnBor-2%i,7B2n&QlC:^9Q8<8tr6XmU[':ZufaCTin<Z%Q+XG&aO$RSj4Z>D@XSWkCV+F86M3k)[%Z?j#Y?/\+p<H,_/P?u6m!/=6KC0VSs<dPb\kSDlelOqtB<`"tHT&p&G.?Plh_TdnNkgYPdc"J-_B642c:k_gbXDq^T>_-(;k#)pE%Qu^pEfHrZN:si@gG?k[<K:uX+5ZR344%<jbm+VlAn<__9M)(qC$VP:L(D9A/P435@>p/&JjhK8\=r+LPY6N&k]hB$&@'1g_^hYtX%e-a[XK^#"<kUmI/K9-(RW(%t&TS/dH1@L="6]TaVGt'!5$dZ`Nl_bm5(+aQISnKrWYiri\8?qBn&rEj^ek"RVe&JD(F&f3h.NM&:%AmAR.8OTfo^&ulQNDg8",KQbt&`KYrdF6@oeff?/cIsm=:M3\kX9q0iLn:pl(&j=\_m,rpCBrSoiFT9j7q4]=/BeM1KA\[WoLm<1%OOD4eX;n?V8DoX=ri3Omi%LL,J^r$S$bR50Y^k0#LD&b2#_Jr/%.B*lHdF2[XUPZ51UUMq@0,Nm#t8&a'`PDnlC3G2#qcYi!g3s#%$Tb&&GR&tWPXb0`(`(c).WY$Fe?H`(AVL?h3LF4U>@!<hbDY?MUs'5`Gm><0E4!&(N!'W'=+DH"%r<b`'oXJJJ,)PT8EsW572!?$%;R:sP,j_^2NiIm5'dt7Ed9!P%#XmHU^noM7VR%^n1\S16Kon1"ZRKuSL!HRb,M<dVE,2mVfO'P6FVQOgp_0a@oqQZm'0#WTXVi8R%>Rf<o\OBoP%n3GLU^<X3'Ss-]>9q)'i!,M0bk,?(Sl]23T]0UE`5X:QOtkTi6kp=bODOYV2qO=p&qMIQql2uW"E">Tg8aP35SV1c%jbSEi2?oZhbVB_i$JYYs,rCLA/GHYn>df5LUb-DF";(_l3\Y&QfGq?`Wc#Gs.6jr!T/=a+VaO*16(1YA,-i7.@ONm&ZS@qB5a?\0%:oT2+B&c>n5b[=\dR<(A&):8#CQX:DO?aLk!C/K7]WkrJ2jhD%@ftqZYiH(lU*RoF5rsNN;8=$]M`<')Qu^ZMY<!Nc@&P(Sj_CS\%L=&?9.'\%5H](5MK9Q@^^sX-62G8,c"EY_B`o`p;`">2\J6]?8>I\nlEfcI(-gkG,hQ"mQe1hg4W=2T);''hG*#O[qYtT.F8c"8g%ae3d5Lei.#^l44f;K\F-pC1!?J<^+BTPXcj9-bLJ3)PnUO9&!A$7KOIA:W#H$/Qgs;A#H*#q/AM1dDb%U')1cHqY)*jebI:/[suh%NS[M;@3($/JM>P\oaUf,IlR*HJ<iq,EIC<]D$OrYl*OqgkUu!C-f"uD@lfmpEl=L],nW%H224EI@77'ZR%W_4H":?<F8<0e@b#TJ%k70"G@RY<7p?!386<P'Q=Ne"ogRD-4)BEtok0Di=fpbW]F"pIR=dURcMHlgn=^?!@3G3>,j1:f7S"J"[;q^tNS?p_0/%eZXerO4"%[O8c35pPmmAQsGTa6!fs%eA7j/h1f1_&I#]<g@m^i*DN?UGT,+lU=ObS%tXP):Nf&+1Qhp7I@`[4A5h9)fuYSR#u3[[4A@YAHa8D%>*PN8_X;4sS^PqYBn>Znkk)A$IO#EZ-c6K_HC&t`a>oR)mOLus.)0bfh]_I:KYN@u]dXO\H5G,0Ytu`?iusA92qpKhH/Y;>P%a'K%%LkHU3"[(]"uQ+XN4(HDB*Yr_hrW#>7],rC\,DOBi(YINo.=2..8d,B]!B>N#<LHX;YZ^^V!rRd,EQ@p39YfR"B,/em@M\qn4o&\%<#Ner8k9j!Y-Y9SE75G;o$MDT0sG!R\U8<l2.V<Sia#KmSO&Od,"_t`69-FN,61SN3Oj"-K7uQ7lr\!24+f"/6Hc<sbCWhc]q^:*%k0jeKg4=fQUVYl)-[,%0HK%U+RIq=p$st&eSHZF-TQV+#_26u%:X&2*DsuD'jLC35([OBQMh!oXXlcILh4#c@YRpt(@`T>C49Z+,%+>4k@JsG=TIii"n>'5/4fbpp4]-TUR6roL?ZKkII:KR.5i6e<VI)R+*Fl+4h(]G'?j6jB0IL,W.Mf8'-]=59<5P^5ts88[?GPcj`%S,^50\pq<ghtV\NPD/=/hL<#GrciM_3K37L(Os!*8DCAhG,K/%J,;$k+8P^qJ_IMKV>Ib[>YUh'#uO>Sf@d0pj.sE<Tgi$6Xt`Z4%UQB$uKnSaD0^)CnZ/MY8nG?KN3cW]g>j),i2R-p7eM,O(cnI6%jY.Xs=d)3',dJm`9Li[bStG.Z3mjD?g+^uIm0gh=5Ua8H@fqgU%12c3Y<)k+#!43\/Qai8Ud,Sdab(J4G&6^3Pc.l1mblPibX[1EXY]-$6I0=tUO3G_>ce4hV1Yh4I"sjVdiDeu*\.SdVM$@5'Ztg6a%%R<RgKtJ&S67,),]!'TtVPN)]+r!mtW7.1EK6Di7R'Ju5%U/NfUe*ANS6;P\"?MF$_oW*8%so@X%WTkna!OG&!<a&#P8Q>lbuW0A%4T%s0W)HnnFa_dl.b^T`DQ*UKBk]8OKP](ip[.!uabY`0n[k'./41Er^THd\R[+-nJe!ABAV\t"^u<3b\"UFC.5Cg>e+cp"Me)bM%2`CY7LQ".!NG@)J!"q&V2IEXb,oJor`$dm(d#=c<$RSj25iA=1E16`M+K*ZoK-UlRUH4r8G:,DAk&F<O[Rjo9??g]:W#5N<:5+Yg%qZ8t"T.a)57#)lhQ.MgSY(19<X[goUiOb#&n'"V%L9iD;Ij>Zu!!%@57L^')EsH>`G"j9O.HbMf7fbhCc6erZaDJAU:@[GcV'chd%1tPis?n)'^1s+0FGtT4L'D@)4=Bj(5q!uFTVG^hj&H`^J/U<o-0aTlH3g=\8)0@hS:*n`OApp7gZ<lf^M3)`@rJCfELJQGjlfL(Y%f2teB-usucZ?CEd\E1()'l#]]&j&PD8PN"p#A-7i7cjj!VX0ENDNkea\Z"Lr$'g6`!W#XT(KfN->6%lg)H\jKoMuF04,K%BS#*+a%4t#=k$A!5\`=3Le?b'^5:(+c#I*bgu9q>R^G`HEBE("Z@R!QliaGHl4FMkO+0[\uj6ESMK2P:W!";*u/:ARI)m067O4A=7?&5"WB%$8G3c+Z+>;Im!#u'*8j/Pg!I(&5#D?)51R^'d[?2+K%`e1WSX.1nFf\3(_h#F)9RWj6*[HD>em!gHPQ.XcNBP9HX[Va&A6YF'W^b%G&bq!5(8E*1k0-B#Rq).]Lt+-&91.hQqjHo>K([>nga\.ZGF(!<5TCR6GkcKQc%Tpc_tYK98lqG<+V)2I@<P=Z7V/QjE9-/e@2Ls%P/>*_!/toc0e%rnTP.49J2<dk<;2["ZkGX@NKjK$!8s4USI(qlS^)gu&aU1t/#M9GfQSr)*5:m^6mj#uUq5FQY_qN>!"mIrLQE'?%F:-+&MI4kpkQLBf8pdSUpMSR@e8U\.$Sj-],nOLb"!K]/5m\HU%;AV-ZS%_\!]%`b>rKKE=O&N]:t3EhZQpqE1aGB;N`s$A>F'0(%Pc.ba9-<HsK35TrcD@,`.8`?`VaLQZ+XN$?Xjr_glR>,WO)qr@bY:]k.[XC*%RH+QQ7`C^-YDVih9-G,OANCm$q#U\!/;q.$37u*%/d2Z08='B8r0[isR8#f:ku%KuGk)P6#hfcUX[.gAA.)?B<"q-2qlrJT3aq<,WI%lDSKpuGOA:Q+EQ_7Z_Xdub!2)Y%^aIkBQ6[1G%&X2e%H$N+gB*r=8&-W8)7=81&m0'\;/E`G"2F&MtKU9#*i!Q]Vbccihi(Dd'c<b)-5C&^a'elqTF;5H(=F&\s+Jg@T$&B#J`lgqK%($JS?&C3\K<qmYpiR4$U8$j3XP#.(%Zbc/q_lUX6'PnCu.VG)'fQ9%<'"HIpb#bfWlJ%.lpoGd$&40tC-oWTA$IsgrX3_a?=s8`,%#XMPo=>4U'eO/)rS0<b>JFZ!??B^+XGT9:f-pQ1dlQZ[6:+bS%T*M6Z/DJZ2+WUuVpXCtNAuaBaMl.c8in<HHCIbS:L'MSlS;<)J%`QKj`&oD=F:k4FVJY;E&FZWu78ZEV6&]#=#Qsp[XGJN9r8LSPq[Moe+jWT:&Hm&c(M.6fXBKH2!W&?o:h1-'#LCfXJKcl&FOWb"(%m=8oIg;"F8#S@=k-`=]8d83/)#rs<meCfs_qt&!,P");Y3#h/)nm=+DE0nl[IGP=/2T<puiK*DW:h6^UL<%sidZ>_u0&cu'-6:s]%C<0]d:k=(fB-%*R]T95I>lZ&(XL^)N#pb['!,C`eJI:bcG&n+'1Ke1cEh[?!B'p<Y\n9];hIPZG0?q?Tm8t$9.^q*:?Z+GU69o(s%!E@O0#=@9caGsF@J,F4G$u1>Bm9$.V,Y4A1e-rQ<(!n+S`oH:)1^WRUmZ`o;);I4k&o2cRdl2Z)QR5$/6ph`Uf(%rO<j(HpEK3L$%R_Bq$)7*qYmmO<nV'Ql)RLMZoW&/7Gb&%+b(=bD@$II@/b-m?r7l`Yr$X"PKoV\.t#'GkC:lQVFiL"I$p28\s2>kuec"rjV%GSap%mr":$2CDDCQiPWL7pf*RnBu.+4fsQ2`@u6U6=:_F&kth@N^.PPE2Aqab.u0ac])CXFh\5%3Y*0q^:?/<#-#GC6%fdr&1%lIoUE)4%k$c/j([,J`+>juoL_-"_U;YV$#]'c_Pd=25EC3hV@A/@.H<`"#.k+A!MTBno'N')\U<s>\dN.4TTH"7S)0[i%%6[14X$A\:Gm*%.%#b.ZH/Dgu38g'7Ij8tf"PTf':cq3#!"50]>!2ob9WCA9[7M.4g.oA^n!=D[liRKn]X3<GReLq78=T]S'oZjPW^]R`GU2$PDgMSm^%W#;h;h,5(HSqbl(%j^(RcP*?7i,UG4d-;[MLLpTh9SAAa%c,"M^p&?0+6rZ>E]h\M%i>i<XZ+9&H.*!\&1ENAU2h2<,0'e&c_YHj%#]u:Q>*Y"=*gR'%!Vlp1KPCc''L$f(iIMbF_g!<QApGNV@n3(KiIR(]idj?(jahphPfR"#'B=YZ"Ag6qNKa\%=p)SU_3O"IX>7##%@NGg2ebph2kWEYm,%goqN!D\R5q`J15a4Olcu6cjRthG>j=F\knN[@<L_-"_U;YV$#]'c_PTOYJ(H7!P&fsSgTLZs'WI'+Emso4"%-eV&DCa<ktYT[i]1L8mmEs,1m<(?[9;H2#^%h(O,1^Rk='L(gNAs!W.K]<<M8-A.!htUNUbPU6t!$^KB8C@`C6[*_?K8jBD$h*G(%XRYOI+)'&&BuaH]%"JX9Aq9R#-SW:HZ8X<H<B9TV+(1]fnUukFX:71_?0=M'D9,*n*">EbVXH#SCjg[^66ZF%\5;ZS/'t'FkfscW%!;8G(Q$-KM8P#Ou_H5SMg&M_8KNs>Y%b$0YEIP"m&-WWgag)<tSdS\UmX&5^1a:r\"VD*o6A(T<C+,&2\>J4%7>2FmVt5>?0rh;H%AmdOJ%3HN7J_>-Vpu!8$)em>XKF\%gd>?44^noMJ?P_>b&i_?gi,\A@"+MZE5G9K7jXlCLJ5Ab\U`iQBC:+?OF'X<JRR"^Kb&Hq5%3dC08pZm'^MmPV'i^.8*NqOQhT*toXOY@8+"/$YuO!^t'IZ]pc56<bF2henL#&R-6`B\D:2C3%rnn:p"6fF\)6nl'rFoX?qD1Dn:%UuOdf)e-[]lh\GRLJ(#<64@df:[Y;RG'*pl"C'$j]=m,HjIMBV6JajTo$5`lT=hMNEd)FSl9Pjos8MZ=qdri2+4dg4$*MU,MJ;&N%Rc.pO<rVsT#7OnKL$>tQQ*s&,mH'6b]BbNEJ%EA)\pAdG]=YZNX'aoCh+qb13bS)Na?PkZGkkH!]uO=:@kZGTnMd)S>R)!MhL>5Z%gfEBA"=EkhGPg@BcdP4YMI1STP@%UDJ*g<FYa"ArIhTN/]m8dZg$rAm=8hO_pAN%fh;=PXoL`Y-nG+aHZa_So]mBMBh1'kkeR.*#%.W,UJp]7Ypo>hYdfk&N<?<>;](di/Oq"3@p[W!,0C_9Xs\D$Umi?GeI_Xq9DnV^#J8Y:*'558dP7k@FqnB=YpAQK5qgQ0]l%^[)9%j!J!2`mdaRM]!:gPTRS@B%^MIXKmaAhNMAph*6Dg&aej+Z[-uGYJ!pshIcCLqKN6UgWFBYqH%i&k1m'%5f[C,jEQVIIO,?Z9H4RM%KI.VUk\nZoE6Ir$7e*mVbLr<&JQC/L4GmiJYT2N&`-33f42R[<Z`=pDjeub;i[XB`._=;5FN:S<'j#Ac=(0Y5<Oh<>kgXE9cWBiU%i(!M%GRCJeT#.L+X@:7K]6K4g;hbTs]kD7ugH&j!G4[!;H&e6KJ%_(j.CpN=r4RL$ffdP$k$.ame[j=,eX^a325?oIj[Uq(ZY6QC%o#(XXV6]WV1[d&gZ]0*BG",oF:sC`<eTomfS,E4IeCe!V6,mKR4`>JpLATJDZbPK7a0&LE(+ki>Qh[iPDOIYDYI2g0=DP8^rE*.o%MrOTsJ6[e-B03LLcUdfjEE9-G+E^f^Oc/=e%>l7>a-0K?ltYO,^`jhTM]V'lYq=Xo_p;N%LkZ/<PHS*`_VRQ_-D$/K=,.e4>fNP)%8rM^jg2XY4a2Q5_>V%+[lSuq]eY_AI\E91?>'W]m,.r]cde/p\!]<KO="A1S<"EB??X5d@q-ETqDf4IQQTCa'^NfJ=qs+d)+7H@N%I(pI>5%"?$]=bkk%B]!rm;"==h!I:Tq/j*Xr;?/as+V/9aXI/Tff/s+p>Z,4LM:Q~>%AI9_PrivateDataEnd